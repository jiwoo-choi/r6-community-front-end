{"version":3,"sources":["Component/@2Content/Contents/Post/Edit/R6EditorReactor.tsx","Component/@2Content/Contents/Post/Edit/R6IDSearch/R6IDSearchReactor.tsx","Component/@2Content/Contents/Post/Edit/R6IDSearch/empty-box.svg","Component/@2Content/Contents/Post/Edit/R6IDSearch/R6IDSearch.tsx","Component/@2Content/Contents/Post/Edit/R6Editor.tsx","Component/@2Content/Contents/Post/Edit/R6PostWrite.tsx"],"names":["EditorinitialState","isLoading","isError","data","undefined","platform","id","R6EditorReactor","action","type","concat","of","this","postUpload","title","content","topic","pipe","map","value","postId","response","catchError","err","state","mutation","newState","formData","FormData","append","R6Ajax","shared","post","Reactor","R6SearchinitialState","isActive","result","resultQuery","R6IDSearchReactor","text","fetchID","takeUntil","filter","res","list","query","length","forkJoin","getJson","catchErrorJustReturn","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref3","_ref4","_ref","svgRef","props","height","viewBox","width","ref","ForwardRef","forwardRef","styled","div","R6IDSearch","reactor","subject","Subject","distinctUntilChanged","tap","dispatch","debounceTime","subscribe","deepDistinctUntilChanged","skip","setState","index","className","role","aria-labelledby","Fragment","cx","cy","r","style","getCell","event","next","localReactor","currentState","Icon","name","size","color","placeholder","onFocus","onBlur","onChange","handleChange","bind","getList","console","warn","React","PureComponent","FLUIDDIV","BUTTONGROUP","CONTAINER","EDITORAREA","R6Editor","editorRef","createRef","titleRef","fireImmediately","insertTable","pageId","history","push","blob","callback","current","getInstance","getInstanceofEditor","getHtml","WD","wins","losses","Math","floor","KD","kills","death","newone","rankString","mmr","maxRankString","maxMmr","setHtml","getState","Input","initialEditType","Button","disabled","onClick","goBack","loading","positive","isLogined","html","inputRef","Component","withRouter","R6PostWrite"],"mappings":"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","file":"static/js/9.fe2c96a2.chunk.js","sourcesContent":["import { RANKBYREGION, RANKAPI } from \"../../../../../Util/Entity\";\nimport { Reactor } from \"reactivex-redux\";\nimport { Observable, of, concat } from \"rxjs\";\nimport { Topic } from \"../../../../@0ForumReactor/ForumReactor\";\nimport R6Ajax from \"../../../../../Library/R6Ajax\";\nimport { map, catchError } from \"rxjs/operators\";\nimport { AjaxResponse } from \"rxjs/ajax\";\n\nexport const SELECTRANK = \"SELECTRANK\"\nexport const CLICKREGISTERBUTTON = \"CLICKREGISTERBUTTON\"\nexport const CANCELREGISTERBUTTON = \"CANCELREGISTERBUTTON\"\n\nexport interface SELECTRANK {\n    type: typeof SELECTRANK;\n    data: RANKAPI,\n    platform: string,\n    id: string,\n}\n\nexport interface CLICKREGISTERBUTTON {\n    type: typeof CLICKREGISTERBUTTON;\n    content: string,\n    title: string,\n    topic:Topic,\n}\n\n\nexport type EditorAction = SELECTRANK | CLICKREGISTERBUTTON \n\nexport const POSTUPLOAD = \"POSTUPLOAD\"\nexport const SUCCESS = \"SUCCESS\"\nexport const FAILRUE = \"FAILRUE\"\nexport const ADDRANKDATA = \"ADDRANKDATA\"\nexport const SETLOADING = \"SETLOADING\"\n\nexport interface POSTUPLOAD {\n    type: typeof POSTUPLOAD;\n    postId: number;\n}\n\nexport interface ADDRANKDATA {\n    type: typeof ADDRANKDATA;\n    data: RANKAPI,\n    platform: string,\n    id: string,\n}\n\nexport interface SETLOADING {\n    type: typeof SETLOADING;\n    isLoading:boolean;\n}\n\nexport interface SUCCESS {\n    type: typeof SUCCESS;\n    postId: number;\n}\n\nexport interface FAILRUE {\n    type: typeof FAILRUE;\n}\n\ntype EditorMutation = POSTUPLOAD | ADDRANKDATA | SETLOADING | SUCCESS | FAILRUE\n\n// --- state\nexport interface EditorState {\n    isLoading: boolean,\n    isError:boolean,\n    data?:RANKAPI,\n    platform: string,\n    id: string,\n}\n\nexport const EditorinitialState: EditorState = {\n    isLoading: false,\n    isError:false,\n    data:undefined,\n    platform: \"\",\n    id: \"\",\n}\n\n\nexport default class R6EditorReactor extends Reactor<EditorAction, EditorState, EditorMutation> {\n\n    mutate(action: EditorAction): Observable<EditorMutation> {\n        switch( action.type ){\n            case \"CLICKREGISTERBUTTON\" : \n                return concat(\n                    of<EditorMutation>({type:\"SETLOADING\", isLoading:true}),\n                    this.postUpload(action.title, action.content, action.topic)\n                    .pipe(\n                        map<AjaxResponse, EditorMutation>( value => ({type:\"SUCCESS\", postId: value.response.postId})),\n                        catchError( err => of<EditorMutation>({type:\"FAILRUE\"}))\n                    )\n                )\n            case \"SELECTRANK\":\n                return of<EditorMutation>({type:\"ADDRANKDATA\", data: action.data, id: action.id, platform: action.platform})\n        }\n    }\n\n    reduce(state: EditorState, mutation: EditorMutation): EditorState {\n        let newState = state;\n\n        switch(mutation.type) {\n            case \"SETLOADING\":\n                newState.isLoading = mutation.isLoading;\n                return newState;\n            case \"ADDRANKDATA\":\n                newState.data = mutation.data;\n                return newState;\n            case \"POSTUPLOAD\":\n                //postupload\n                return newState;\n            default:\n                return newState;\n        }\n    }\n    \n    postUpload(title: string, content:string, type: Topic){\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('content', content);\n        formData.append('type', type);\n        return R6Ajax.shared.post(`post`, formData, \"multipart\", true)\n    }\n}","import { RANKAPI, RANKBYREGION } from \"../../../../../../Util/Entity\"\nimport { Reactor } from \"reactivex-redux\"\nimport { Observable, of, concat, forkJoin } from \"rxjs\"\nimport {  catchErrorJustReturn } from \"reactivex-redux\"\nimport { filter, takeUntil, map,  } from \"rxjs/operators\"\nimport R6Ajax from \"../../../../../../Library/R6Ajax\"\n\nexport const WRITETEXT = \"WRITETEXT\" as const\nexport const INVIS_SEARCHLIST = \"INVIS_SEARCHLIST\" as const\nexport const CANCELSEARCH = \"CANCELSEARCH\" as const\nexport const CLICKSEARCH = \"CLICKSEARCH\" as const\n\nexport interface WRITETEXT {\n    type: typeof WRITETEXT;\n    text: string,\n}\n\n/** 이 Action은 존재하지만 유저가 볼 순 없습니다. 시간으로 인해 Trigger됩니다. */\nexport interface INVIS_SEARCHLIST {\n    type: typeof INVIS_SEARCHLIST;\n    text: string,\n}\n\nexport interface CLICKSEARCH {\n    type: typeof CLICKSEARCH;\n}\n\nexport interface CANCELSEARCH {\n    type: typeof CANCELSEARCH;\n}\n\n\nexport type SearchAction = WRITETEXT | INVIS_SEARCHLIST | CANCELSEARCH | CLICKSEARCH\n\nexport const FETCHLIST = \"FETCHLIST\"\nexport const SUGGESTIONACTIVE = \"SUGGESTIONACTIVE\"\nexport const SETLOADING = \"SETLOADING\"\nexport const UPDATETEXT = \"UPDATETEXT\"\n\nexport interface SETLOADING {\n    type: typeof SETLOADING,\n    isLoading: boolean,\n}\n\nexport interface FETCHLIST {\n    type: typeof FETCHLIST,\n    list: RANKBYREGION[][],\n    query:string,\n}\n\nexport interface SUGGESTIONACTIVE {\n    type: typeof SUGGESTIONACTIVE,\n    isActive:boolean,\n}\n\nexport interface UPDATETEXT {\n    type: typeof UPDATETEXT,\n    text:string,\n}\n\ntype SearchMutation = SETLOADING | FETCHLIST | SUGGESTIONACTIVE | UPDATETEXT \n// --- state\n\nexport interface SearchState {\n    isActive: boolean,\n    isLoading:boolean,\n    isError:boolean,\n    result: RANKBYREGION[][],\n    resultQuery:string,\n    value:string,\n}\n\nexport const R6SearchinitialState: SearchState = {\n    isActive: false,\n    isLoading: false,\n    isError: false,\n    result: [],\n    resultQuery:\"\",\n    value: \"\",\n}\n\n      // return concat(\n                //     // of<SearchMutation>({type:\"CHANGETEXT\", text: action.text}),\n                //     // of<SearchMutation>({type:\"SETLOADING\", isLoading: true}),\n                //     this.fetchID(action.text).pipe(\n                //       takeUntil( this.action.pipe(filter( value => { \n                //           return value.type === \"CANCELSEARCH\" || value.type === \"WRITETEXT\" \n                //         }))),\n                //       map<RANKBYREGION[][], SearchMutation>( res => ({type:\"FETCHLIST\", list : res})),\n                //     ),\n                // )\n\n\nexport default class R6IDSearchReactor extends Reactor<SearchAction, SearchState, SearchMutation> {\n    \n    mutate(action: SearchAction): Observable<SearchMutation> {\n        switch(action.type) {\n\n            case \"WRITETEXT\":\n                return of({type: \"UPDATETEXT\", text: action.text})\n          \n            case \"INVIS_SEARCHLIST\":\n                return  concat(\n                        of<SearchMutation>({type:\"SETLOADING\", isLoading: true}),\n                        this.fetchID(action.text).pipe(\n                          takeUntil( this.action.pipe(filter( value => { \n                              return value.type === \"CANCELSEARCH\" || value.type === \"INVIS_SEARCHLIST\" || value.type === \"WRITETEXT\"\n                            }))),\n                          map<RANKBYREGION[][], SearchMutation>( res => ({type:\"FETCHLIST\", list : res, query:action.text})),\n                        ),\n                    )\n\n            case \"CANCELSEARCH\":\n                return concat(\n                    of<SearchMutation>({type:\"SETLOADING\", isLoading: false}),\n                    of<SearchMutation>({type:\"SUGGESTIONACTIVE\", isActive: false}),\n                )\n\n            case \"CLICKSEARCH\":\n                return concat(\n                    of<SearchMutation>({type:\"SUGGESTIONACTIVE\", isActive: true}),\n                )\n            }\n            \n    }\n\n    reduce(state: SearchState, mutation: SearchMutation): SearchState {\n\n        let newState = state;\n \n        switch(mutation.type) {\n\n            case \"FETCHLIST\":\n                newState.result = mutation.list\n                newState.resultQuery = mutation.query;\n                newState.isLoading = false;\n                if (mutation.list.length === 0) {\n                    newState.isError = true; \n                }\n                return newState;\n\n            case \"SETLOADING\":\n                newState.isLoading = mutation.isLoading\n                return newState;\n\n            case \"SUGGESTIONACTIVE\":\n                newState.isActive = mutation.isActive\n                return newState;\n\n            case \"UPDATETEXT\":\n                newState.value = mutation.text\n                return newState;\n        }\n    }\n\n    fetchID(id: string) {\n\n        return forkJoin(\n            R6Ajax.shared.getJson(`http://r6-search.me/api/stat/rank/uplay/${id}`).pipe(\n                catchErrorJustReturn([] as any)\n            ),\n            R6Ajax.shared.getJson(`http://r6-search.me/api/stat/rank/xbl/${id}`).pipe(\n                catchErrorJustReturn([] as any)\n            ),\n            R6Ajax.shared.getJson(`http://r6-search.me/api/stat/rank/psn/${id}`).pipe(\n                catchErrorJustReturn([] as any)\n            ),\n        )\n        //: Observable<RANKBYREGION[][]> \n        // return R6StatAPI.shared.getGeneralAPI(id)\n        // .pipe(\n        //     // delay(500),\n        //     // flatAxiosResultAndCast(),\n        //     // catchErrorJustReturn([] as any)\n        // )\n    }\n\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m72 8.5-64 168h128c0 61.855469 50.144531 112 112 112s112-50.144531 112-112h128l-64-168zm0 0\",\n  fill: \"#acabb1\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m248 288.5c-61.855469 0-112-50.144531-112-112h-128v192h480v-192h-128c0 61.855469-50.144531 112-112 112zm-160 48\",\n  fill: \"#414042\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#231f20\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m495.480469 173.652344-64-168c-1.183594-3.105469-4.160157-5.152344-7.480469-5.152344h-352c-3.320312 0-6.296875 2.046875-7.480469 5.152344l-64 168c-.292969.824218-.4492185 1.6875-.4648435 2.558594 0 .105468-.0546875.183593-.0546875.289062v192c0 4.417969 3.582031 8 8 8h480c4.417969 0 8-3.582031 8-8v-192c0-.105469-.054688-.183594-.054688-.289062-.015624-.871094-.171874-1.734376-.464843-2.558594zm-417.96875-157.152344h340.976562l57.902344 152h-116.390625c-4.417969 0-8 3.582031-8 8 0 57.4375-46.5625 104-104 104s-104-46.5625-104-104c0-4.417969-3.582031-8-8-8h-116.390625zm402.488281 344h-464v-176h112.265625c4.1875 63.046875 56.546875 112.042969 119.734375 112.042969s115.546875-48.996094 119.734375-112.042969h112.265625zm0 0\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m56 328.5h-8v-24c0-4.417969-3.582031-8-8-8s-8 3.582031-8 8v32c0 4.417969 3.582031 8 8 8h16c4.417969 0 8-3.582031 8-8s-3.582031-8-8-8zm0 0\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m104 328.5h-16c-4.417969 0-8 3.582031-8 8s3.582031 8 8 8h16c4.417969 0 8-3.582031 8-8s-3.582031-8-8-8zm0 0\"\n}));\n\nvar SvgEmptyBox = function SvgEmptyBox(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"496pt\",\n    viewBox: \"0 -59 496 495\",\n    width: \"496pt\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEmptyBox, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/empty-box.3d8bbcac.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport './R6IDSearch.css'\nimport {  Subject, } from \"rxjs\";\nimport { debounceTime, map, tap, distinctUntilChanged, skip } from \"rxjs/operators\";\nimport {  deepDistinctUntilChanged } from \"reactivex-redux\";\nimport R6IDSearchReactor, { R6SearchinitialState, SearchState, SearchAction } from \"./R6IDSearchReactor\";\nimport { isError } from \"lodash\";\nimport {R6RankIcon} from \"../../../../../@Reusable-Component\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EmptyBox } from './empty-box.svg'\nimport { RANKBYREGION, GENERALAPI } from \"../../../../../../Util/Entity\";\nimport { Icon } from \"semantic-ui-react\";\nimport R6EditorReactor from \"../R6EditorReactor\";\n\nconst RANK_CONTAINER = styled.div`\n    display:flex;\n    flex-direction:row;\n`;\n\nconst RANK_PART = styled.div`\n    display:flex;\n    flex-direction:row;\n`;\n\nconst CONTENT_PART = styled.div`\n\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n\n    #rank {\n        font-size:1.5rem;\n        color:black;\n        margin-bottom:7px;\n    }\n\n    #mmr .mmr-tag {\n        font-weight:bolder;\n        color:black;\n    }\n\n    #mmr .mmr-value {\n        font-weight:normal;\n        color:darkgray;\n    }\n    \n`;\n\n\n\nclass R6IDSearch extends React.PureComponent<{reactor? : R6EditorReactor}, SearchState> {\n\n    reactor?: R6IDSearchReactor;\n    subject!: Subject<any>;\n\n    constructor(props:any) {\n        super(props)\n        this.state = R6SearchinitialState;\n    }\n\n    componentWillMount(){\n        this.reactor = new R6IDSearchReactor(R6SearchinitialState);\n        this.subject = new Subject();\n\n        this.subject.pipe( \n            distinctUntilChanged(),\n            tap ( value => this.reactor?.dispatch({type: \"WRITETEXT\", text:value })),\n            debounceTime(500),\n            map( value => ({type:\"INVIS_SEARCHLIST\", text: value } as SearchAction ))\n        ).subscribe(this.reactor?.action)\n    }\n\n    componentDidMount(){\n\n\n        this.reactor?.state.pipe(\n            map((value) => value.isLoading ),\n            deepDistinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            isLoading => this.setState({isLoading})\n        )\n\n        this.reactor?.state.pipe(\n            map((value) => value.result ),\n            deepDistinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            result => this.setState({result})\n        )\n\n        this.reactor?.state.pipe(\n            map((value) => value.isError ),\n            deepDistinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            isError => this.setState({isError})\n        )\n\n        this.reactor?.state.pipe(\n            map((value) => value.isActive ),\n            deepDistinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            isActive => this.setState({isActive})\n        )\n\n        this.reactor?.state.pipe(\n            map((value) => value.value ),\n            deepDistinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            value => this.setState({value})\n        )\n\n        this.reactor?.state.pipe(\n            map((value) => value.resultQuery ),\n            deepDistinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            resultQuery => this.setState({resultQuery})\n        )\n\n\n    }\n\n    getCell(list : RANKBYREGION[][]) {   \n        let lists = [\"PC\",\"PS4\",\"XBOX\"];\n        return list.map( (value, index) => {\n            if (value.length > 0) {\n                return (\n                    //this.props.reactor?.dispatch({type:\"SELECTRANK\", data: value[0]})\n                    <div className=\"autocomplete-cell\" key={\"CELL_\"+index} onMouseDown={()=>{ this.props.reactor?.dispatch(\n                        { \n                            type:\"SELECTRANK\", \n                            data: value[0].rankStat,\n                            id: this.reactor!.getState().value,\n                            platform: lists[index]\n                        })}}> \n                        <div className=\"tag\">\n                            {lists[index]} 서버 \n                        </div>\n                        <div className=\"rank-description\">\n                        <RANK_CONTAINER>\n                            <RANK_PART>\n                                <R6RankIcon rank={value[0].rankStat.rankString} size={70}></R6RankIcon>\n                            </RANK_PART>\n                            <CONTENT_PART>\n                                <div id=\"rank\">{value[0].rankStat.rankString}</div> \n                                <div id=\"mmr\">\n                                    <span className=\"mmr-tag\"> MMR : </span>\n                                    <span className=\"mmr-value\" style={{marginRight:'5px'}}>{value[0].rankStat.mmr}</span>\n                                    <span className=\"mmr-tag\"> W - </span>\n                                    <span className=\"mmr-value\" style={{marginRight:'5px'}}>{value[0].rankStat.wins}</span>\n                                    <span className=\"mmr-tag\"> L - </span>\n                                    <span className=\"mmr-value\">{value[0].rankStat.death}</span>\n                                </div> \n                            </CONTENT_PART>\n                        </RANK_CONTAINER>\n                        </div>\n                    </div>\n                    )\n            } else {\n                return []\n            }\n         })\n    }\n\n    getList(list: RANKBYREGION[][], text: string, isLoading: boolean, resultQuery:string) {\n\n        if (!text || (text && !resultQuery && !isLoading)) {\n            return( \n                <div className=\"search-result\">\n                    <span role=\"img\" aria-labelledby=\"hello\"> 👋 레인보우 식스 시즈 전적검색창 입니다. </span>\n                    <div> 바로 검색하여 본인의 전적내용을 추가해보세요. </div>\n                    <div> Powered by R6-search.me </div>\n                </div>                    \n            )\n        }\n\n        if (isLoading) {\n            return(\n                <React.Fragment>\n                    <div className=\"loading-container\">\n                        <svg className=\"loading-circle\">\n                            <circle cx=\"50%\" cy=\"50%\" r=\"25\"></circle>\n                        </svg>\n                        <div className=\"search-loading\"> \"{text}\" 를 R6-Search에서 검색중...</div>\n                    </div>\n                </React.Fragment>\n            )\n        }\n\n        if ( (list.filter( value => value.length === 0 ).length === 3) && resultQuery) {\n            return (\n                <div className=\"search-empty\">\n                    <EmptyBox style={{height:\"120px\", width:\"100%\"}}></EmptyBox>\n                    <div> \"{resultQuery}\" 님의 검색결과가 없습니다! </div>\n                    <div> 검색어를 확인해주세요. </div>\n                </div> \n            )\n        }\n\n        return (\n            <>  \n                <div className=\"search-result\">\n                    <div> \"{resultQuery}\" 님의 검색결과 입니다. </div>\n                    <div> 클릭하여 전적을 추가하세요.  </div>\n                    <div> Powered by R6-search.me </div>\n                </div>\n                {this.getCell(list)}\n            </>\n        )\n        \n    }\n\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.subject.next(event.target.value)\n    }\n\n    render(){\n        if (!this.props) {\n            console.warn('R6IDSEARCH NOT LOADED')\n            return null\n        } else {\n\n            const localReactor = this.reactor!;\n            const { value , result, isLoading, resultQuery, isActive } = localReactor.currentState;\n\n            return(\n                <>\n                    <div className=\"search-input\">\n                        <Icon name={\"search\"} size={\"big\"} className={\"search-input-icon\"} color={\"green\"}></Icon>\n                        <input \n                            className=\"r6idsearch\"\n                            placeholder=\"전적을 바로 검색해보세요.\"\n                            // onChange\n                            onFocus={()=>{localReactor.dispatch({type:\"CLICKSEARCH\"})}}\n                            onBlur={()=>{localReactor.dispatch({type:\"CANCELSEARCH\"})}}\n                            value={value}\n                            onChange={this.handleChange.bind(this)}\n                            />\n                            { isActive && \n                                <div className=\"cellContainer\">\n                                    {\n                                        this.getList(result, value, isLoading, resultQuery)\n                                    }\n                                </div> \n                            } \n                    </div>\n    \n                </>\n            )\n        }\n    }\n}\nexport default R6IDSearch\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.isLoading ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     isLoading => this.setState({isLoading})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.result ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     result => this.setState({result})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.isError ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     isError => this.setState({isError})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.isActive ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     isActive => this.setState({isActive})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.value ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     value => this.setState({value})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.resultQuery ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     resultQuery => this.setState({resultQuery})\n        // )\n\n\n// this.getList([], this.state.value , this.state.isLoading, this.state.isActive)\n\n\n  \n ","import { Editor } from '@toast-ui/react-editor'\nimport React  from 'react'\nimport { Button, Loader, Dimmer, Segment, Portal } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport R6EditorReactor, { EditorinitialState, EditorState } from './R6EditorReactor';\n\nimport styled from 'styled-components'\n\n// import R6IDSearch from './IDSearch/R6IDSearch'\nimport { RANKAPI } from '../../../../../Util/Entity';\nimport ForumReactor, { ForumReactorProps, ForumReactorProp } from \"../../../../@0ForumReactor/ForumReactor\";\nimport R6IDSearch from './R6IDSearch/R6IDSearch';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { interval } from 'rxjs';\nimport R6Ajax from '../../../../../Library/R6Ajax';\nimport { map, distinctUntilChanged, filter, skip } from 'rxjs/operators';\nimport { deepDistinctUntilChanged } from 'reactivex-redux';\n\nconst FLUIDDIV = styled.div`\n    width:100%;\n    margin-bottom:10px;\n`\n\nconst FLUIDDIV1 = styled.div`\n    width:50%;\n    margin-bottom:10px;\n`\nconst BUTTONGROUP = styled.div`\n    display:flex;\n    justify-content: flex-end;\n`\nconst CONTAINER = styled.div`\n    display:flex\n    flex-direction:column;\n    align-items:flex-start;\n    width:100%;\n`\n\nconst EDITORAREA = styled.div`\n    font-size:1.2rem;\n`\n\n\n// & ${FLUIDDIV} + ${FLUIDDIV} {\n//     margin-bottom:20px;\n// }\n\nclass R6Editor extends React.Component<ForumReactorProp & RouteComponentProps, EditorState>{\n\n    private editorRef  = React.createRef<Editor>();\n    private titleRef  = React.createRef<any>();\n\n    reactor : R6EditorReactor;\n\n    constructor(props:any){\n        super(props);\n        this.state = EditorinitialState;\n        this.reactor = new R6EditorReactor(EditorinitialState)\n    }\n    \n    componentDidMount(){\n\n        this.reactor?.state.pipe(\n            map( res => res.isLoading ),\n            distinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            isLoading => this.setState({isLoading})\n        )\n\n        this.reactor?.fireImmediately( \n            value => value.type === \"ADDRANKDATA\" ,\n            (result: any) => {\n                this.insertTable( result.data, result.platform, result.id)\n            }\n        )\n\n        this.reactor?.fireImmediately( \n            value => value.type === \"SUCCESS\" ,\n            (result: any) => {\n                this.props.reactor.dispatch({type:\"SETPAGENO\",pageId: result.postId })\n                this.props.history.push(`post/${result.postId}`)\n            }\n        )\n\n\n\n\n\n\n        // this.reactor?.state.pipe(\n        //     filter( value => value. === \"\"),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     res => this.insertTable(res.)\n        // )\n        // this.reactor?.state.pipe(\n        //     map( res => res.data ),\n        //     distinctUntilChanged(),\n        //     skip(1),\n        // ).subscribe(\n        //     // data => this.insertTable(data)\n        // )\n        \n        \n        // const toBase64 = (file: any) => new Promise((resolve, reject) => {\n        //     const reader = new FileReader();\n        //     reader.readAsDataURL(file);\n        //     reader.onload = () => resolve(reader.result);\n        //     reader.onerror = error => reject(error);\n        // });\n\n        // interval(1000).subscribe(\n        //     // res=>console.log(this.editorRef.current?.getInstance().getHtml())\n        // )\n\n        // this.getInstanceofEditor()?.addHook('addImageBlobHook', ( a,b) => {\n        //     // const reader = new FileReader();\n        //     // const h = reader.readAsDataURL(a);\n        //     // console.log(h);\n        //     var formData = new FormData();\n        //     formData.append('files', a);\n        //     formData.append('content', \"안녕\");\n        //     formData.append('type', \"free\");\n        //     formData.append('title', \"이미지테스트다\");\n        //     R6Ajax.shared.post('post', formData, \"multipart\", true).subscribe();\n\n        //     // let formData = new FormData();\n        //     // formData.append('image', a);\n        //     // console.log(formData);\n        // })\n\n        // this.reactor?.dispatch({type:\"CLICKREGISTERBUTTON\", })\n    }\n\n    onAddImageBlob(blob: any, callback: any) {\n        //insert blob..\n        //and set data...\n        // console.log(blob);\n        // this.uploadImage(blob);\n        // this.editorRef.current?.getInstance().setHtml(\n        //     `<img src= ${blob} >`\n        // )\n        //image insert\n        //then we can add something..?\n\n        // callback(\"https://miro.medium.com/max/1400/1*PIuIAKbuu-QaoAvVk02PiQ.gif\", 'alt text');\n        // uploadImage(blob)\n        //     .then(response => {\n        //         if (!response.success) {\n        //             throw new Error('Validation error');\n        //         }\n    \n        //         callback(response.data.url, 'alt text');\n        //     }).catch(error => {\n        //         console.log(error);\n        //     });\n    };\n    \n\n    uploadImage(blob: any) {\n        \n        let formData = new FormData();\n        // file in a 'multipart/form-data' request\n        // formData.append(0, blob, blob.name);\n        // console.log(formData);\n        // data uri\n\n        // return fetch('/upload/image', {\n        //     method: 'POST',\n        //     body: formData\n        // }).then(response => {\n        //     if (response.ok) {\n        //         return response.json();\n        //     }\n    \n        //     throw new Error('Server or network error');\n        // });\n        //https://junwoo45.github.io/2020-07-28-chrome_devtools/?fbclid=IwAR2JRCQRpluIn6JmN2mne55mUASDLWxWVxoj3L2beX2a7CPQmjddOIldrS4\n    };\n\n    \n    private getInstanceofEditor() {\n        return this.editorRef.current?.getInstance()\n    }\n\n    private getHtml(){\n        return this.getInstanceofEditor()?.getHtml();\n    }\n\n    private insertTable(data: RANKAPI, platform: string, id: string){\n        const WD = (data.wins+data.losses > 0) ? Math.floor((data.wins/(data.wins+data.losses))*100) : 0\n        const KD = (data.kills+data.death > 0) ? Math.floor((data.kills/(data.kills+data.death))*100) : 0\n        const current = this.getHtml();\n        const newone = current + `\n        <table>\n        <thead>\n        <tr>\n        <th><strong>아이디</strong></th>\n        <th><strong>플랫폼</strong></th>\n        <th><strong>랭크</strong></th>\n        <th><strong>MMR</strong></th>\n        <th><strong>시즌 최대 랭크</strong></th>\n        <th><strong>시즌 최대 MMR</strong></th>\n        <th><strong>승률</strong></th>\n        <th><strong>K/D</strong></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n        <td>${id}</td>\n        <td>${platform}</td>\n        <td>${data.rankString}</td>\n        <td>${data.mmr}</td>\n        <td>${data.maxRankString}</td>\n        <td>${data.maxMmr}</td>\n        <td>${\n            WD\n        } % </td>\n        <td>${KD} %</td>\n        </tr>\n        </tbody>\n        </table>\n        `\n        this.getInstanceofEditor()?.setHtml(newone\n        , true)\n    }\n\n    \n    render(){\n    \n            const { topic } = this.props.reactor.getState();\n            const { isLoading } = this.state;\n\n            return(\n\n                <CONTAINER>    \n                <FLUIDDIV>\n                    <Input\n                        size={'large'}\n                        style={{width:'100%'}}\n                        placeholder={\"제목을 입력해주세요\"}\n                        ref={this.titleRef}\n                    />\n                </FLUIDDIV>\n    \n                <FLUIDDIV>\n\n                { topic === \"together\" && \n                    <R6IDSearch reactor={this.reactor} ></R6IDSearch>\n                }\n                </FLUIDDIV>\n\n                <FLUIDDIV>\n                    <EDITORAREA>\n                        <Editor \n                            height={\"600px\"}\n                            initialEditType={\"wysiwyg\"}\n                            ref={this.editorRef}\n                        />\n                    </EDITORAREA>\n                </FLUIDDIV>\n    \n                <FLUIDDIV>\n                    <BUTTONGROUP>\n                        <Button size={\"big\"} disabled={this.state.isLoading} onClick={()=> {this.props.history.goBack()}}> 취소하기 </Button>\n                        <Button size={\"big\"} loading={this.state.isLoading} disabled={this.state.isLoading} positive onClick={()=>{ \n\n                            const { isLogined } = this.props.reactor.getState();\n                            if (!isLogined) {\n                                this.props.reactor?.dispatch({type:\"CLICKLOGINBUTTON\"})\n                            } else {\n                                const html: string = (this.getHtml()) ? this.getHtml()! : \"\"\n                                this.reactor?.dispatch({type:\"CLICKREGISTERBUTTON\", title: this.titleRef.current!.inputRef.current.value, content:html, topic: topic})\n                            }\n                        }}> 등록하기 </Button>\n                    </BUTTONGROUP>\n                </FLUIDDIV>\n            </CONTAINER>\n            )\n        }\n       \n    \n}\n\nexport default withRouter(R6Editor)","//edit version\n//write version\nimport React from \"react\";\nimport { ForumReactorProps, ForumReactorProp } from \"../../../../@0ForumReactor/ForumReactor\";\nimport styled from \"styled-components\";\nimport R6Editor from \"./R6Editor\";\nimport {withReactor} from \"reactivex-redux\";\n\n\n\nconst FLUIDDIV = styled.div`\n    width:100%;\n    margin-bottom:10px;\n`\n\nclass R6PostWrite extends React.PureComponent<ForumReactorProp> {\n    \n    render(){\n        return <R6Editor reactor={this.props.reactor} ></R6Editor>\n        // return null;\n    }\n}\nexport default R6PostWrite"],"sourceRoot":""}