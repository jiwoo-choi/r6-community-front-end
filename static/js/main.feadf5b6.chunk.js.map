{"version":3,"sources":["Component/@rank-icons/0.svg","Component/@rank-icons/1.svg","Component/@rank-icons/2.svg","Component/@rank-icons/3.svg","Component/@rank-icons/4.svg","Component/@rank-icons/5.svg","Component/@rank-icons/6.svg","Component/@rank-icons/7.svg","Component/@rank-icons/8.svg","Component/@rank-icons/9.svg","Component/@rank-icons/10.svg","Component/@rank-icons/11.svg","Component/@rank-icons/12.svg","Component/@rank-icons/13.svg","Component/@rank-icons/14.svg","Component/@rank-icons/15.svg","Component/@rank-icons/16.svg","Component/@rank-icons/17.svg","Component/@rank-icons/18.svg","Component/@rank-icons/19.svg","Component/@rank-icons/20.svg","Component/@rank-icons/21.svg","Component/@rank-icons/22.svg","Component/@rank-icons/23.svg","Component/@Footer/R6Footer.tsx","ReactorKit/Stub.ts","ReactorKit/DisposeBag.ts","ReactorKit/Reactor.ts","Library/API.tsx","Library/RxJsExtension.tsx","Data/mockup.tsx","Library/R6StatAPI.tsx","Component/@Forum/ForumReactor.tsx","ReactorKit/withReactor.tsx","Component/Contents/TopicNavigation/R6CommunityNavigation.tsx","ReactorKit/ReactorGroup.tsx","Component/Contents/List/R6Cell.tsx","Component/Contents/List/R6List.tsx","Component/Contents/ListFooter/R6ListFooter.tsx","Component/Contents/Post/View/R6Post.tsx","Component/Contents/Post/Edit/R6EditorReactor.tsx","Component/Contents/Post/Edit/R6IDSearch/R6IDSearchReactor.tsx","Component/R6RankIcon.tsx","Component/Contents/Post/Edit/R6IDSearch/empty-box.svg","Component/Contents/Post/Edit/R6IDSearch/R6IDSearch.tsx","Component/Contents/Post/Edit/R6Editor.tsx","Component/Contents/Post/Edit/R6PostWrite.tsx","Component/@Forum/R6Forum.tsx","Component/@Header/R6Navigation.tsx","Component/Login/R6Register.tsx","Component/Login/R6Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","FOOTERCONTAINER","styled","footer","FROUMMARGIN","div","HELLO","R6Footer","React","Component","Stub","reactor","state","action","actions","this","BehaviorSubject","initialState","Subject","disposedBy","asObservable","subscribe","currentState","push","length","DisposeBag","subscriptions","namedSubscriptions","Subscription","subscription","name","add","hasOwnProperty","unsubscribe","forOwn","Reactor","isStubEnabled","dummyAction","_action","_initialState","_state","_stub","scheduler","queueScheduler","_disposeBag","_isStubEnabled","REACTORID$","stub","createStream","dispatch","bind","dispatchFn","getReactorControl","getState","transformState","dispatcher","stateStream","next","self","mutation","takeUntil","complete","disposeBag","pipe","observeOn","transformAction","flatMap","mutate","catchError","err","empty","transformMutation","scan","reduce","startWith","transformedState","tap","shareReplay","constructor","API","config","baseUrl","api","axios","create","interceptors","request","use","param","getUri","get","delete","post","response","data","error","url","from","Observable","observer","then","catch","catchErrorJustReturn","value","of","flatAxiosResultAndCast","source","map","deepDistinctUntilChanged","distinctUntilChanged","_","isEqual","listResultMockup","R6StatAPI","abc","moxios","install","stubRequest","RegExp","status","responseText","JSON","stringify","instance","createInstance","id","requests","delay","forkJoin","ForumStateInitialState","isError","isLoading","page","mode","topic","undefined","list","isLogined","ForumReactor","type","concat","newTopic","fetchList","filter","res","newPage","fetchPost","postId","newState","Object","keys","shared","withReactor","parentFilterMapper","transfromStateStreamFromThisComponent","skipSync","A","props","_parentStateStream","nextControls","displayName","console","updatar","customMapper","filterMapper","disposeOf","skip","debounceTime","setState","reactor_control","updatar$updatar$updatar","PureComponent","a","style","marginBottom","Menu","size","compact","pointing","secondary","Item","active","onClick","Icon","disabled","ReactorGroup","children","func","index","Children","child","isValidElement","count","total","cloneElement","CELLSTYLE","isNotice","GRIDOUTER","GRIDTITLE","TITLEAREA","SUBTITLEAREA","AUTHOR","TIME","RECOMMENDEDFLEX","R6Cell","src","recommendCnt","title","author","fromNow","createdTime","numberOfCells","dummy","i","Segment","key","Placeholder","fluid","Line","cellData","cell","notice","getDummy","getList","BUTTONAREA","SEARCHAREA","Button","basic","content","icon","labelPosition","Input","marginRight","placeholder","color","R6Post","initialValue","EditorinitialState","R6EditorReactor","R6SearchinitialState","isActive","result","resultQuery","R6IDSearchReactor","text","fetchID","query","getGeneralAPI","R6RankIcon","rankicons","rank","parsableRankString","replace","alt","width","height","defaultProps","_extends","assign","target","arguments","prototype","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref3","_ref4","_ref","svgRef","viewBox","ref","ForwardRef","forwardRef","subject","className","role","aria-labelledby","Fragment","cx","cy","r","getCell","event","localReactor","onFocus","onBlur","onChange","handleChange","warn","FLUIDDIV","BUTTONGROUP","CONTAINER","editorRef","createRef","current","getInstance","getInstanceofEditor","getHtml","platform","WD","wins","losses","Math","floor","KD","kills","death","newone","rankString","mmr","maxRankString","maxMmr","setHtml","parentReactor","initialEditType","positive","R6Forum","reactorControls","nav","GLOBALNAV","NAVITEMS","BRANDLOGO","R6Navigation","stater","R6Register","initial","opacity","animate","scale","y","Header","Form","Field","img","p","visible","R6Login","loginStater","iconPosition","floated","inverted","SECTIONWRAPPER","App","useState","loginState","loginSetter","registerState","registerSetter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,02DCK3C,IAAMC,EAAkBC,IAAOC,OAAV,KAOfC,EAAcF,IAAOG,IAAV,KAMXC,EAAQJ,IAAOG,IAAV,KAUUE,E,uKAGb,OACI,kBAACN,EAAD,KACI,kBAACG,EAAD,KACI,kBAACE,EAAD,yBACA,8CACA,+CACA,qD,GATkBE,IAAMC,W,oHCzB/BC,EAAb,WAMI,WAAYC,GAA6C,IAAD,gCAJjDC,WAIiD,OAHjDC,YAGiD,OAFjDC,QAAsB,GAGzBC,KAAKH,MAAQ,IAAII,IAAwBL,EAAQM,cACjDF,KAAKF,OAAS,IAAIK,IAElBP,EAAQQ,WAAaJ,KAAKH,MAAMQ,eAC/BC,WACG,SAAAT,GACID,EAAQW,aAAeV,KAI/BD,EAAQQ,WAAaJ,KAAKF,OAAOQ,WAC7B,SAAAR,GACI,EAAKC,QAAQS,KAAKV,MAnBlC,uDAyBQ,OAAIE,KAAKD,QAAQU,OAAS,EACfT,KAAKD,QAAQ,GAEbC,KAAKD,QAAQC,KAAKD,QAAQU,OAAO,OA5BpD,K,yBCCaC,EAAb,WAIE,aAAe,yBAHPC,mBAGM,OAFNC,wBAEM,EACZZ,KAAKW,cAAgB,IAAIE,IACzBb,KAAKY,mBAAqB,GAN9B,gDAeaE,EAA4BC,GACjCA,EACFf,KAAKY,mBAAmBG,GAAQD,EAEhCd,KAAKW,cAAcK,IAAIF,KAnB7B,kCAuBqBC,GACbA,EACEf,KAAKY,mBAAmBK,eAAeF,IAASf,KAAKY,mBAAmBG,IAC1Ef,KAAKY,mBAAmBG,GAAMG,eAGhClB,KAAKW,cAAcO,cACnBC,iBAAOnB,KAAKY,oBAAoB,SAACE,GAC/BA,EAAaI,oBA/BrB,8BASgBJ,GACRA,GACFd,KAAKW,cAAcK,IAAIF,OAX7B,KCIsBM,EAAtB,WAiDI,WAAYlB,GAAuD,IAAjCmB,EAAgC,iFA/C1DC,iBA+C0D,OA9C1DC,aA8C0D,OA5C1DC,mBA4C0D,OA3C3DjB,kBA2C2D,OA1C1DkB,YA0C0D,OAzC1DC,WAyC0D,OAxCxDC,UAAwBC,IAwCgC,KAvC1DC,YAA2B,IAAInB,EAuC2B,KAtC1DoB,oBAsC0D,OAnClDC,WAAa,qBAqCzB/B,KAAK8B,eAAiBT,EACtBrB,KAAKsB,YAAc,IAAInB,IACvBH,KAAKwB,cAAgBtB,EAEjBF,KAAK8B,gBACL9B,KAAK0B,MAAQ,IAAI/B,EAAKK,MACtBA,KAAKuB,QAAUvB,KAAKgC,KAAMlC,OAC1BE,KAAKyB,OAASzB,KAAKgC,KAAMnC,QAEzBG,KAAKuB,QAAU,IAAIpB,IACnBH,KAAKyB,OAASzB,KAAKiC,gBAGvBjC,KAAKkC,SAAWlC,KAAKkC,SAASC,KAAKnC,MACnCA,KAAKoC,WAAapC,KAAKoC,WAAWD,KAAKnC,MACvCA,KAAKqC,kBAAoBrC,KAAKqC,kBAAkBF,KAAKnC,MACrDA,KAAKsC,SAAWtC,KAAKsC,SAASH,KAAKnC,MAnE3C,8DAyCsBuC,GACd,OAAIA,EACO,CAAEC,WAAYxC,KAAKoC,WAAYK,YAAaF,EAAgBD,SAAStC,KAAKsC,UAE1E,CAAEE,WAAYxC,KAAKoC,WAAYK,YAAazC,KAAKH,MAAOyC,SAAStC,KAAKsC,YA7CzF,mCAiBQ,OAAOtC,KAAKwB,gBAjBpB,4BAqBQ,OAAOxB,KAAKyB,SArBpB,2BAyBQ,OAAOzB,KAAK0B,QAzBpB,6BA6BQ,OAAO1B,KAAKuB,YA7BpB,gDA4EQ,OAAOvB,KAAKO,eA5EpB,+BAkFoBT,GACZE,KAAKF,OAAO4C,KAAK5C,KAnFzB,iCAsFsBA,GACd,IAAI6C,EAAO3C,KACX,OAAO,WACH2C,EAAK7C,OAAO4C,KAAK5C,MAzF7B,sCA6F8BA,GACtB,OAAOA,IA9Ff,wCAiGgC8C,GACxB,OAAOA,IAlGf,qCAqG6B/C,GACrB,OAAOA,IAtGf,wCA0GQ,OAAOgD,YAAU7C,KAAKsB,eA1G9B,oCA8GQtB,KAAKsB,YAAYoB,OACjB1C,KAAKsB,YAAYwB,aA/GzB,mCAmHQ9C,KAAK+C,WAAW7B,gBAnHxB,qCAgI+C,IAAD,OAElCpB,EAASE,KAAKF,OAAOkD,KAAKC,YAAUjD,KAAK2B,YAEzCiB,EADyC5C,KAAKkD,gBAAgBpD,GACjCkD,KAC7BG,aACI,SAACrD,GACG,OAAO,EAAKsD,OAAOtD,GAAQkD,KAAKK,aAAY,SAAAC,GAAG,OAAIC,sBAO3D1D,EAF6CG,KAAKwD,kBAAkBZ,GAExCI,KAC5BS,aAAK,SAAC5D,EAAOuD,GACT,OAAO,EAAKM,OAAL,eAAiB7D,GAAQuD,KACjCpD,KAAKE,cACRmD,aAAY,WACR,OAAOE,iBAEVI,YAAU3D,KAAKE,eAIhB0D,EAAuC5D,KAAKuC,eAAe1C,GAC9DmD,KACGa,aAAK,SAAChE,GACF,EAAKU,aAAeV,KAExBiE,YAAY,IAKhB,OAFA9D,KAAKI,WAAawD,EAAiBtD,YAE5BsD,IAnKf,2BAwEQ,OAAO5D,KAAK+D,YAAYhD,OAxEhC,+BAsHmBD,GACPA,GACId,KAAK+C,WAAW/B,IAAIF,KAxHpC,iCA6HQ,OAAOd,KAAK6B,gBA7HpB,K,gFCFamC,EAAb,WAMI,WAAoBC,GAA+E,IAAlDC,EAAiD,uDAA9B,6BAA8B,yBAFlGC,SAEkG,EAE9FnE,KAAKmE,IAAMC,IAAMC,OAAOJ,GAExBjE,KAAKmE,IAAIG,aAAaC,QAAQC,KAAI,SAACC,GAAD,oBAC9BP,QAASA,GACNO,MAGPzE,KAAK0E,OAAS1E,KAAK0E,OAAOvC,KAAKnC,MAC/BA,KAAK2E,IAAM3E,KAAK2E,IAAIxC,KAAKnC,MACzBA,KAAK4E,OAAS5E,KAAK4E,OAAOzC,KAAKnC,MAC/BA,KAAK6E,KAAO7E,KAAK6E,KAAK1C,KAAKnC,MAlBnC,oDAuBuB8E,GACf,OAAOA,EAASC,OAxBxB,4BA2BkBC,GACV,MAAMA,IA5Bd,6BAgCmBf,GACX,OAAOjE,KAAKmE,IAAIO,OAAOT,KAjC/B,0BAsCwCgB,EAAahB,GAI7C,OAAOiB,YAAKlF,KAAKmE,IAAIQ,IAASM,EAAKhB,MA1C3C,6BAwD4CgB,EAAahB,GAA6C,IAAD,OAC7F,OAAO,IAAIkB,KAAe,SAACC,GACvB,EAAKjB,IAAIS,OAAaK,EAAKhB,GAC1BoB,MAAM,SAAAP,GACHM,EAAS1C,KAAKoC,GACdM,EAAStC,cAEZwC,OAAO,SAAAhC,GACJ8B,EAASJ,MAAM1B,WAhE/B,2BAsE6C2B,EAAaF,EAAUd,GAA6C,IAAD,OAExG,OAAO,IAAIkB,KAAe,SAACC,GACvB,EAAKjB,IAAIU,KAAUI,EAAKF,EAAMd,GAC7BoB,MAAM,SAAAP,GACHM,EAAS1C,KAAKoC,GACdM,EAAStC,cAEZwC,OAAO,SAAAhC,GACJ8B,EAASJ,MAAM1B,aA/E/B,K,kBCAO,SAASiC,EAAwBC,GACpC,OAAOnC,aAAY,SAAAC,GAAG,OAAImC,YAAGD,MAS1B,SAASE,KACZ,OAAO,SAASC,GACZ,OAAOA,EAAO3C,KACV4C,aAAK,SAACJ,GACF,OAAOA,EAAMT,UAMtB,SAASc,KACZ,OAAOC,YAAqBC,IAAEC,S,yBCgDrBC,GACT,CACI,CACI,OAAU,EACV,aAAgB,EAChB,QAAW,EACX,YAAe,sBACf,MAAS,iCACT,OAAU,QACV,QAAU,EACV,QAAU,GAEd,CACI,OAAU,EACV,aAAgB,EAChB,QAAW,EACX,YAAe,sBACf,MAAS,SACT,OAAU,QACV,QAAU,EACV,QAAU,ICjFTC,GAAb,kDA2BI,WAAoBjC,GAA8B,IAAD,8BAC7C,cAAMA,IAHVkC,IAAe,EAIXC,KAAOC,QAAQ,EAAKlC,KACpBiC,KAAOE,YAAY,IAAIC,OAAO,mBAAoB,CAC9CC,OAAQ,IACRC,aAAcC,KAAKC,UAAUV,MALY,EA3BrD,kEAOQ,OADa,IAAIC,IANzB,6BAcQ,OAHKA,EAAUU,WACXV,EAAUU,SAAWV,EAAUW,kBAE5BX,EAAUU,WAdzB,wBAiBmBpB,GACXxF,KAAKmG,IAAMnG,KAAKmG,IAAM,GAlB9B,eAsBQ,OAAOnG,KAAKmG,QAtBpB,mDAsDyBW,GAAc,IAAD,OAkBxBC,EAAW,CAAC,QAAQ,MAAM,OAAOnB,KAAK,SAACJ,GACzC,IAAIP,EAAM,mCAAqCO,EAAQ,IAAMsB,EAC7D,OAAO,EAAKnC,IAAoBM,GAC/BjC,KAEGgE,YAAM,KAENtB,KACAH,EAAqB,QAI7B,OAAO0B,YAASF,OApFxB,GAA+B/C,GAAlBkC,GAGFU,SAA8B,KC2BlC,IA4EMM,GAAsC,CAC/CC,SAAS,EACTC,WAAW,EACXC,KAAM,EACNC,KAAK,OACLC,MAAM,OACN1C,UAAM2C,EACNC,KAAK,GACLC,WAAW,GAKMC,G,qKAEV7H,GACH,OAAOA,EAAO8H,MACV,IAAK,aACD,OAAOC,YAEHpC,YAAkB,CAACmC,KAAK,cAAeL,MAAOzH,EAAOgI,WACrDrC,YAAe,CAACmC,KAAK,aAAcN,KAAM,SAEzC7B,YAAkB,CAACmC,KAAK,aAAcR,WAAW,IAEjDpH,KAAK+H,UAAUjI,EAAOgI,UAAU9E,KAE5BH,YAAU7C,KAAKF,OAAOkD,KAAKgF,aAAO,SAACxC,GAC/B,OAAOA,EAAMoC,OAAS9H,EAAO8H,UAEjChC,aAAgC,SAAAqC,GAC5B,MAAO,CAACL,KAAK,YAAaH,KAAMQ,EAAKZ,KAAM,QAW/D,IAAK,YACD,OAAO5B,YAAe,CAACmC,KAAK,aAAcN,KAAM,SAEpD,IAAK,aACD,OAAO7B,YAAe,CAACmC,KAAM,aAAcN,KAAK,SAEpD,IAAK,YACD,OAAOO,YAEHpC,YAAkB,CAACmC,KAAK,aAAcR,WAAW,IAEjDpH,KAAK+H,UAAU/H,KAAKO,aAAagH,MAAOzH,EAAOoI,SAASlF,KACpDH,YAAU7C,KAAKF,OAAOkD,KAAKgF,aAAO,SAAAxC,GAAK,OAAIA,IAAU1F,OACrD8F,aAAgC,SAAAqC,GAC5B,MAAO,CAACL,KAAK,YAAaH,KAAMQ,EAAKZ,KAAM,OAGnD5B,YAAkB,CAACmC,KAAK,aAAcR,WAAW,KAGzD,IAAK,YACD,OAAOS,YACPpC,YAAe,CAACmC,KAAM,aAAcN,KAAK,SACzC7B,YAAkB,CAACmC,KAAK,aAAcR,WAAW,IAEjDpH,KAAKmI,UAAUrI,EAAOsI,QAAQpF,KAE1B4C,aAAiC,SAAAqC,GAAG,MAAK,CAACL,KAAK,YAAa/C,KAAOoD,OAIvExC,YAAkB,CAACmC,KAAK,aAAcR,WAAW,Q,6BAMlDvH,EAAmB+C,GAEtB,IAAIyF,EAAWxI,EACf,OAAO+C,EAASgF,MACZ,IAAK,cAED,OADAS,EAASd,MAAQ3E,EAAS2E,MACnBc,EACX,IAAK,aAED,OADAA,EAASf,KAAO1E,EAAS0E,KAClBe,EACX,IAAK,aAED,OADAA,EAASjB,UAAYxE,EAASwE,UACvBiB,EACX,IAAK,YAED,OADAA,EAASjB,WAAY,EACQ,IAAzBxE,EAAS6E,KAAKhH,QACd4H,EAASlB,SAAU,EACZkB,IAEPA,EAASZ,KAAO7E,EAAS6E,KACzBY,EAAShB,KAAOzE,EAASyE,KAClBgB,GAEf,IAAK,YACD,OAA0C,IAAtCC,OAAOC,KAAK3F,EAASiC,MAAMpE,QAC3B4H,EAASlB,SAAU,EACZkB,IAEPA,EAASxD,KAAOjC,EAASiC,KAClBwD,M,gCAKbd,GAA0D,IAA5CF,EAA2C,uDAA5B,EAEnC,OAAOnB,GAAUsC,OAAO7D,IAAjB,wCAAkE4C,EAAlE,iBAAgFF,IACtFrE,KACGgE,YAAM,KACNtB,KACAH,EAAqB,O,gCAInB6C,GACN,OAAOlC,GAAUsC,OAAO7D,IAAjB,uCAAkEyD,IACxEpF,KACG0C,KACAH,EAAqB,S,GAlHSnE,G,uCCrH3B,SAASqH,GAKpB/I,EAAiEgJ,GACL,IAD2DC,IAC5D,yDADoHC,IACpH,yDACrDC,EADqD,kDASvD,WAAYC,GAAU,IAAD,8BACjB,cAAMA,IALV/F,WAAgC,KAIX,EAHbgG,wBAGa,IAFbC,kBAEa,EAEa,sBAA1BtJ,EAAUuJ,aACVC,QAAQlE,MAAM,sDAElB,EAAKnF,MAAQ,CAAEsJ,QAAU,GALR,EATkC,wEAiB3B,IAAD,OAGvB,SAASC,EAAaC,GAClB,OAAIA,EACOzD,YAAIyD,GAEJzD,aAAkB,SAAAJ,GAAK,OAAIA,KAL1CxF,KAAK+C,WAAa,IAAIrC,EASlBV,KAAK8I,MAAMrG,cACXzC,KAAK+I,mBAAqB/I,KAAK8I,MAAMrG,YAEjCzC,KAAKgJ,aADLL,GAAyCD,EACrB,CAAEjG,YAAazC,KAAK8I,MAAMrG,YAAYO,KAAKoG,EAAaV,IAAsBpG,SAAUtC,KAAK8I,MAAMxG,SAAUE,WAAYxC,KAAK8I,MAAMtG,YAGpIxC,KAAK8I,OAI7B9I,KAAK+I,qBAEL/I,KAAK+C,WAAYuG,UAAYtJ,KAAK+I,mBAAoB/F,KAClDoG,EAAaV,GACb7C,KACA0D,aAAMX,EAAU,EAAI,GACpBY,aAAa,KACflJ,WACE,SAAA2H,GACI,EAAKwB,SAAS,CAACN,SAAgC,EAAtB,EAAKtJ,MAAMsJ,cAK3CnJ,KAAK+I,qBACN/I,KAAK+C,WAAa,QArD6B,6CA0DhC,IAAD,EAElB,UAAA/C,KAAK+C,kBAAL,SAAiB7B,cACjBlB,KAAK+C,WAAa,OA7DiC,+BAkEnD,OAAQ,kBAACrD,EAAD,iBAAeM,KAAK8I,MAApB,CAA2BY,gBAAiB1J,KAAKgJ,aAAcW,wBAAyB3J,KAAKH,MAAMsJ,eAlExD,GAC3C1J,IAAMmK,eAoEtB,OApEMf,EAEKI,YAAc,2BAkElBJ,E,geChFM1J,IAAOG,IAAV,MAQIH,IAAO0K,EAAV,MARf,IAoFepB,M,oNA3CD,IAEKlB,EAASvH,KAAK8I,MAAMxG,WAApBiF,MAEP,OACI,yBAAKuC,MAAO,CAACC,aAAa,SACtB,kBAACC,GAAA,EAAD,CAAMC,KAAM,QAASC,SAAO,EAACC,UAAQ,EAACC,WAAS,GAC3C,kBAACJ,GAAA,EAAKK,KAAN,CACIC,OAAkB,SAAV/C,EACRgD,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,aAAcE,SAAS,UAEjE,kBAAC0C,GAAA,EAAD,CAAMzJ,KAAK,UAAU0J,SAAoB,SAAVlD,IAJ/B,0CAOA,kBAACyC,GAAA,EAAKK,KAAN,CACIC,OAAkB,SAAV/C,EACRgD,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,aAAcE,SAAS,UAEjE,kBAAC0C,GAAA,EAAD,CAAMzJ,KAAK,SAAS0J,SAAoB,SAAVlD,IAJ9B,gDAOA,kBAACyC,GAAA,EAAKK,KAAN,CACIC,OAAkB,aAAV/C,EACRgD,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,aAAcE,SAAS,cAEjE,kBAAC0C,GAAA,EAAD,CAAMzJ,KAAK,QAAQ0J,SAAoB,aAAVlD,IAJ7B,4BAOA,kBAACyC,GAAA,EAAKK,KAAN,CACIC,OAAkB,SAAV/C,EACRgD,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,aAAcE,SAAS,UAEjE,kBAAC0C,GAAA,EAAD,CAAMzJ,KAAK,iBAAiB0J,SAAoB,SAAVlD,IAJtC,wC,GA9CY9H,IAAMmK,gBA6DQ,SAAC/J,GAAD,MAAY,CAAC0H,MAAO1H,EAAM0H,U,IC9EvDmD,G,uKAER,IAAD,OACJ,OACI,oCAhBZ,SAAaC,EAA4BC,GACrC,IAAIC,EAAQ,EACZ,OAAOpL,IAAMqL,SAASlF,IAAI+E,GAAU,SAACI,GAAD,OAClCtL,IAAMuL,eAAeD,GAASH,EAAKG,EAAOF,IAASpL,IAAMqL,SAASG,MAAMN,IAAaI,KAevEnF,CAAK5F,KAAK8I,MAAM6B,UAAU,SAACI,EAAOF,EAAOK,GAErC,OAAOzL,IAAM0L,aAAcJ,EAApB,2BACA,EAAKjC,OACLiC,EAAMjC,gB,GAVKrJ,IAAMmK,e,ymDCXhD,IAAMwB,GAAYjM,IAAOG,IAAV,MAcI,SAAAwJ,GAAK,OAAIA,EAAMuC,SAAW,2BAA6B,WAOpEC,GAAYnM,IAAOG,IAAV,MAQTiM,GAAYpM,IAAOG,IAAV,MAWTkM,GAAYrM,IAAOG,IAAV,MAWTmM,GAAetM,IAAOG,IAAV,MAMZoM,GAASvM,IAAOG,IAAV,MAMNqM,GAAOxM,IAAOG,IAAV,MAKJsM,GAAkBzM,IAAOG,IAAV,MAOH,SAAAwJ,GAAK,OAAIA,EAAMuC,SAAW,OAAS,UAClC,SAAAvC,GAAK,OAAIA,EAAMuC,SAAW,OAAS,UAIjCQ,G,uKAGb,OACI,kBAACT,GAAD,CAAWb,QAASvK,KAAK8I,MAAMyB,QAASc,SAAUrL,KAAK8I,MAAMuC,UACzD,kBAACC,GAAD,KACI,kBAACM,GAAD,CAAiBP,SAAUrL,KAAK8I,MAAMuC,UAC9BrL,KAAK8I,MAAMuC,SAQX,oCACA,yBAAKS,IAAI,gBAPT,oCACI,yBAAKA,IAAI,uBACT,iCAAO9L,KAAK8I,MAAM/D,KAAKgH,aAAvB,OAWZ,kBAACR,GAAD,KACI,kBAACC,GAAD,KACKxL,KAAK8I,MAAM/D,KAAKiH,OAErB,kBAACP,GAAD,KACI,kBAACC,GAAD,KAAS1L,KAAK8I,MAAM/D,KAAKkH,QACzB,kBAACN,GAAD,KAAM,kBAAC,KAAD,CAAQO,SAAO,GAAElM,KAAK8I,MAAM/D,KAAKoH,sB,GA5B/B1M,IAAMC,WCS3B+I,MAtFf,4MAUI1F,gBAVJ,yDAYqBqJ,GAEb,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAIA,EAAIF,EAAeE,IAChCD,EAAM7L,KACF,kBAAC+L,GAAA,EAAD,CAASC,IAAK,SAASF,GACnB,kBAACG,GAAA,EAAD,CAAaC,OAAK,GAClB,kBAACD,GAAA,EAAYE,KAAb,CAAkBlM,OAAQ,SAC1B,kBAACgM,GAAA,EAAYE,KAAb,CAAkBlM,OAAQ,SAC1B,kBAACgM,GAAA,EAAYE,KAAb,CAAkBlM,OAAQ,UAC1B,kBAACgM,GAAA,EAAYE,KAAb,CAAkBlM,OAAQ,iBAKtC,OAAO4L,IA1Bf,8BA6BoBO,GAEZ,IADA,IAAIC,EAAO,GACFP,EAAI,EAAIA,EAAIM,EAASnM,OAAS6L,IACnCO,EAAKrM,KACD,kBAAC,GAAD,CAAQ+J,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,YAAYQ,OAAQwE,EAASN,GAAGlE,SAAUiD,SAAUuB,EAASN,GAAGQ,OAAQN,IAAK,QAAQF,EAAGvH,KAAM6H,EAASN,MAG7J,OAAOO,IApCf,+BAuCa,IAAD,EACiC7M,KAAK8I,MAAMxG,WAAxC8E,EADJ,EACIA,UAAWK,EADf,EACeA,KAAMN,EADrB,EACqBA,QAEzB,OAAKC,EAEG,oCACKpH,KAAK+M,SAAS,IAGA,IAAhBtF,EAAKhH,QAAgB0G,EACrB,+CAGH,oCACKnH,KAAKgN,QAAQvF,QArDlC,GAA4BhI,IAAMmK,gB,uZCDlC,IAAMqD,GAAa9N,IAAOG,IAAV,MASV4N,GAAa/N,IAAOG,IAAV,MA2BDmJ,M,uKAfP,OACI,oCACI,kBAACwE,GAAD,KACI,kBAACE,GAAA,EAAD,CAAQC,OAAK,EAACV,OAAK,EAACW,QAAQ,eAAKC,KAAK,aAAaC,cAAc,SACjE,kBAACJ,GAAA,EAAD,CAAQC,OAAK,EAACV,OAAK,EAACW,QAAQ,eAAKC,KAAK,cAAcC,cAAc,WAEtE,kBAACL,GAAD,KACI,kBAACM,GAAA,EAAD,CAAO1D,MAAO,CAAC2D,YAAY,QAASH,KAAK,SAASI,YAAY,cAC9D,kBAACP,GAAA,EAAD,CAAQQ,MAAO,QAASpD,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,gBAA9D,8B,GAXOnI,IAAMmK,gBAkBQ,SAAC/J,GAAD,MAAY,CAACyH,KAAMzH,EAAMyH,S,yFCpCjDnI,IAAOG,IAAV,MAAd,IAIqBsO,G,uKAOb,OACI,kBAAC,UAAD,CAAQC,aAAc,gE,GAREpO,IAAMmK,eCyC7BkE,I,cAAkC,CAC3C1G,WAAW,EACXD,SAAQ,EACRpC,KAAK,KAIYgJ,G,qKAEVjO,GACH,OAAO2F,YAAG,CAACmC,KAAK,aAAcR,WAAU,M,6BAGrCvH,EAAoB+C,GAEvB,OAAO/C,M,GAR8BuB,GCYhC4M,I,OAAoC,CAC7CC,UAAU,EACV7G,WAAW,EACXD,SAAS,EACT+G,OAAQ,GACRC,YAAY,GACZ3I,MAAO,KAeU4I,G,qKAEVtO,GACH,OAAOA,EAAO8H,MAEV,IAAK,YACD,OAAOnC,YAAG,CAACmC,KAAM,aAAcyG,KAAMvO,EAAOuO,OAEhD,IAAK,mBACD,OAAQxG,YACApC,YAAmB,CAACmC,KAAK,aAAcR,WAAW,IAClDpH,KAAKsO,QAAQxO,EAAOuO,MAAMrL,KACxBH,YAAW7C,KAAKF,OAAOkD,KAAKgF,aAAQ,SAAAxC,GAChC,MAAsB,iBAAfA,EAAMoC,MAA0C,qBAAfpC,EAAMoC,UAElDhC,aAAuC,SAAAqC,GAAG,MAAK,CAACL,KAAK,YAAaH,KAAOQ,EAAKsG,MAAMzO,EAAOuO,WAIzG,IAAK,eACD,OAAOxG,YACHpC,YAAmB,CAACmC,KAAK,aAAcR,WAAW,IAClD3B,YAAmB,CAACmC,KAAK,mBAAoBqG,UAAU,KAG/D,IAAK,cACD,OAAOpG,YACHpC,YAAmB,CAACmC,KAAK,mBAAoBqG,UAAU,Q,6BAMhEpO,EAAoB+C,GAEvB,IAAIyF,EAAWxI,EAEf,OAAO+C,EAASgF,MAEZ,IAAK,YAOD,OANAS,EAAS6F,OAAStL,EAAS6E,KAC3BY,EAAS8F,YAAcvL,EAAS2L,MAChClG,EAASjB,WAAY,EACQ,IAAzBxE,EAAS6E,KAAKhH,SACd4H,EAASlB,SAAU,GAEhBkB,EAEX,IAAK,aAED,OADAA,EAASjB,UAAYxE,EAASwE,UACvBiB,EAEX,IAAK,mBAED,OADAA,EAAS4F,SAAWrL,EAASqL,SACtB5F,EAEX,IAAK,aAED,OADAA,EAAS7C,MAAQ5C,EAASyL,KACnBhG,K,8BAIXvB,GACJ,OAAOZ,GAAUsC,OAAOgG,cAAc1H,O,GA/DC1F,G,wfC3EzCqN,IAdmCnG,OAAOC,KAAKmG,GAclC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAM1E,EAA4B,EAA5BA,KAGxB,IACI,IAAI2E,EAAqBD,EAAKE,QAAQ,IAAK,KACrC/C,EAAM4C,EAAUE,GACtB,OAAQ,yBAAK9C,IAAKA,EAAKgD,IAAK,OAAQhF,MAAO,CAACiF,MAAM9E,EAAM+E,OAAO,UACjE,SACE,OAAO,yBAAKlF,MAAO,CAACiF,MAAM9E,EAAM+E,OAAO/E,QAI/CwE,GAAWQ,aAAe,CACtBhF,KAAO,IC/BX,SAASiF,KAA2Q,OAA9PA,GAAW5G,OAAO6G,QAAU,SAAUC,GAAU,IAAK,IAAI9C,EAAI,EAAGA,EAAI+C,UAAU5O,OAAQ6L,IAAK,CAAE,IAAI3G,EAAS0J,UAAU/C,GAAI,IAAK,IAAIE,KAAO7G,EAAc2C,OAAOgH,UAAUrO,eAAesO,KAAK5J,EAAQ6G,KAAQ4C,EAAO5C,GAAO7G,EAAO6G,IAAY,OAAO4C,IAA2BI,MAAMxP,KAAMqP,WAEhT,SAASI,GAAyB9J,EAAQ+J,GAAY,GAAc,MAAV/J,EAAgB,MAAO,GAAI,IAAkE6G,EAAKF,EAAnE8C,EAEzF,SAAuCzJ,EAAQ+J,GAAY,GAAc,MAAV/J,EAAgB,MAAO,GAAI,IAA2D6G,EAAKF,EAA5D8C,EAAS,GAAQO,EAAarH,OAAOC,KAAK5C,GAAqB,IAAK2G,EAAI,EAAGA,EAAIqD,EAAWlP,OAAQ6L,IAAOE,EAAMmD,EAAWrD,GAAQoD,EAASE,QAAQpD,IAAQ,IAAa4C,EAAO5C,GAAO7G,EAAO6G,IAAQ,OAAO4C,EAFxMS,CAA8BlK,EAAQ+J,GAAuB,GAAIpH,OAAOwH,sBAAuB,CAAE,IAAIC,EAAmBzH,OAAOwH,sBAAsBnK,GAAS,IAAK2G,EAAI,EAAGA,EAAIyD,EAAiBtP,OAAQ6L,IAAOE,EAAMuD,EAAiBzD,GAAQoD,EAASE,QAAQpD,IAAQ,GAAkBlE,OAAOgH,UAAUU,qBAAqBT,KAAK5J,EAAQ6G,KAAgB4C,EAAO5C,GAAO7G,EAAO6G,IAAU,OAAO4C,EAMne,IAAIa,GAAqB,IAAMC,cAAc,OAAQ,CACnDC,EAAG,8FACHC,KAAM,YAGJC,GAAqB,IAAMH,cAAc,OAAQ,CACnDC,EAAG,kHACHC,KAAM,YAGJE,GAAqB,IAAMJ,cAAc,IAAK,CAChDE,KAAM,WACQ,IAAMF,cAAc,OAAQ,CAC1CC,EAAG,2tBACY,IAAMD,cAAc,OAAQ,CAC3CC,EAAG,8IACY,IAAMD,cAAc,OAAQ,CAC3CC,EAAG,gHAGD,GAAc,SAAqBI,GACrC,IAAIC,EAASD,EAAKC,OACdxE,EAAQuE,EAAKvE,MACblD,EAAQ2G,GAAyBc,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAML,cAAc,MAAOhB,GAAS,CACtDF,OAAQ,QACRyB,QAAS,gBACT1B,MAAO,QACP2B,IAAKF,GACJ1H,GAAQkD,EAAqB,IAAMkE,cAAc,QAAS,KAAMlE,GAAS,KAAMiE,GAAOI,GAAOC,KAG9FK,GAA0B,IAAMC,YAAW,SAAU9H,EAAO4H,GAC9D,OAAoB,IAAMR,cAAc,GAAahB,GAAS,CAC5DsB,OAAQE,GACP5H,OAEU,I,ipBC9BQ3J,IAAOG,IAAV,MAKFH,IAAOG,IAAV,MAKMH,IAAOG,IAAV,MAVlB,IAuLemJ,M,kDA7IX,WAAYK,GAAW,IAAD,8BAClB,cAAMA,IAJVlJ,aAGsB,IAFtBiR,aAEsB,EAElB,EAAKhR,MAAQmO,GAFK,E,iEAKD,IAAD,SAChBhO,KAAKJ,QAAU,IAAIwO,GAAkBJ,IACrChO,KAAK6Q,QAAU,IAAI1Q,IAEnBH,KAAK6Q,QAAQ7N,KACT8C,cACAjC,aAAM,SAAA2B,GAAK,uBAAI,EAAK5F,eAAT,aAAI,EAAcsC,SAAS,CAAC0F,KAAM,YAAayG,KAAK7I,OAC/DgE,aAAa,KACb5D,aAAK,SAAAJ,GAAK,MAAK,CAACoC,KAAK,mBAAoByG,KAAM7I,OACjDlF,UALF,UAKYN,KAAKJ,eALjB,aAKY,EAAcE,U,8BAGtB2H,GAEJ,OAAOA,EAAK7B,KAAK,SAACJ,EAAOqF,GACrB,OAAIrF,EAAM/E,OAAS,OACf,EA2BO,Q,8BAKXgH,EAAwB4G,EAAcjH,EAAoB+G,GAE9D,OAAKE,GAASA,IAASF,IAAgB/G,EAE/B,yBAAK0J,UAAU,iBACX,0BAAMC,KAAK,MAAMC,kBAAgB,SAAjC,wHACA,gKACA,2DAKR5J,EAEI,kBAAC,IAAM6J,SAAP,KACI,yBAAKH,UAAU,qBACX,yBAAKA,UAAU,kBACX,4BAAQI,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAEhC,yBAAKN,UAAU,kBAAf,KAAmCzC,EAAnC,0DAM4C,IAAtD5G,EAAKO,QAAQ,SAAAxC,GAAK,OAAqB,IAAjBA,EAAM/E,UAAeA,QAAiB0N,EAE1D,yBAAK2C,UAAU,gBACX,kBAAC,GAAD,CAAUhH,MAAO,CAACkF,OAAO,QAASD,MAAM,UACxC,kCAAQZ,EAAR,4EACA,kGAMR,oCACI,yBAAK2C,UAAU,iBACX,kCAAQ3C,EAAR,gEACA,+GACA,2DAEHnO,KAAKqR,QAAQ5J,M,mCAMb6J,GACTtR,KAAK6Q,QAAQnO,KAAK4O,EAAMlC,OAAO5J,S,+BAI/B,GAAKxF,KAAK8I,MAGH,CAEH,IAAMyI,EAAevR,KAAKJ,QAFvB,EAG0D2R,EAAahR,aAAlEiF,EAHL,EAGKA,MAAgB4B,GAHrB,EAGa8G,OAHb,EAGqB9G,WAAW+G,EAHhC,EAGgCA,YAAaF,EAH7C,EAG6CA,SAEhD,OACI,oCACI,yBAAK6C,UAAU,gBACX,kBAACtG,GAAA,EAAD,CAAMzJ,KAAM,SAAUkJ,KAAM,MAAO6G,UAAW,oBAAqBnD,MAAO,UAC1E,2BACImD,UAAU,aACVpD,YAAY,wEAEZ8D,QAAS,WAAKD,EAAarP,SAAS,CAAC0F,KAAK,iBAC1C6J,OAAQ,WAAKF,EAAarP,SAAS,CAAC0F,KAAK,kBACzCpC,MAAOA,EACPkM,SAAU1R,KAAK2R,aAAaxP,KAAKnC,QAE/BiO,GACE,yBAAK6C,UAAU,iBAEP9Q,KAAKgN,QAAQ,GAAIxH,EAAO4B,EAAW+G,MAtB/D,OADAjF,QAAQ0I,KAAK,yBACN,S,GAlHMnS,IAAMmK,gB,ygBCpC/B,IAAMiI,GAAW1S,IAAOG,IAAV,MASRwS,IAJY3S,IAAOG,IAAV,MAIKH,IAAOG,IAAV,OAIXyS,GAAY5S,IAAOG,IAAV,MAoJAmJ,M,4MAjIHuJ,UAAavS,IAAMwS,Y,EAC3BrS,a,qEAGII,KAAKJ,QAAU,IAAImO,GAAgBD,M,yFAeR,IAAD,EAC1B,iBAAO9N,KAAKgS,UAAUE,eAAtB,aAAO,EAAwBC,gB,gCAGjB,IAAD,EACb,iBAAOnS,KAAKoS,6BAAZ,aAAO,EAA4BC,Y,kCAGnBtN,EAAeuN,EAAkBxL,GAAY,IAAD,EAEtDyL,EAAMxN,EAAKyN,KAAKzN,EAAK0N,OAAS,EAAKC,KAAKC,MAAO5N,EAAKyN,MAAMzN,EAAKyN,KAAKzN,EAAK0N,QAAS,KAAO,EACzFG,EAAM7N,EAAK8N,MAAM9N,EAAK+N,MAAQ,EAAKJ,KAAKC,MAAO5N,EAAK8N,OAAO9N,EAAK8N,MAAM9N,EAAK+N,OAAQ,KAAO,EAE1FC,EADU/S,KAAKqS,UACC,mRAWhBvL,EAXgB,kFAchBwL,EAdgB,0FAkBhBvN,EAAKiO,WAlBW,iFAsBhBjO,EAAKkO,IAtBW,oHA0BhBlO,EAAKmO,cA1BW,2GA8BhBnO,EAAKoO,OA9BW,0FAmClBZ,EAnCkB,oFAwChBK,EAxCgB,wEA6CtB,UAAA5S,KAAKoS,6BAAL,SAA4BgB,QAAQL,GAClC,K,mEASE,IAAMM,EAAgBrT,KAAK8I,MAAMxG,WAEzBiF,GADavH,KAAKJ,QACRyT,EAAV9L,OAER,OAEI,kBAACwK,GAAD,KACA,kBAACF,GAAD,KACI,kBAACrE,GAAA,EAAD,CACIvD,KAAM,QACNH,MAAO,CAACiF,MAAM,QACdrB,YAAa,6DAIrB,kBAACmE,GAAD,KACY,aAAVtK,GACE,kBAAC,GAAevH,KAAK8I,QAIzB,kBAAC+I,GAAD,KACI,kBAAC,UAAD,CACI7C,OAAQ,QACRsE,gBAAiB,UACjB5C,IAAK1Q,KAAKgS,aAIlB,kBAACH,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC3E,GAAA,EAAD,CAAQlD,KAAM,MAAOM,QAASvK,KAAK8I,MAAMtG,WAAY,CAACoF,KAAK,eAA3D,8BACA,kBAACuF,GAAA,EAAD,CAAQlD,KAAM,MAAOsJ,UAAQ,GAA7B,qC,GAzHD9T,IAAMC,Y,mHChCZP,IAAOG,IAAV,MAAd,IAYemJ,M,uKAJP,OAAO,kBAAC,GAAazI,KAAK8I,W,GAHRrJ,IAAMmK,gB,kKCAhC,IAAMvK,GAAcF,IAAOG,IAAV,MAqEFkU,GA9Df,4MAEI5T,aAFJ,IAGI6T,qBAHJ,IAIIvT,kBAJJ,qEAQQF,KAAKJ,QAAU,IAAI+H,GAAaT,IAChClH,KAAKyT,gBAAkBzT,KAAKJ,QAAQyC,sBAT5C,0CAYwB,IAAD,WAEf,UAAArC,KAAKJ,eAAL,SAAcsC,SAAS,CAAC0F,KAAK,aAAcE,SAAS,SAEpD,UAAA9H,KAAKJ,eAAL,SAAcC,MAAMmD,KAChB4C,aAAK,SAAAJ,GAAK,OAAIA,EAAM8B,QACpBzB,MACFvF,WACE,SAAAgH,GAAI,OAAG,EAAKmC,SAAS,CAACnC,cApBlC,+BAyBa,IAAD,QAEJ,OACI,kBAAC,IAAM2J,SAAP,KACI,kBAAC,GAAD,KACI,kBAAC,GAAiBjR,KAAKyT,gBACnB,kBAAC,GAAD,MAEwC,UAApC,UAAAzT,KAAKJ,eAAL,eAAcW,aAAa+G,OACvB,kBAAC,GAAD,MAGgC,UAApC,UAAAtH,KAAKJ,eAAL,eAAcW,aAAa+G,OACvB,kBAAC,GAAD,MAGgC,UAApC,UAAAtH,KAAKJ,eAAL,eAAcW,aAAa+G,OACvB,kBAAC,GAAD,MAGgC,UAApC,UAAAtH,KAAKJ,eAAL,eAAcW,aAAa+G,OACvB,kBAAC,GAAD,aA9ChC,GAA6B7H,IAAMC,W,qvBCtBXP,IAAOuU,IAAV,MAArB,IAKMC,GAAYxU,IAAOuU,IAAV,MASTE,GAAWzU,IAAOG,IAAV,MAURuU,GAAY1U,IAAO0K,EAAV,MA4BAiK,G,uKAZF,IAAD,OACJ,OACI,kBAACH,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,2BACA,kBAACxG,GAAA,EAAD,CAAQ/C,WAAS,EAACF,SAAO,EAACK,QAAS,WAAK,EAAKzB,MAAMiL,OAAO,KAA1D,wC,GAPOtU,IAAMC,W,sCC2BlBsU,G,uKAzDF,IAAD,OACL,OACC,oCAIA,yBAAKlD,UAAU,sBACX,yBAAKA,UAAU,2BAAf,KACA,kBAAC,KAAOxR,IAAR,CACIwR,UAAU,uBACVmD,QAAS,CAAEC,QAAQ,IACnBC,QAAS,CAAED,QAAQ,MAIvB,kBAAC,KAAO5U,IAAR,CACIwR,UAAU,mBACVmD,QAAS,CAAEG,MAAO,IAAKF,QAAQ,GAAKG,EAAE,OACtCF,QAAS,CAAEC,MAAO,EAAGF,QAAQ,EAAGG,EAAE,OAOlC,kBAACC,GAAA,EAAD,CAAQxD,UAAU,gBAAgB7G,KAAM,QAAxC,qCAEA,kBAACsK,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,MAAN,KACA,qDACA,2BAAO9G,YAAY,QAEnB,kBAAC6G,GAAA,EAAKC,MAAN,KACA,2DACA,2BAAO9G,YAAY,WAAW9F,KAAM,cAEpC,kBAAC2M,GAAA,EAAKC,MAAN,KACA,wEACA,2BAAO9G,YAAY,QAAQ9F,KAAM,WAEjC,kBAAC2M,GAAA,EAAKC,MAAN,OAGJ,kBAACrH,GAAA,EAAD,CAAQvF,KAAK,SAAS8E,OAAK,EAACiB,MAAO,SAAnC,4BACA,yBAAKmD,UAAU,qBAAoB,uBAAGvG,QAAS,WAAK,EAAKzB,MAAMiL,OAAO,KAAnC,qEAAnC,KACA,6GAAgC,wDAAhC,UAA8C,iFAA9C,+D,GA/CStU,IAAMC,W,u3FCJRP,IAAOG,IAAV,MAUUH,IAAOG,IAAV,MAWNH,IAAOG,IAAV,MAaLH,IAAOG,IAAV,MAKIH,IAAOG,IAAV,MAOOH,IAAOsV,IAAT,MAMDtV,IAAOG,IAAV,MASMH,IAAOuV,EAAV,MAQOvV,IAAOG,IAAV,MAUJH,IAAOG,IAAV,MAGQH,IAAOuV,EAAV,MASJvV,IAAOG,IAAV,MAgBKH,IAAOG,IAAV,MAMOH,IAAOG,IAAV,MACF,SAAAwJ,GAAK,OAAIA,EAAM6L,QAAS,SAAW,WAU3BxV,IAAOG,IAAV,MA5HnB,IAoLesV,GAhDf,uKAEa,IAAD,OACJ,OACQ,oCACA,kBAAC,KAAOtV,IAAR,CACI2U,QAAS,CAAEC,QAAQ,IACnBC,QAAS,CAAED,QAAQ,IACnBpD,UAAU,cACVvG,QAAS,WAAK,EAAKzB,MAAM+L,YAAY,MAEzC,kBAAC,KAAOvV,IAAR,CAAYwR,UAAU,uBAClB,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uCAAf,kCAGA,yBAAKA,UAAU,2CAAf,sFAIA,yBAAKA,UAAU,kBACX,kBAACyD,GAAA,EAAKC,MAAN,KACI,yBAAK1D,UAAU,mBAAf,IAAkC,wDAAlC,MACA,kBAACtD,GAAA,EAAD,CAAOsD,UAAU,mBAAmBlJ,KAAK,OAAOkN,aAAa,OAAOxH,KAAM,OAAQI,YAAY,kCAAShB,OAAK,IAC5G,yBAAKoE,UAAU,mBAAf,IAAkC,8DAAlC,KACA,kBAACtD,GAAA,EAAD,CAAOsD,UAAU,mBAAmBlJ,KAAK,WAAWkN,aAAa,OAAOxH,KAAM,MAAQI,YAAY,wCAAUhB,OAAK,MAIzH,kBAACS,GAAA,EAAD,CAAQT,OAAK,EAACiB,MAAO,SAArB,kCACA,yBAAKmD,UAAU,qBACf,yBAAKA,UAAU,4CAAf,oMAGA,kBAAC3D,GAAA,EAAD,CAAQ4H,QAAS,QAASpH,MAAO,OAAQ1D,KAAM,QAAS+K,UAAQ,EAAClE,UAAU,yBAAyBvG,QAAS,kBAAI,EAAKzB,MAAMiL,OAAO,KAAnI,yCAEJ,yBAAKjD,UAAU,SACX,yBAAKhF,IAAI,oBAAoBgF,UAAU,kBAtCnE,GAA6BrR,IAAMC,W,ggCC1HnBP,IAAOG,IAAV,MAKKH,IAAOuU,IAAV,MAWGvU,IAAOuU,IAAV,MAQHvU,IAAOG,IAAV,MAKKH,IAAOsV,IAAV,MAMOtV,IAAOG,IAAV,MAnCf,IA8CM2V,GAAiB9V,IAAOG,IAAV,MAIZ,IAAIqI,GAAaT,IAsCVgO,OAnCf,WAAgB,IAAD,EACqBC,mBAAS,GAD9B,mBACNC,EADM,KACMC,EADN,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAESC,EAFT,KAIb,OAEI,yBAAKzE,UAAU,OAOO,IAAlBwE,GACA,oCACE,kBAAC,GAAD,CAAcvB,OAAQsB,IACtB,kBAACJ,GAAD,KACE,kBAAC,GAAD,OAEAG,GACA,kBAAC,GAAD,CAASP,YAAaQ,EAAatB,OAAQwB,IAE7C,kBAAC,EAAD,OAGgB,IAAlBD,GACA,kBAAC,GAAD,CAAYvB,OAAQwB,MCnFVC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SDkIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9Q,MAAK,SAAA+Q,GACJA,EAAaC,gBAEd/Q,OAAM,SAAAN,GACLkE,QAAQlE,MAAMA,EAAMsR,c","file":"static/js/main.feadf5b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.344141c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.682ff38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.d5d3ef47.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.9666e753.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.1f278692.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.d9127b49.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.3731835b.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.67b08a0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.2c10874a.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.9f60a569.svg\";","module.exports = __webpack_public_path__ + \"static/media/10.a9ef776a.svg\";","module.exports = __webpack_public_path__ + \"static/media/11.511fc75a.svg\";","module.exports = __webpack_public_path__ + \"static/media/12.ab22843f.svg\";","module.exports = __webpack_public_path__ + \"static/media/13.b3e04c72.svg\";","module.exports = __webpack_public_path__ + \"static/media/14.e1354c3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/15.62142744.svg\";","module.exports = __webpack_public_path__ + \"static/media/16.5ad4e2d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/17.3608213b.svg\";","module.exports = __webpack_public_path__ + \"static/media/18.84aa7e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/19.e69dbfa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/20.57c836b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/21.5ed6eff2.svg\";","module.exports = __webpack_public_path__ + \"static/media/22.75116dcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/23.65986604.svg\";","import React from \"react\";\nimport styled from 'styled-components'\n\n//https://cocoder.tistory.com/158\n\nconst FOOTERCONTAINER = styled.footer`\n    background-color:#2C3031;\n    height:300px;\n    width:100%;\n`\n\n\nconst FROUMMARGIN = styled.div`\n    margin: 0 auto;\n    max-width: 1200px;\n    padding: 50px 1rem;\n`\n\nconst HELLO = styled.div`\n    font-family: 'Anton',sans-serif;\n    font-size: 2.8rem;\n    cursor: none;\n    text-decoration: unset;\n    color: white;\n    opacity:0.3;\n`\n\n\nexport default class R6Footer extends React.Component {\n\n    render(){\n        return(\n            <FOOTERCONTAINER>\n                <FROUMMARGIN>\n                    <HELLO> R6-Search Talk </HELLO>\n                    <div> Family Site </div>\n                    <div> R6 Search.me </div>\n                    <div> R6 Search.me </div>\n\n                </FROUMMARGIN>\n            </FOOTERCONTAINER>\n        )\n    }\n\n}","import {Reactor} from './Reactor'\nimport {BehaviorSubject, Subject} from 'rxjs'\n\nexport class Stub<SAction, SState, SMutate> {\n\n    public state: BehaviorSubject<SState>;\n    public action: Subject<SAction>;\n    public actions : SAction[] = [];\n    \n    constructor(reactor: Reactor<SAction, SState, SMutate>) {\n        this.state = new BehaviorSubject<SState>(reactor.initialState);\n        this.action = new Subject<SAction>();\n\n        reactor.disposedBy = this.state.asObservable()\n        .subscribe(\n            state=> { \n                reactor.currentState = state\n            }\n        )\n\n        reactor.disposedBy = this.action.subscribe(\n            action=>{\n                this.actions.push(action)\n            }\n        )\n    }\n\n    get lastAction(): SAction {\n        if (this.actions.length < 1) {\n            return this.actions[0];\n        } else {\n            return this.actions[this.actions.length-1]\n        }\n    }\n}","import { forOwn } from 'lodash';\nimport { Subscription } from 'rxjs';\n//https://github.com/RonasIT/dispose-bag\n\nexport class DisposeBag {\n  private subscriptions: Subscription;\n  private namedSubscriptions: { [name: string]: Subscription };\n\n  constructor() {\n    this.subscriptions = new Subscription();\n    this.namedSubscriptions = {};\n  }\n\n  set disposeOf(subscription : Subscription | undefined) {\n    if (subscription) {\n      this.subscriptions.add(subscription)\n    }\n  }\n  \n  public add(subscription: Subscription, name?: string): void {\n    if (name) {\n      this.namedSubscriptions[name] = subscription;\n    } else {\n      this.subscriptions.add(subscription);\n    }\n  }\n\n  public unsubscribe(name?: string): void {\n    if (name) {\n      if (this.namedSubscriptions.hasOwnProperty(name) && this.namedSubscriptions[name]) {\n        this.namedSubscriptions[name].unsubscribe();\n      }\n    } else {\n      this.subscriptions.unsubscribe();\n      forOwn(this.namedSubscriptions, (subscription) => {\n        subscription.unsubscribe();\n      });\n    }\n  }\n}\n","import { Observable ,Subject, Scheduler, empty, queueScheduler, Subscription } from 'rxjs'\nimport { flatMap, startWith, scan, catchError, shareReplay, tap,  observeOn, takeUntil, switchMap, distinctUntilChanged} from 'rxjs/operators'\nimport { Stub } from './Stub';\nimport { DisposeBag } from './DisposeBag';\n\n\nexport type ReactorControlType<Action, State> = { dispatcher?: (action: Action) => (...args: any)=>void  , stateStream?: Observable<State>, getState?: ()=>State}\n\nexport abstract class Reactor<Action = {}, State = {}, Mutation = Action> {\n\n    private dummyAction: Subject<any>;\n    private _action : Subject<Action>;\n    \n    private _initialState! : State; \n    public currentState! : State; \n    private _state!: Observable<State>; \n    private _stub!: Stub<Action,State,Mutation>; \n    protected scheduler : Scheduler = queueScheduler; \n    private _disposeBag : DisposeBag = new DisposeBag();\n    private _isStubEnabled : boolean;\n\n    /** unique ID  */\n    public readonly REACTORID$ = \"REACTORKIT_REACTOR\" \n\n    get initialState() {\n        return this._initialState;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get stub() {\n        return this._stub;\n    }\n\n    get action(){\n        return this._action;\n    }\n\n    // get currentState(){\n    //     return this._currentState;\n    // }\n\n    // set currentState(newState: State){\n    //     this._currentState = newState;\n    // }\n\n\n    getReactorControl(transformState?: Observable<State>) : ReactorControlType<Action, State>{\n        if (transformState) {\n            return { dispatcher: this.dispatchFn, stateStream: transformState, getState:this.getState}\n        } else {\n            return { dispatcher: this.dispatchFn, stateStream: this.state, getState:this.getState}\n        }\n    }\n\n    constructor(initialState : State, isStubEnabled : boolean = false){\n        \n        this._isStubEnabled = isStubEnabled;\n        this.dummyAction = new Subject<any>(); \n        this._initialState = initialState;\n\n        if (this._isStubEnabled) {\n            this._stub = new Stub(this);\n            this._action = this.stub!.action;\n            this._state = this.stub!.state\n        } else {\n            this._action = new Subject<Action>();\n            this._state = this.createStream();\n        }\n\n        this.dispatch = this.dispatch.bind(this);\n        this.dispatchFn = this.dispatchFn.bind(this);\n        this.getReactorControl = this.getReactorControl.bind(this);\n        this.getState = this.getState.bind(this);\n\n    }\n\n    get name(){\n        return this.constructor.name\n    }\n\n    getState(){\n        return this.currentState;\n    }\n\n    abstract mutate(action : Action): Observable<Mutation>;\n    abstract reduce(state: State, mutation: Mutation): State;\n\n    public dispatch(action : Action) {\n        this.action.next(action)\n    }\n\n    public dispatchFn(action : Action): (...args: any)=>void {\n        let self = this;\n        return function (...args:any) {\n            self.action.next(action)\n        }\n    }\n\n    protected transformAction(action: Observable<Action>): Observable<Action> {\n        return action\n    }\n\n    protected transformMutation(mutation: Observable<Mutation>): Observable<Mutation> {\n        return mutation\n    }\n\n    protected transformState(state: Observable<State>): Observable<State> {\n        return state\n    }\n\n    disposeOperator(){\n        return takeUntil(this.dummyAction)\n    }\n\n    disposeAll2() {\n        this.dummyAction.next();\n        this.dummyAction.complete();\n    }\n\n    disposeAll(){\n        this.disposeBag.unsubscribe();\n    }\n    \n    set disposedBy(subscription: Subscription | undefined) {\n        if (subscription) {\n                this.disposeBag.add(subscription)\n        }\n    }\n\n    get disposeBag(){\n        return this._disposeBag;\n    }\n\n    private createStream(): Observable<State> {\n\n        let action = this.action.pipe(observeOn(this.scheduler))\n        let transformedAction : Observable<Action> = this.transformAction(action);\n        let mutation = transformedAction.pipe( \n            flatMap(\n                (action) => {\n                    return this.mutate(action).pipe(catchError( err => empty()))\n                }\n            ) \n        )\n\n        let transformedMutation : Observable<Mutation> = this.transformMutation(mutation);\n\n        let state = transformedMutation.pipe(\n            scan((state, mutate) => {\n                return this.reduce( {...state}, mutate );\n            }, this.initialState),\n            catchError( () => {\n                return empty()\n            })\n            ,startWith(this.initialState), \n        )\n\n\n        let transformedState : Observable<State> = this.transformState(state)\n        .pipe(\n            tap( (state) => {\n                this.currentState = state\n            }),\n            shareReplay(1), \n        )\n\n        this.disposedBy = transformedState.subscribe();\n\n        return transformedState;\n    }\n\n}\n\n\n\n","import axios, { AxiosRequestConfig, AxiosInstance, AxiosResponse, AxiosError, } from \"axios\";\nimport { Observable, from, Subscriber } from \"rxjs\";\n\n\n\n\nexport class API {\n\n    [x:string]: any;\n\n    api!: AxiosInstance\n    \n    public constructor (config?: AxiosRequestConfig, baseUrl : string = \"http://r6-search.me/api/v1\") {\n        \n        this.api = axios.create(config);\n        \n        this.api.interceptors.request.use((param: AxiosRequestConfig) => ({\n            baseUrl: baseUrl,\n            ...param\n        }));\n\n        this.getUri = this.getUri.bind(this);\n        this.get = this.get.bind(this);\n        this.delete = this.delete.bind(this);\n        this.post = this.post.bind(this);\n\n\n    }\n\n    public success<T> (response: AxiosResponse<T>): T {\n        return response.data;\n    }\n\n    public error (error: AxiosError<Error>) {\n        throw error;\n    }\n\n\n    public getUri (config?: AxiosRequestConfig): string {\n        return this.api.getUri(config);\n    }\n\n    \n\n    public get<T, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig) : Observable<R> {\n        // let cancelToken = axios.CancelToken;\n        // let source = cancelToken.source();\n        //기존에 누가 요청했으면 그걸취소할것<div className=\"!\"></div>\n        return from(this.api.get<T,R>(url, config))\n        //누군가 이걸 unsubscrbie한다면\n        // return new Observable<R>( (observer) => {\n        //     this.api.get<T,R>(url, config)\n        //     .then( response => {\n        //         observer.next(response)\n        //         observer.complete()\n        //     })\n        //     .catch( err => {\n        //         observer.error(err)\n        //     }) //err.response\n        // })\n    }\n\n    public delete<T, R = AxiosResponse<T>> (url: string, config?: AxiosRequestConfig): Observable<R> {\n        return new Observable<R>( (observer) => {\n            this.api.delete<T, R>(url, config)\n            .then( response => {\n                observer.next(response)\n                observer.complete()\n            })\n            .catch( err => {\n                observer.error(err)\n            })\n        })\n    }\n\n\n    public post<T, B, R = AxiosResponse<T>> (url: string, data?: B, config?: AxiosRequestConfig): Observable<R> {\n\n        return new Observable<R>( (observer) => {\n            this.api.post<T,R>(url, data, config)\n            .then( response => {\n                observer.next(response)\n                observer.complete()\n            })\n            .catch( err => {\n                observer.error(err)\n            })\n        })\n\n    }\n\n\n}\n\n","import { Observable, of, empty , MonoTypeOperatorFunction, OperatorFunction, fromEvent, ObservableInput } from \"rxjs\";\nimport { catchError, switchMap, map, distinctUntilChanged, takeUntil, filter } from \"rxjs/operators\";\nimport { AxiosResponse } from \"axios\";\nimport { createRef } from \"react\";\nimport _ from 'lodash'\n\nexport function catchErrorJustReturn<T>(value: T): MonoTypeOperatorFunction<T> {\n    return catchError( err => of(value) )\n}\n\n\nexport function catchErrorReturnEmpty<T>() {\n    return catchError( err => empty() )\n}\n\n\nexport function flatAxiosResultAndCast<T>() : OperatorFunction<AxiosResponse<T>,T> {\n    return function(source: Observable<AxiosResponse<T>>) {\n        return source.pipe( \n            map( (value : AxiosResponse<T>) => {\n                return value.data\n            })\n        )\n    }\n}\n\nexport function deepDistinctUntilChanged() {\n    return distinctUntilChanged(_.isEqual)\n}\n\n\nexport function distinctUntilActionChanged<T>( target: Observable<any>, source: any ) : MonoTypeOperatorFunction<T> {\n    return takeUntil( target.pipe( filter ( res => _.isEqual(res,source))))\n}\n\n\n//array\n//object\n//if it is array\n//if it is object.\n\n\n//liveSearch는??\n//switchMap은 rkqtd\n//\n// export function fromEvent2( ref : React.RefObject<HTMLElement>,  eventName: string) {\n//     return fromEvent( ref.current.el , eventName)\n// }\n//여기서 subscribe //이벤트에서 들어온걸 구독가능합니다.\n//이벤트에서 들어온걸 구독할 숭 ㅣㅆ죠ㅣ.\n\n\n\n// export function Axoisjson<T, R = AxiosResponse<T>>() : OperatorFunction<T, R>{\n//     return input$ => input$.pipe( \n//         map( (value: AxiosResponse<T>) => value.data ),\n//         //if something is not..?\n//         //catchError?\n//     )\n//     //catch Error.\n//     /*\n//     return function(source: Observable<T>) {\n//         return map( (source:any) => { \n//             return source.data\n//         })\n//     }*/\n// }\n\nexport function filterNull<T>(justReturn:T) {\n    return function(source: Observable<T>): Observable<T>{\n        return new Observable<T>( subscriber => {\n            source.subscribe({\n                next(value) {\n                    if (value) {\n                        subscriber.next(value)\n                    } else {\n                        subscriber.next(justReturn)\n                    }\n                }, \n                error(error) {\n                    subscriber.error(error);\n                },\n                complete() {\n                    subscriber.complete();\n                }\n            })\n        })\n    }\n}","import { CommentDataType } from \"../Component/R6Comment\";\nimport { RANKBYREGION, ListType, ContentType } from \"../Util/Entity\";\n\nexport const commentMockup : CommentDataType[] = [\n    {\n        id:\"안녕\",\n        content: \"반가워요\",\n        meta: \"어제 2시\"\n    },\n    {\n        id:\"와우\",\n        content: \"진짜요? 바로 갑니다\",\n        meta: \"2015-05-01\"\n    },\n    {\n        id:\"사실?\",\n        content: \"사실임??\",\n        meta: \"어제 2시\"\n    },\n\n]\n    \nexport const searchResultMockUp : RANKBYREGION[]  =  [\n    {\n        region: \"global\",\n        rankStat: {\n            \"maxMmr\": 0,\n            \"death\": 0,\n            \"rank\": 0,\n            \"maxRank\": 0,\n            \"kills\": 0,\n            \"abandons\": 0,\n            \"mmr\": 2500,\n            \"wins\": 0,\n            \"region\": \"ncsa\",\n            \"season\": 17,\n            \"losses\": 0,\n            \"createdTime\": \"2020-05-19T18:19:30.0502837\",\n            \"maxRankString\": \"SILVER_II\",\n            \"rankString\": \"SILVER_II\",\n            nextRankMmr : 100,\n            nextRankString : \"ABC\",                \n        }\n    }\n]\n\n\n\nexport const rankbyregionMockup : RANKBYREGION[] =  \n    [{\n        region: \"global\",\n        rankStat: {\n            \"maxMmr\": 0,\n            \"death\": 0,\n            \"rank\": 0,\n            \"maxRank\": 0,\n            \"kills\": 0,\n            \"abandons\": 0,\n            \"mmr\": 2500,\n            \"wins\": 0,\n            \"region\": \"ncsa\",\n            \"season\": 17,\n            \"losses\": 0,\n            \"createdTime\": \"2020-05-19T18:19:30.0502837\",\n            \"maxRankString\": \"SILVER_II\",\n            \"rankString\": \"SILVER_II\",\n            nextRankMmr : 100,\n            nextRankString : \"ABC\",                \n        }\n    }]\n\n\n\n\n\nexport const listResultMockup : ListType[] = \n    [\n        {\n            \"postId\": 1,\n            \"recommendCnt\": 0, // 추천 수\n            \"viewCnt\": 2, // \n            \"createdTime\": \"2020-01-01T00:00:00\", // 올린 시간 \n            \"title\": \"공지입니다\", // 제목\n            \"author\": \"test1\", // 글쓴 아이디\n            \"hasImg\": true, // 이미지가 존재하는지\n            \"notice\": true // 글이 공지사항인지\n        },\n        {\n            \"postId\": 2,\n            \"recommendCnt\": 0,\n            \"viewCnt\": 0,\n            \"createdTime\": \"2020-01-01T00:00:00\",\n            \"title\": \"title1\",\n            \"author\": \"test1\",\n            \"hasImg\": true,\n            \"notice\": false\n        }\n    ]\n\n\n\n\nexport const postResultMockup : ContentType = \n{\n    \"postId\": 2,\n    \"author\": \"user1\",\n    \"title\": \"title1\",\n    \"content\": \"conetne1\",\n    \"viewCnt\": 0,\n    \"recommendCnt\": 0,\n    \"commentList\": [\n        {\n            \"commentId\": 1,\n            \"username\": \"user2\",\n            \"content\": \"댓글입니다\",\n            \"childComment\": [\n                {\n                    \"commentId\": 2,\n                    \"username\": \"user1\",\n                    \"content\": \"대댓글입니다\",\n                    \"childComment\": [],\n                    \"createdTime\": \"2020-01-01T00:00:00\"\n                },\n                {\n                    \"commentId\": 3,\n                    \"username\": \"user2\",\n                    \"content\": \"대대ㅡㅅ글입니다\",\n                    \"childComment\": [],\n                    \"createdTime\": \"2020-01-01T00:00:00\"\n                }\n            ],\n            \"createdTime\": \"2020-01-01T00:00:00\"\n        },\n        {\n            \"commentId\": 4,\n            \"username\": \"user1\",\n            \"content\": \"새로운 댓글입니다\",\n            \"childComment\": [],\n            \"createdTime\": \"2020-01-01T00:00:00\"\n        }\n    ],\n    \"createdTime\": \"2020-01-01T00:00:00\",\n    \"recommend\": false // 로그인한 사용자가 추천을 눌렀으면 true \n}\n\n\n\n","\nimport { RANKBYREGION } from '../Util/Entity';\nimport { API } from './API';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { forkJoin, Observable, from, Subscriber } from 'rxjs';\nimport {  map, tap, delay } from 'rxjs/operators';\nimport { catchErrorJustReturn, flatAxiosResultAndCast } from './RxJsExtension';\nimport moxios from 'moxios';\nimport { listResultMockup, rankbyregionMockup } from '../Data/mockup';\nimport { Reactor } from 'jsreactorkit'\n\n\n\n\nexport class R6StatAPI extends API {\n\n\n    static instance : R6StatAPI | null = null;\n\n    static createInstance() {\n        var object = new R6StatAPI();\n        return object;\n    }\n\n    static get shared() {\n        if (!R6StatAPI.instance) {\n            R6StatAPI.instance = R6StatAPI.createInstance();\n        }\n        return R6StatAPI.instance;\n    }\n\n    static set abc(value: number) {\n        this.abc = this.abc + 1;\n    }\n\n    static get abc(){\n        return this.abc;\n    }\n\n    abc : number = 0;\n\n    public constructor (config?: AxiosRequestConfig) {\n        super(config);\n        moxios.install(this.api);\n        moxios.stubRequest(new RegExp(\"([0-9]|[a-z]).*\"), {\n            status: 200,\n            responseText: JSON.stringify(listResultMockup)\n            // response: {\n            //     data: listResultMockup\n            // } \n        })\n        // this middleware is been called right before the http request is made.\n        // this.interceptors.request.use((param: AxiosRequestConfig) => ({\n        //     ...param,\n        // }));\n\n        // // this middleware is been called right before the response is get it by the method that triggers the request\n        // this.interceptors.response.use((param: AxiosResponse) => ({\n        //     ...param\n        // }));\n\n        // this.userLogin = this.userLogin.bind(this);\n        // this.userRegister = this.userRegister.bind(this);\n        // this.getAllUsers = this.getAllUsers.bind(this);\n        // this.getById = this.getById.bind(this);\n    }\n\n\n    public getGeneralAPI(id : string) {\n        // const requests = [\"uplay\",\"psn\",\"xbl\"].map( (value)=>{\n            // let url = \"http://r6-search.me/api/v1/generalpvp/\" + value + \"/\" + id\n            \n            // let a = this.get<GENERALAPI>(url)\n            // .pipe(\n            //     map( this.success ),\n            //     catchError( (err : AxiosError<Error>) => {return err.response?.data as BasicErrorFormat})\n            // )\n\n\n            // // .pipe( \n            // //     map( this.success ),\n            // //     catchError( (err) => { return err })\n            // // )}\n            // return a;\n        // })\n\n        const requests = [\"uplay\",\"psn\",\"xbl\"].map( (value) => {\n            let url = \"http://r6-search.me/api/v1/rank/\" + value + \"/\" + id\n            return this.get<RANKBYREGION[]>(url)\n            .pipe(\n                // map(this.success),\n                delay(5000),\n                // catchErrorReturnEmpty(),\n                flatAxiosResultAndCast(),\n                catchErrorJustReturn([] as RANKBYREGION[]),\n            )   \n        })\n        \n        return forkJoin(requests)\n        \n    }\n\n}\n\n\n/**\n *\n */","import { Reactor, ReactorControlType } from \"../../ReactorKit/Reactor\";\nimport { Observable , concat, of  } from \"rxjs\";\nimport { takeUntil, map,  filter, delay, finalize, tap } from \"rxjs/operators\";\nimport { R6StatAPI } from \"../../Library/R6StatAPI\";\nimport { ListType, ContentType } from \"../../Util/Entity\";\nimport { flatAxiosResultAndCast, catchErrorJustReturn, distinctUntilActionChanged } from \"../../Library/RxJsExtension\";\nimport { ajax } from 'rxjs/ajax';\n\n// export type MenuType = \"공략/팁\" | \"클랜홍보\" | \"같이하기\" | \"자유게시판\"\n\n\n// export const MENUCLICKACTION = 'MENUCLICKACTION'\n\n// export interface MenuClickAction { \n//     type: typeof MENUCLICKACTION\n//     menu : MenuType\n// }\n\n// export const MODECHANGE = 'MODECHANGE'\n\n// export interface FETCHING { \n//     type: typeof MODECHANGE\n//     query: ListMode\n// }\n\n// 입력하는 액션 클릭하는 액션\n// 다른리액터로 보내기? <owyaeh className=\"\"></owyaeh>\n\nexport function TopicToString( topicType: Topic) {\n    switch(topicType) {\n        case \"clan\":\n            return \"클랜홍보\"\n        case \"free\":\n            return \"자유게시판\"\n        case \"tips\":\n            return \"공략/팁\"\n        case \"together\":\n            return \"같이하기\"\n    }\n}\n\nexport type Topic = \"tips\"|\"free\"| \"together\"| \"clan\"\ntype Mode = \"list\" | \"edit\" | \"view\"\n\nexport const CLICKTOPIC = \"CLICKTOPIC\" as const\nexport const CLICKWRITE = \"CLICKWRITE\" as const\nexport const CLICKPAGE = \"CLICKPAGE\" as const\nexport const CLICKPOST = \"CLICKPOST\" as const \nexport const CLICKBACK = \"CLICKBACK\" as const\n\n\nexport interface CLICKTOPIC {\n    type: typeof CLICKTOPIC;\n    newTopic: Topic,\n}\nexport interface CLICKWRITE {\n    type: typeof CLICKWRITE;\n}\nexport interface CLICKPAGE {\n    type: typeof CLICKPAGE;\n    newPage: number,\n}\nexport interface CLICKPOST {\n    type: typeof CLICKPOST;\n    postId: number,\n}\n\nexport interface CLICKBACK {\n    type: typeof CLICKBACK;\n}\n\nexport type ForumAction = CLICKTOPIC | CLICKWRITE | CLICKPAGE | CLICKPOST | CLICKBACK \n\n\nexport const SETLOADING = \"SETLOADING\"\nexport const FETCHLIST = \"FETCHLIST\"\nexport const FETCHPOST = \"FETCHPOST\"\nexport const MODECHANGE = \"MODECHANGE\"\nexport const TOPICCHANGE = \"TOPICCHANGE\"\n\n// 상태에 대한 힌트.\nexport interface SETLOADING {\n    type: typeof SETLOADING,\n    isLoading: boolean,\n}\n\nexport interface FETCHLIST {\n    type: typeof FETCHLIST,\n    list: ListType[],\n    page: number\n}\nexport interface FETCHPOST {\n    type: typeof FETCHPOST,\n    post: ContentType,\n}\n\nexport interface MODECHANGE {\n    type: typeof MODECHANGE,\n    mode : Mode,\n}\n\nexport interface TOPICCHANGE {\n    type: typeof TOPICCHANGE,\n    topic: Topic,\n}\n\ntype ForumMutation = SETLOADING | FETCHLIST | FETCHPOST | MODECHANGE | TOPICCHANGE \n// --- state\n\nexport interface ForumState {\n    topic : Topic,\n    mode: Mode,\n    page: number,\n    list: ListType[],\n    isLoading:boolean,\n    isError:boolean,\n    post?: ContentType,\n    isLogined: boolean,\n}\n\nexport const ForumStateInitialState : ForumState = {\n    isError: false,\n    isLoading: true,\n    page: 1,\n    mode:\"list\",\n    topic:\"tips\",\n    post: undefined,\n    list:[],\n    isLogined: false,\n}\n\nexport type ForumReactorProps = ReactorControlType<ForumAction, ForumState>;\n\nexport default class ForumReactor extends Reactor<ForumAction, ForumState, ForumMutation> {\n\n    mutate(action: ForumAction): Observable<ForumMutation> {\n        switch(action.type) {\n            case \"CLICKTOPIC\":\n                return concat(\n                    //topic change\n                    of<ForumMutation>({type:\"TOPICCHANGE\", topic: action.newTopic}),\n                    of<MODECHANGE>({type:\"MODECHANGE\", mode: \"list\"}),\n                    //is Loading\n                    of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n                    //WebRequest\n                    this.fetchList(action.newTopic).pipe(\n                        // takeUntil(of(1)),\n                        takeUntil(this.action.pipe(filter((value)=> {\n                            return value.type === action.type\n                        }))),\n                        map<ListType[], ForumMutation>( res => {\n                            return {type:\"FETCHLIST\", list: res, page: 1 } \n                        }),\n                    ),\n                    // of<ForumMutation>({type:\"SETLOADING\", isLoading: false}).pipe( tap (value => console.log(\"VALUE OUT\")))\n\n                    // of<ForumMutation>({type:\"FETCHLIST\", isLoading: true}),\n                    //is Loading\n                    // of<ForumMutation>({type:\"SETLOADING\", isLoading: false})\n                        //결과값 전달=> 결과값이 다르지않으면 그대로전달.\n                )\n\n        case \"CLICKBACK\":\n            return of<MODECHANGE>({type:\"MODECHANGE\", mode: \"list\"})\n        \n        case \"CLICKWRITE\":\n            return of<MODECHANGE>({type: \"MODECHANGE\", mode:\"edit\"})\n\n        case \"CLICKPAGE\":\n            return concat(\n                //is Loading\n                of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n                //fetching List\n                this.fetchList(this.currentState.topic, action.newPage).pipe(\n                    takeUntil(this.action.pipe(filter(value => value === action))),\n                    map<ListType[], ForumMutation>( res => {\n                        return {type:\"FETCHLIST\", list: res, page: 1 } \n                    })\n                ),\n                of<ForumMutation>({type:\"SETLOADING\", isLoading: false}),\n            )\n\n        case \"CLICKPOST\":\n            return concat(\n            of<MODECHANGE>({type: \"MODECHANGE\", mode:\"view\"}),\n            of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n            //WebRequest\n            this.fetchPost(action.postId).pipe(\n                // takeUntil(this.action.pipe(filter(value => value === action))),\n                map<ContentType, ForumMutation>( res => ({type:\"FETCHPOST\", post : res}))\n            ),\n            // of<ForumMutation>({type:\"FETCHLIST\", isLoading: true}),\n            //is Loading\n            of<ForumMutation>({type:\"SETLOADING\", isLoading: false}),\n            )\n        }\n        \n    }\n\n    reduce(state: ForumState, mutation: ForumMutation): ForumState {\n\n        let newState = state;\n        switch(mutation.type) {\n            case \"TOPICCHANGE\":\n                newState.topic = mutation.topic\n                return newState;\n            case \"MODECHANGE\":\n                newState.mode = mutation.mode\n                return newState;\n            case \"SETLOADING\":\n                newState.isLoading = mutation.isLoading\n                return newState\n            case \"FETCHLIST\":\n                newState.isLoading = false;\n                if (mutation.list.length === 0){\n                    newState.isError = true;\n                    return newState\n                } else {\n                    newState.list = mutation.list;\n                    newState.page = mutation.page;\n                    return newState\n                }\n            case \"FETCHPOST\":\n                if (Object.keys(mutation.post).length === 0) {\n                    newState.isError = true;\n                    return newState;\n                } else {\n                    newState.post = mutation.post;\n                    return newState;\n                }\n        }\n    }\n   \n    fetchList(topic: Topic, page: number = 1) : Observable<ListType[]> {\n\n        return R6StatAPI.shared.get<ListType[]>(`http://www.r6-search.me/topic/${topic}?page=${page}`)\n        .pipe(\n            delay(500),\n            flatAxiosResultAndCast(),\n            catchErrorJustReturn([] as ListType[]),\n        )\n    }\n\n    fetchPost(postId: number) : Observable<ContentType> {\n        return R6StatAPI.shared.get<ContentType>(`http://www.r6-search.me/post/${postId}`)\n        .pipe(\n            flatAxiosResultAndCast(),\n            catchErrorJustReturn({} as ContentType)\n        )\n    }\n\n\n\n    // protected transformAction(action: Observable<ForumAction>): Observable<ForumAction> {\n    //     // return action.pipe(filter( action === ))\n    //     this.action.subscribe( res => console.log(\"ACtion\", res))\n\n    //     return action.pipe( tap( res => console.log(\"TAPPED\" , res)))\n    // }\n\n\n\n }","import { Reactor, ReactorControlType } from \"./Reactor\";\nimport { ComponentClass } from \"react\";\nimport { DisposeBag } from \"./DisposeBag\";\nimport React from \"react\";\nimport { debounceTime,  map, skip } from \"rxjs/operators\";\nimport { deepDistinctUntilChanged } from \"../Library/RxJsExtension\";\nimport { Observable } from \"rxjs\";\n\n\n\n// export interface ControlProps<Action, State> {\n//     reactor_control? : ReactorControlType<Action, State>\n// }\n\n\n\nexport default function withReactor<\nAction = any, \nState = any,\nP = {}, // original props\n>(\n    Component: ComponentClass<P & ReactorControlType<Action,State>>, parentFilterMapper?:(state: State) => Partial<State>, transfromStateStreamFromThisComponent : boolean = true, skipSync : boolean = true\n) : React.ComponentClass<P & ReactorControlType<Action,State>> {\n    class A extends React.PureComponent<P & ReactorControlType<Action,State>, {updatar:number}> {\n\n        static displayName = 'REACTORKIT_REACTIVE_VIEW';\n\n        disposeBag: DisposeBag | null = null;\n        private _parentStateStream?: Observable<State>; \n        private nextControls? : ReactorControlType<Action, State>;\n\n        constructor(props:P) {\n            super(props)\n            if (Component.displayName === \"REACTORKIT_GLOBAL\") {\n                console.error(\"ERROR : GLOBAL SHOULD BE MOST OUTSIDE OF COMPONENT\")\n            }\n            this.state = { updatar : 1 }\n        }\n\n        UNSAFE_componentWillMount(){       \n\n            this.disposeBag = new DisposeBag();\n            function customMapper(filterMapper?: (state: State) => any) {\n                if (filterMapper) {\n                    return map(filterMapper)\n                } else {\n                    return map<State,State>( value => value )\n                }\n            }\n\n            if (this.props.stateStream) {\n                this._parentStateStream = this.props.stateStream\n                if (transfromStateStreamFromThisComponent && parentFilterMapper) {\n                    this.nextControls = { stateStream: this.props.stateStream.pipe(customMapper(parentFilterMapper)), getState: this.props.getState, dispatcher: this.props.dispatcher }\n                    // this.nextControls.stateStream = this.props.stateStream.pipe(customMapper(parentFilterMapper))\n                } else {\n                    this.nextControls = this.props\n                }\n            }\n\n            if (this._parentStateStream) {\n\n                this.disposeBag!.disposeOf = this._parentStateStream!.pipe(\n                    customMapper(parentFilterMapper),\n                    deepDistinctUntilChanged(), \n                    skip((skipSync? 1 : 0)),\n                    debounceTime(50), \n                ).subscribe( \n                    res => {\n                        this.setState({updatar : this.state.updatar * -1})  \n                    }\n                )\n            }\n\n            if (!this._parentStateStream) {\n                this.disposeBag = null;\n            }\n        }\n\n\n        componentWillUnmount(){\n            /** unsubscribe and release localReactor */\n            this.disposeBag?.unsubscribe();\n            this.disposeBag = null;\n\n        }\n\n        render(){\n            return( <Component {...this.props} reactor_control={this.nextControls} updatar$updatar$updatar={this.state.updatar}></Component>)\n        }\n    }\n    return A;\n} \n","import React from \"react\";\nimport styled from 'styled-components'\nimport {  Menu, Icon } from \"semantic-ui-react\";\nimport ForumReactor, {  ForumState, ForumAction, ForumReactorProps } from \"../../@Forum/ForumReactor\";\nimport { map } from \"rxjs/operators\";\nimport { deepDistinctUntilChanged } from \"../../../Library/RxJsExtension\";\nimport ReactiveView from \"../../../ReactorKit/withReactor\";\nimport withReactor from \"../../../ReactorKit/withReactor\";\nimport { Reactor } from \"../../../ReactorKit/Reactor\";\n\n\nconst NAVITEMS = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 1200px;\n  height: 100%;\n  margin: 0 auto;\n`\n\nconst BRANDLOGO = styled.a`\n    font-family: 'Shadows Into Light', cursive;\n    font-size: 3rem;\n    font-weight:bold;\n    color:black;\n    cursor: pointer;\n    text-decoration: unset;\n    margin-right:auto;\n\n    &:hover {\n        color: black;\n    }\n`\n\n\nclass R6CommunityNavigation extends React.PureComponent<ForumReactorProps> {\n\n    // constructor(props: {\n    //     reactor?: ForumReactor\n    // }) {\n    //     super(props);\n    //     this.state = this.props.reactor?.currentState!;\n    // }\n\n    componentDidMount(){\n        // this.props.reactor?.state.pipe(\n        //     map( res => res.topic ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     topic => this.setState({topic})\n        // )\n    }\n\n    render() {\n\n            const {topic} = this.props.getState!();\n\n            return(\n                <div style={{marginBottom:'20px'}}>\n                    <Menu size={\"large\"} compact pointing secondary>\n                        <Menu.Item  \n                            active={topic === \"tips\"}\n                            onClick={this.props.dispatcher!({type:\"CLICKTOPIC\", newTopic:\"tips\"})}\n                        >\n                        <Icon name='gamepad' disabled={topic !== \"tips\"} />\n                        공략/팁 게시판\n                        </Menu.Item>\n                        <Menu.Item  \n                            active={topic === \"clan\"}\n                            onClick={this.props.dispatcher!({type:\"CLICKTOPIC\", newTopic:\"clan\"})}\n                        >\n                        <Icon name='signup' disabled={topic !== \"clan\"} />\n                        클랜 정보 게시판\n                        </Menu.Item>\n                        <Menu.Item\n                            active={topic === \"together\"}\n                            onClick={this.props.dispatcher!({type:\"CLICKTOPIC\", newTopic:\"together\"})}\n                        >\n                        <Icon name='users' disabled={topic !== \"together\"}/>\n                        같이하기\n                        </Menu.Item>\n                        <Menu.Item\n                            active={topic === \"free\"}\n                            onClick={this.props.dispatcher!({type:\"CLICKTOPIC\", newTopic:\"free\"})}\n                        >\n                        <Icon name='list alternate' disabled={topic !== \"free\"} />\n                        자유게시판\n                        </Menu.Item>\n                    </Menu>\n                \n                </div>\n            )\n        }\n}\n\n\nexport default withReactor(R6CommunityNavigation, (state) => ({topic: state.topic}))","import React from \"react\";\nimport { Reactor, ReactorControlType } from \"./Reactor\";\nimport { R6Footer } from \"../Component\";\n\n\nfunction map(children : React.ReactNode, func: (child : React.ReactElement, index?:number, total?: number)=>void) {\n    let index = 0;\n    return React.Children.map(children, (child) =>\n      React.isValidElement(child) ? func(child, index++, React.Children.count(children)) : child,\n    );\n}\n\n\n//router?\n//ReactRouter\n//ReactorRouter\n//https://www.bsidesoft.com/830\nexport default class ReactorGroup extends React.PureComponent<ReactorControlType<any,any>>{\n    \n    render(){\n        return(\n            <>\n                {\n                    map( this.props.children, (child, index, total) => {\n                        // console.log(child.type)\n                        return React.cloneElement( child , {\n                            ...this.props,\n                            ...child.props,\n                        })\n                    })\n                }\n            </>\n        )\n    }\n\n}","import React from \"react\";\nimport styled from 'styled-components';\nimport { Placeholder, Segment } from \"semantic-ui-react\";\nimport { ListType } from \"../../../Util/Entity\";\nimport Moment from 'react-moment'\n\nconst CELLSTYLE = styled.div<{isNotice: boolean}>`\n    position: relative;\n    background: #fff;\n    box-shadow: 0 1px 2px 0 rgba(34,36,38,.15);\n    margin: 1rem 0;\n    padding: 1em 0;\n    border-radius: .28571429rem;\n    border: 1px solid rgba(34,36,38,.15);\n    height: 100px;\n    cursor:pointer;\n    &:hover {\n         background-color:rgba(0,0,0,.05);\n    }\n\n    background: ${ props => props.isNotice ? 'rgba(254, 100, 111, 0.1)' : 'white'};\n\n`\n\n//table?\n//grid?\n\nconst GRIDOUTER = styled.div`\n    overflow:hidden;\n    display:grid;\n    grid-template-columns:80px 1fr;\n    width:100%;\n    height:100%;\n`;\n\nconst GRIDTITLE = styled.div`\n    display:grid;\n    align-items:center;\n    grid-template-rows:1fr 1fr;\n  `\n//    \n//    width:100%;\n//height:100%;\n//    // \n\n\nconst TITLEAREA = styled.div`\n    font-size:1.5rem;\n    font-weight:bold;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    max-width:900px;\n`\n//overflow-hidden\n \n\nconst SUBTITLEAREA = styled.div`\n    display:flex;\n    flex-direction:row;\n    font-size:1.1rem;\n`\n\nconst AUTHOR = styled.div`\n    font-weight:bold;\n    margin-right:0.8em;\n\n`\n\nconst TIME = styled.div`\n    font-size:1rem;\n    color:#A9A9A9;\n`\n\nconst RECOMMENDEDFLEX = styled.div<{isNotice: boolean}>`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:space-evenly;\n\n    img {\n        width: ${ props => props.isNotice ? '30px' : '20px'};\n        height: ${ props => props.isNotice ? '30px' : '20px'};\n    }\n`\n\nexport default class R6Cell extends React.Component<{data : ListType, isNotice:boolean, onClick:()=>void}> {\n    \n    render(){\n        return(\n            <CELLSTYLE onClick={this.props.onClick} isNotice={this.props.isNotice}>\n                <GRIDOUTER>\n                    <RECOMMENDEDFLEX isNotice={this.props.isNotice}>\n                        { (!this.props.isNotice) ?\n                         (\n                            <>\n                                <img src=\"./icon-vote-up.png\"></img>\n                                <div> {this.props.data.recommendCnt} </div>\n                            </>\n                        ) : \n                        (\n                            <>\n                            <img src=\"./tack.png\"></img>\n                            </>\n                        )\n                        }\n\n                    </RECOMMENDEDFLEX>\n                    <GRIDTITLE>\n                        <TITLEAREA>\n                            {this.props.data.title} \n                        </TITLEAREA>\n                        <SUBTITLEAREA>\n                            <AUTHOR>{this.props.data.author}</AUTHOR>\n                            <TIME><Moment fromNow>{this.props.data.createdTime}</Moment></TIME>\n                        </SUBTITLEAREA>\n                    </GRIDTITLE>\n                </GRIDOUTER>\n            </CELLSTYLE>\n        )\n    }\n}\n\n\n/**\n * \n *     height:80px;\n    margin-bottom:10px;\n    background-color:white;\n    width:100%;\n    border:black 1px solid;\n    border: 1px solid rgba(34,36,38,.15);\n    box-shadow: 0 1px 2px 0 rgba(34,36,38,.15);\n    cursor:pointer;\n    &:hover {\n         background-color:rgba(0,0,0,.05);\n    }\n\n */","import React from \"react\"\nimport { Placeholder, Segment } from \"semantic-ui-react\";\nimport ForumReactor, { ForumReactorProps } from \"../../@Forum/ForumReactor\";\nimport R6Cell from \"./R6Cell\";\nimport { ListType } from \"../../../Util/Entity\";\nimport { DisposeBag } from \"../../../ReactorKit/DisposeBag\";\nimport ReactiveView  from \"../../../ReactorKit/withReactor\";\nimport withReactor from \"../../../ReactorKit/withReactor\";\n\nexport class R6List extends React.PureComponent<ForumReactorProps>{\n\n    // constructor(props: {\n    //     reactor?: ForumReactor\n    //     initialState?: ForumState\n    // }) {\n    //     super(props);\n    //     // this.state = this.props.reactor?.currentState!;\n    // }\n\n    disposeBag!: DisposeBag;\n\n    public getDummy( numberOfCells : number){\n        let dummy = [];\n        for (let i = 0 ; i < numberOfCells; i++) {\n            dummy.push( \n                <Segment key={\"DUMMY_\"+i}>\n                    <Placeholder fluid>\n                    <Placeholder.Line length={\"full\"}/>\n                    <Placeholder.Line length={\"long\"}/>\n                    <Placeholder.Line length={\"short\"}/>\n                    <Placeholder.Line length={\"very long\"}/>\n                    </Placeholder>\n                </Segment>\n            )\n        }\n        return dummy\n    }\n\n    public getList( cellData : ListType[]){\n        let cell = [];\n        for (let i = 0 ; i < cellData.length ; i++) {\n            cell.push( \n                <R6Cell onClick={this.props.dispatcher!({type:\"CLICKPOST\",postId: cellData[i].postId})} isNotice={cellData[i].notice} key={\"CELL_\"+i} data={cellData[i]}/>\n            )\n        }\n        return cell\n    }\n    \n    render(){\n        const { isLoading, list, isError } = this.props.getState!();\n\n        if ( isLoading ) {\n            return (\n                <>  \n                    {this.getDummy(5)}\n                </>\n            )\n        } else if (list.length === 0 && isError) { \n            return <div> 에러 </div>\n        } else {\n            return (\n                <>\n                    {this.getList(list)}\n                </>\n            )\n        }\n    } \n    //     if (this.state.isLoading) {\n            // return(\n            //     <>  \n            //     <div> {this.state.topic} 로딩 </div>\n            //     {this.getDummy(5)}\n            //     </>\n            // )   \n    //     } else if (this.state.list.length === 0 && this.state.isError === true) {\n    //         return(\n    //             <>\n    //             에러\n    //             {/* <R6Cell > 에러 </R6Cell> */}\n    //             </>\n    //         )\n    //     }\n    //     else {\n    //         return (\n    //             <>\n    //             <div> {this.state.topic}  출력완료 ! </div>\n    //             {this.getList(this.state.list)}\n    //             </>\n    //         )\n    //     }\n    // }\n        \n}\n//height : 125px;\n\nexport default withReactor(R6List);\n\n","import { Input, Button } from \"semantic-ui-react\";\nimport React from \"react\";\nimport styled from 'styled-components'\nimport ForumReactor, { ForumState, ForumReactorProps } from \"../../@Forum/ForumReactor\";\nimport withReactor from \"../../../ReactorKit/withReactor\";\n\n\n\nconst BUTTONAREA = styled.div`\n    display:flex;\n    justify-content:space-evenly;\n    align-items:center;\n    height:45px;\n    margin-bottom:10px;\n`\n\n\nconst SEARCHAREA = styled.div`\n    display:flex;\n    justify-content: flex-end;\n    align-items:center;\n    height:45px;\n    margin-bottom:10px;\n`\n\n\nclass R6ListFooter extends React.PureComponent<ForumReactorProps>{\n\n    render() {\n        return(\n            <>\n                <BUTTONAREA>\n                    <Button basic fluid content='이전' icon='left arrow' labelPosition='left'/>\n                    <Button basic fluid content='다음' icon='right arrow' labelPosition='right' />\n                </BUTTONAREA>\n                <SEARCHAREA>\n                    <Input style={{marginRight:'10px'}} icon='search' placeholder='Search...' />\n                    <Button color={\"black\"} onClick={this.props.dispatcher!({type:\"CLICKWRITE\"})}> 글쓰기 </Button>\n                </SEARCHAREA>\n            </>\n        );\n    }\n}\n\nexport default withReactor(R6ListFooter, (state) => ({mode: state.mode}));\n","import React from \"react\";\nimport ForumReactor, { ForumState } from \"../../../@Forum/ForumReactor\";\nimport styled from \"styled-components\";\nimport { Input } from \"semantic-ui-react\";\n// import Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\nimport { Viewer } from '@toast-ui/react-editor'\n\n\nconst POSTAREA = styled.div`\n    \n`\n//goback...\nexport default class R6Post extends React.PureComponent<{\n    reactor?: ForumReactor\n    initialState?: ForumState\n}, ForumState> {\n\n\n    render(){\n        return (\n            <Viewer initialValue={\"<strong>abcd</strong><br><br><br><br><youdoin'tknwoadf>\"}/>\n        )\n    }\n}\n","import { RANKBYREGION } from \"../../../../Util/Entity\";\nimport { Reactor } from \"../../../../ReactorKit/Reactor\";\nimport { Observable, of } from \"rxjs\";\n\nexport const SELECTRANK = \"SELECTRANK\"\nexport const CLICKREGISTERBUTTON = \"CLICKREGISTERBUTTON\"\nexport const CANCELREGISTERBUTTON = \"CANCELREGISTERBUTTON\"\n\nexport interface SELECTRANK {\n    type: typeof SELECTRANK;\n    data: RANKBYREGION,\n}\n\nexport interface CLICKREGISTERBUTTON {\n    type: typeof CLICKREGISTERBUTTON;\n} //how to get text?\n\nexport interface CANCELREGISTERBUTTON {\n    type: typeof CANCELREGISTERBUTTON;\n}\n\nexport type EditorAction = SELECTRANK | CLICKREGISTERBUTTON | CANCELREGISTERBUTTON\n\nexport const POSTUPLOAD = \"POSTUPLOAD\"\nexport const ADDRANKDATA = \"ADDRANKDATA\"\nexport const SETLOADING = \"SETLOADING\"\nexport const MODALSHOW = \"MODALSHOW\"\n\nexport interface POSTUPLOAD {\n    type: typeof POSTUPLOAD;\n}\nexport interface ADDRANKDATA {\n    type: typeof POSTUPLOAD;\n    data: RANKBYREGION,\n}\nexport interface SETLOADING {\n    type: typeof SETLOADING;\n    isLoading:boolean;\n}\nexport interface MODALSHOW {\n    type: typeof MODALSHOW;\n    isShow:boolean;\n}\n\ntype EditorMutation = POSTUPLOAD | ADDRANKDATA | SETLOADING  \n\n// --- state\nexport interface EditorState {\n    isLoading: boolean,\n    isError:boolean,\n    data:string,\n}\n\nexport const EditorinitialState: EditorState = {\n    isLoading: false,\n    isError:false,\n    data:\"\",\n}\n\n\nexport default class R6EditorReactor extends Reactor<EditorAction, EditorState, EditorMutation> {\n\n    mutate(action: EditorAction): Observable<EditorMutation> {\n        return of({type:\"SETLOADING\", isLoading:false});\n    }\n\n    reduce(state: EditorState, mutation: EditorMutation): EditorState {\n       \n        return state;\n    }\n    \n}","import { RANKAPI, RANKBYREGION } from \"../../../../../Util/Entity\"\nimport { Reactor } from \"../../../../../ReactorKit/Reactor\"\nimport { Observable, of, concat } from \"rxjs\"\nimport { R6StatAPI } from \"../../../../../Library/R6StatAPI\"\nimport { flatAxiosResultAndCast, catchErrorJustReturn } from \"../../../../../Library/RxJsExtension\"\nimport { filter, takeUntil, map,  } from \"rxjs/operators\"\n\nexport const WRITETEXT = \"WRITETEXT\" as const\nexport const INVIS_SEARCHLIST = \"INVIS_SEARCHLIST\" as const\nexport const CANCELSEARCH = \"CANCELSEARCH\" as const\nexport const CLICKSEARCH = \"CLICKSEARCH\" as const\n\nexport interface WRITETEXT {\n    type: typeof WRITETEXT;\n    text: string,\n}\n\n/** 이 Action은 존재하지만 유저가 볼 순 없습니다. 시간으로 인해 Trigger됩니다. */\nexport interface INVIS_SEARCHLIST {\n    type: typeof INVIS_SEARCHLIST;\n    text: string,\n}\n\nexport interface CLICKSEARCH {\n    type: typeof CLICKSEARCH;\n}\n\nexport interface CANCELSEARCH {\n    type: typeof CANCELSEARCH;\n}\n\n\nexport type SearchAction = WRITETEXT | INVIS_SEARCHLIST | CANCELSEARCH | CLICKSEARCH\n\nexport const FETCHLIST = \"FETCHLIST\"\nexport const SUGGESTIONACTIVE = \"SUGGESTIONACTIVE\"\nexport const SETLOADING = \"SETLOADING\"\nexport const UPDATETEXT = \"UPDATETEXT\"\n\nexport interface SETLOADING {\n    type: typeof SETLOADING,\n    isLoading: boolean,\n}\n\nexport interface FETCHLIST {\n    type: typeof FETCHLIST,\n    list: RANKBYREGION[][],\n    query:string,\n}\n\nexport interface SUGGESTIONACTIVE {\n    type: typeof SUGGESTIONACTIVE,\n    isActive:boolean,\n}\n\nexport interface UPDATETEXT {\n    type: typeof UPDATETEXT,\n    text:string,\n}\n\ntype SearchMutation = SETLOADING | FETCHLIST | SUGGESTIONACTIVE | UPDATETEXT \n// --- state\n\nexport interface SearchState {\n    isActive: boolean,\n    isLoading:boolean,\n    isError:boolean,\n    result: RANKBYREGION[][],\n    resultQuery:string,\n    value:string,\n}\n\nexport const R6SearchinitialState: SearchState = {\n    isActive: false,\n    isLoading: false,\n    isError: false,\n    result: [],\n    resultQuery:\"\",\n    value: \"\",\n}\n\n      // return concat(\n                //     // of<SearchMutation>({type:\"CHANGETEXT\", text: action.text}),\n                //     // of<SearchMutation>({type:\"SETLOADING\", isLoading: true}),\n                //     this.fetchID(action.text).pipe(\n                //       takeUntil( this.action.pipe(filter( value => { \n                //           return value.type === \"CANCELSEARCH\" || value.type === \"WRITETEXT\" \n                //         }))),\n                //       map<RANKBYREGION[][], SearchMutation>( res => ({type:\"FETCHLIST\", list : res})),\n                //     ),\n                // )\n\n\nexport default class R6IDSearchReactor extends Reactor<SearchAction, SearchState, SearchMutation> {\n    \n    mutate(action: SearchAction): Observable<SearchMutation> {\n        switch(action.type) {\n\n            case \"WRITETEXT\":\n                return of({type: \"UPDATETEXT\", text: action.text})\n          \n            case \"INVIS_SEARCHLIST\":\n                return  concat(\n                        of<SearchMutation>({type:\"SETLOADING\", isLoading: true}),\n                        this.fetchID(action.text).pipe(\n                          takeUntil( this.action.pipe(filter( value => { \n                              return value.type === \"CANCELSEARCH\" || value.type === \"INVIS_SEARCHLIST\" \n                            }))),\n                          map<RANKBYREGION[][], SearchMutation>( res => ({type:\"FETCHLIST\", list : res, query:action.text})),\n                        ),\n                    )\n\n            case \"CANCELSEARCH\":\n                return concat(\n                    of<SearchMutation>({type:\"SETLOADING\", isLoading: false}),\n                    of<SearchMutation>({type:\"SUGGESTIONACTIVE\", isActive: false}),\n                )\n\n            case \"CLICKSEARCH\":\n                return concat(\n                    of<SearchMutation>({type:\"SUGGESTIONACTIVE\", isActive: true}),\n                )\n            }\n            \n    }\n\n    reduce(state: SearchState, mutation: SearchMutation): SearchState {\n\n        let newState = state;\n \n        switch(mutation.type) {\n\n            case \"FETCHLIST\":\n                newState.result = mutation.list\n                newState.resultQuery = mutation.query;\n                newState.isLoading = false;\n                if (mutation.list.length === 0) {\n                    newState.isError = true; \n                }\n                return newState;\n\n            case \"SETLOADING\":\n                newState.isLoading = mutation.isLoading\n                return newState;\n\n            case \"SUGGESTIONACTIVE\":\n                newState.isActive = mutation.isActive\n                return newState;\n\n            case \"UPDATETEXT\":\n                newState.value = mutation.text\n                return newState;\n        }\n    }\n\n    fetchID(id: string): Observable<RANKBYREGION[][]>  {\n        return R6StatAPI.shared.getGeneralAPI(id)\n        // .pipe(\n        //     // delay(500),\n        //     // flatAxiosResultAndCast(),\n        //     // catchErrorJustReturn([] as any)\n        // )\n    }\n\n}","import React from 'react';\nimport * as rankicons from './@rank-icons'\n\nexport type RankType = keyof typeof rankicons;\nexport const rankIconTypes: RankType[] = Object.keys(rankicons) as any[];\n\nexport type R6RankIconProps = {\n    /** 랭크 타입 */\n    rank: string;\n    /** 아이콘 사이즈 */\n    size?: number;\n    /** 랭크아이콘 다음이나 이전의 아이콘을 조회하기 위한 값 */\n    forward?: number\n};\n\n\n//export => import string.\n\nconst R6RankIcon = ({ rank, size }: R6RankIconProps) => {\n    \n    //이제 rank에 들어오는 string은  받을 수 있습니다. 다만 확실하지 않을경우 \n    try {\n        let parsableRankString = rank.replace(\" \", \"_\") as RankType;\n        const src = rankicons[parsableRankString];\n        return  <img src={src} alt={\"rank\"} style={{width:size, height:'auto'}}/>\n    } catch {\n        return <div style={{width:size, height:size}}></div>\n    }  \n}\n\nR6RankIcon.defaultProps = {\n    size : 20\n}\n\nexport default R6RankIcon;\n  ","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m72 8.5-64 168h128c0 61.855469 50.144531 112 112 112s112-50.144531 112-112h128l-64-168zm0 0\",\n  fill: \"#acabb1\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m248 288.5c-61.855469 0-112-50.144531-112-112h-128v192h480v-192h-128c0 61.855469-50.144531 112-112 112zm-160 48\",\n  fill: \"#414042\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#231f20\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m495.480469 173.652344-64-168c-1.183594-3.105469-4.160157-5.152344-7.480469-5.152344h-352c-3.320312 0-6.296875 2.046875-7.480469 5.152344l-64 168c-.292969.824218-.4492185 1.6875-.4648435 2.558594 0 .105468-.0546875.183593-.0546875.289062v192c0 4.417969 3.582031 8 8 8h480c4.417969 0 8-3.582031 8-8v-192c0-.105469-.054688-.183594-.054688-.289062-.015624-.871094-.171874-1.734376-.464843-2.558594zm-417.96875-157.152344h340.976562l57.902344 152h-116.390625c-4.417969 0-8 3.582031-8 8 0 57.4375-46.5625 104-104 104s-104-46.5625-104-104c0-4.417969-3.582031-8-8-8h-116.390625zm402.488281 344h-464v-176h112.265625c4.1875 63.046875 56.546875 112.042969 119.734375 112.042969s115.546875-48.996094 119.734375-112.042969h112.265625zm0 0\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m56 328.5h-8v-24c0-4.417969-3.582031-8-8-8s-8 3.582031-8 8v32c0 4.417969 3.582031 8 8 8h16c4.417969 0 8-3.582031 8-8s-3.582031-8-8-8zm0 0\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m104 328.5h-16c-4.417969 0-8 3.582031-8 8s3.582031 8 8 8h16c4.417969 0 8-3.582031 8-8s-3.582031-8-8-8zm0 0\"\n}));\n\nvar SvgEmptyBox = function SvgEmptyBox(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"496pt\",\n    viewBox: \"0 -59 496 495\",\n    width: \"496pt\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEmptyBox, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/empty-box.3d8bbcac.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport './R6IDSearch.css'\nimport {  Subject, } from \"rxjs\";\nimport { debounceTime, map, tap, distinctUntilChanged } from \"rxjs/operators\";\nimport {  deepDistinctUntilChanged } from \"../../../../../Library/RxJsExtension\";\nimport R6IDSearchReactor, { R6SearchinitialState, SearchState, SearchAction } from \"./R6IDSearchReactor\";\nimport { isError } from \"lodash\";\nimport R6RankIcon from \"../../../../R6RankIcon\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EmptyBox } from './empty-box.svg'\nimport { RANKBYREGION, GENERALAPI } from \"../../../../../Util/Entity\";\nimport { Icon } from \"semantic-ui-react\";\nimport R6EditorReactor from \"../R6EditorReactor\";\nimport ReactiveView from \"../../../../../ReactorKit/withReactor\";\nimport withReactor from \"../../../../../ReactorKit/withReactor\";\n\nconst RANK_CONTAINER = styled.div`\n    display:flex;\n    flex-direction:row;\n`;\n\nconst RANK_PART = styled.div`\n    display:flex;\n    flex-direction:row;\n`;\n\nconst CONTENT_PART = styled.div`\n\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n\n    #rank {\n        font-size:1.5rem;\n        color:black;\n        margin-bottom:7px;\n    }\n\n    #mmr .mmr-tag {\n        font-weight:bolder;\n        color:black;\n    }\n\n    #mmr .mmr-value {\n        font-weight:normal;\n        color:darkgray;\n    }\n    \n`;\n\n\n\nclass R6IDSearch extends React.PureComponent<{}, SearchState> {\n\n\n    reactor?: R6IDSearchReactor;\n    subject!: Subject<any>;\n\n    constructor(props:{}) {\n        super(props)\n        this.state = R6SearchinitialState;\n    }\n\n    componentWillMount(){\n        this.reactor = new R6IDSearchReactor(R6SearchinitialState);\n        this.subject = new Subject();\n\n        this.subject.pipe( \n            distinctUntilChanged(),\n            tap ( value => this.reactor?.dispatch({type: \"WRITETEXT\", text:value })),\n            debounceTime(500),\n            map( value => ({type:\"INVIS_SEARCHLIST\", text: value } as SearchAction ))\n        ).subscribe(this.reactor?.action)\n    }\n\n    getCell(list : RANKBYREGION[][]) {   \n        let lists = [\"PC\",\"PS4\",\"XBOX\"];\n        return list.map( (value, index) => {\n            if (value.length > 0) {\n                return (\n                    //this.props.reactor?.dispatch({type:\"SELECTRANK\", data: value[0]})\n                    <div className=\"autocomplete-cell\" key={\"CELL_\"+index} onMouseDown={()=>{}}> \n                        <div className=\"tag\">\n                            {lists[index]} 서버 \n                        </div>\n                        <div className=\"rank-description\">\n                        <RANK_CONTAINER>\n                            <RANK_PART>\n                                <R6RankIcon rank={value[0].rankStat.rankString} size={70}></R6RankIcon>\n                            </RANK_PART>\n                            <CONTENT_PART>\n                                <div id=\"rank\">{value[0].rankStat.rankString}</div> \n                                <div id=\"mmr\">\n                                    <span className=\"mmr-tag\"> MMR : </span>\n                                    <span className=\"mmr-value\" style={{marginRight:'5px'}}>{value[0].rankStat.mmr}</span>\n                                    <span className=\"mmr-tag\"> W - </span>\n                                    <span className=\"mmr-value\" style={{marginRight:'5px'}}>{value[0].rankStat.wins}</span>\n                                    <span className=\"mmr-tag\"> L - </span>\n                                    <span className=\"mmr-value\">{value[0].rankStat.death}</span>\n                                </div> \n                            </CONTENT_PART>\n                        </RANK_CONTAINER>\n                        </div>\n                    </div>\n                    )\n            } else {\n                return []\n            }\n         })\n    }\n\n    getList(list: RANKBYREGION[][], text: string, isLoading: boolean, resultQuery:string) {\n\n        if (!text || (text && !resultQuery && !isLoading)) {\n            return( \n                <div className=\"search-result\">\n                    <span role=\"img\" aria-labelledby=\"hello\"> 👋 레인보우 식스 시즈 전적검색창 입니다. </span>\n                    <div> 바로 검색하여 본인의 전적내용을 추가해보세요. </div>\n                    <div> Powered by R6-search.me </div>\n                </div>                    \n            )\n        }\n\n        if (isLoading) {\n            return(\n                <React.Fragment>\n                    <div className=\"loading-container\">\n                        <svg className=\"loading-circle\">\n                            <circle cx=\"50%\" cy=\"50%\" r=\"25\"></circle>\n                        </svg>\n                        <div className=\"search-loading\"> \"{text}\" 를 R6-Search에서 검색중...</div>\n                    </div>\n                </React.Fragment>\n            )\n        }\n\n        if ( (list.filter( value => value.length === 0 ).length === 3) && resultQuery) {\n            return (\n                <div className=\"search-empty\">\n                    <EmptyBox style={{height:\"120px\", width:\"100%\"}}></EmptyBox>\n                    <div> \"{resultQuery}\" 님의 검색결과가 없습니다! </div>\n                    <div> 검색어를 확인해주세요. </div>\n                </div> \n            )\n        }\n\n        return (\n            <>  \n                <div className=\"search-result\">\n                    <div> \"{resultQuery}\" 님의 검색결과 입니다. </div>\n                    <div> 클릭하여 전적을 추가하세요.  </div>\n                    <div> Powered by R6-search.me </div>\n                </div>\n                {this.getCell(list)}\n            </>\n        )\n        \n    }\n\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.subject.next(event.target.value)\n    }\n\n    render(){\n        if (!this.props) {\n            console.warn('R6IDSEARCH NOT LOADED')\n            return null\n        } else {\n\n            const localReactor = this.reactor!;\n            const { value , result, isLoading, resultQuery, isActive } = localReactor.currentState;\n\n            return(\n                <>\n                    <div className=\"search-input\">\n                        <Icon name={\"search\"} size={\"big\"} className={\"search-input-icon\"} color={\"green\"}></Icon>\n                        <input \n                            className=\"r6idsearch\"\n                            placeholder=\"전적을 바로 검색해보세요.\"\n                            // onChange\n                            onFocus={()=>{localReactor.dispatch({type:\"CLICKSEARCH\"})}}\n                            onBlur={()=>{localReactor.dispatch({type:\"CANCELSEARCH\"})}}\n                            value={value}\n                            onChange={this.handleChange.bind(this)}\n                            />\n                            { isActive && \n                                <div className=\"cellContainer\">\n                                    {\n                                        this.getList([], value, isLoading, resultQuery)\n                                    }\n                                </div> \n                            } \n                    </div>\n    \n                </>\n            )\n        }\n    }\n}\nexport default withReactor(R6IDSearch)\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.isLoading ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     isLoading => this.setState({isLoading})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.result ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     result => this.setState({result})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.isError ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     isError => this.setState({isError})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.isActive ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     isActive => this.setState({isActive})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.value ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     value => this.setState({value})\n        // )\n\n        // this.reactor?.state.pipe(\n        //     map((value) => value.resultQuery ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     resultQuery => this.setState({resultQuery})\n        // )\n\n\n// this.getList([], this.state.value , this.state.isLoading, this.state.isActive)\n\n\n  \n ","import { Editor } from '@toast-ui/react-editor'\nimport React  from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport R6EditorReactor, { EditorinitialState } from './R6EditorReactor';\n\nimport styled from 'styled-components'\n\n// import R6IDSearch from './IDSearch/R6IDSearch'\nimport { RANKAPI } from '../../../../Util/Entity';\nimport ForumReactor, { ForumReactorProps } from '../../../@Forum/ForumReactor';\nimport R6IDSearch from './R6IDSearch/R6IDSearch';\nimport withReactor from '../../../../ReactorKit/withReactor';\n\nconst FLUIDDIV = styled.div`\n    width:100%;\n    margin-bottom:10px;\n`\n\nconst FLUIDDIV1 = styled.div`\n    width:50%;\n    margin-bottom:10px;\n`\nconst BUTTONGROUP = styled.div`\n    display:flex;\n    justify-content: flex-end;\n`\nconst CONTAINER = styled.div`\n    display:flex\n    flex-direction:column;\n    align-items:flex-start;\n    width:100%;\n \n`\n// & ${FLUIDDIV} + ${FLUIDDIV} {\n//     margin-bottom:20px;\n// }\n\ninterface Props {\n    //content string type html?\n    onSubmit?: (title: string, content: string) => void;\n    onCancel?: () => void;\n}\n\nclass R6Editor extends React.Component<Props & ForumReactorProps>{\n\n    private editorRef  = React.createRef<Editor>();\n    reactor? : R6EditorReactor;\n\n    componentWillMount(){\n        this.reactor = new R6EditorReactor(EditorinitialState)\n    }\n\n    componentDidMount(){\n        //this.current\n        // this.props.reactor?.state.pipe(\n        //     map( value => value.data),\n        //     // deepDistinctUntilChanged(),\n        // ).subscribe(\n        //     res=> console.log(res)\n        //     // res => this.insertTable(data, )\n        // )\n    }\n\n    \n    private getInstanceofEditor() {\n        return this.editorRef.current?.getInstance()\n    }\n\n    private getHtml(){\n        return this.getInstanceofEditor()?.getHtml();\n    }\n\n    private insertTable(data: RANKAPI, platform: string, id: string){\n        \n        const WD = (data.wins+data.losses > 0) ? Math.floor((data.wins/(data.wins+data.losses))*100) : 0\n        const KD = (data.kills+data.death > 0) ? Math.floor((data.kills/(data.kills+data.death))*100) : 0\n        const current = this.getHtml();\n        const newone = current + `\n        <table>\n        <thead>\n        <tr>\n        <th><strong>구분</strong></th>\n        <th><strong>데이터</strong></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n        <td>아이디</td>\n        <td>${id}</td>\n        </tr>\n        <td>플랫폼</td>\n        <td>${platform}</td>\n        </tr>\n        <tr>\n        <td>랭크</td>\n        <td>${data.rankString}</td>\n        </tr>\n        <tr>\n        <td>MMR</td>\n        <td>${data.mmr}</td>\n        </tr>\n        <tr>\n        <td>시즌 최대 랭크</td>\n        <td>${data.maxRankString}</td>\n        </tr>\n        <tr>\n        <td>시즌 최대 MMR</td>\n        <td>${data.maxMmr}</td>\n        </tr>\n        <tr>\n        <td>승률</td>\n        <td>${\n            WD\n        } % </td>\n        </tr>\n        <tr>\n        <td>K/D</td>\n        <td>${KD} %</td>\n        </tr>\n        </tbody>\n        </table>\n        `\n        this.getInstanceofEditor()?.setHtml(newone\n        , true)\n    }\n\n    onSubmit(){\n        // this.props.onSubmit()\n    }\n\n    render(){\n       \n            const parentReactor = this.props.getState!();\n            const localReactor = this.reactor;\n            const { topic } = parentReactor;\n\n            return(\n\n                <CONTAINER>       \n                <FLUIDDIV>\n                    <Input\n                        size={'large'}\n                        style={{width:'100%'}}\n                        placeholder={\"제목을 입력해주세요\"}\n                    />\n                </FLUIDDIV>\n    \n                <FLUIDDIV>\n                { topic === \"together\" && \n                    <R6IDSearch {...this.props} ></R6IDSearch>\n                }\n                </FLUIDDIV>\n\n                <FLUIDDIV>\n                    <Editor \n                        height={\"600px\"}\n                        initialEditType={\"wysiwyg\"}\n                        ref={this.editorRef}\n                    />\n                </FLUIDDIV>\n    \n                <FLUIDDIV>\n                    <BUTTONGROUP>\n                        <Button size={\"big\"} onClick={this.props.dispatcher!({type:\"CLICKBACK\"})}> 취소하기 </Button>\n                        <Button size={\"big\"} positive> 등록하기 </Button>\n                    </BUTTONGROUP>\n                </FLUIDDIV>\n            </CONTAINER>\n            )\n        }\n       \n    \n}\n\nexport default withReactor(R6Editor)","//edit version\n//write version\nimport React from \"react\";\nimport ForumReactor, { ForumState, ForumReactorProps } from \"../../../@Forum/ForumReactor\";\nimport styled from \"styled-components\";\nimport { Input } from \"semantic-ui-react\";\nimport R6Editor from \"./R6Editor\";\nimport R6IDSearch from \"./R6IDSearch/R6IDSearch\";\nimport ReactorGroup from \"../../../../ReactorKit/ReactorGroup\";\nimport R6EditorReactor, { EditorinitialState } from \"./R6EditorReactor\";\nimport withReactor from \"../../../../ReactorKit/withReactor\";\n\n\n\nconst FLUIDDIV = styled.div`\n    width:100%;\n    margin-bottom:10px;\n`\n\nclass R6PostWrite extends React.PureComponent<ForumReactorProps> {\n\n    render(){\n        return <R6Editor {...this.props} ></R6Editor>\n    }\n}\n\nexport default withReactor(R6PostWrite)","import React from \"react\";\nimport ForumReactor, { ForumState, ForumStateInitialState, ForumAction } from \"./ForumReactor\";\nimport R6CommunityNavigation from \"../Contents/TopicNavigation/R6CommunityNavigation\";\nimport ReactorGroup from \"../../ReactorKit/ReactorGroup\";\nimport styled from \"styled-components\";\nimport { R6List } from \"../Contents\";\nimport { R6StatAPI } from \"../../Library/R6StatAPI\";\nimport R6ListFooter from \"../Contents/ListFooter/R6ListFooter\";\nimport R6IDSearch from \"../Contents/Post/Edit/R6IDSearch/R6IDSearch\";\nimport R6Post from \"../Contents/Post/View/R6Post\";\nimport R6QuickSearch from \"../QuickSearch/R6QuickSearch\";\nimport R6PostWrite from \"../Contents/Post/Edit/R6PostWrite\";\nimport { map, distinctUntilChanged, observeOn, tap } from \"rxjs/operators\";\nimport { deepDistinctUntilChanged } from \"../../Library/RxJsExtension\";\nimport { ReactorControlType } from \"../../ReactorKit/Reactor\";\nimport { Subject, queueScheduler } from \"rxjs\";\n\n\n\nconst FROUMMARGIN = styled.div`\n    margin: 0 auto;\n    max-width: 1200px;\n    margin-top:90px;\n    padding: 0 1rem;\n`\n\nexport class R6Forum extends React.Component{\n    \n    reactor?: ForumReactor | undefined;\n    reactorControls?: ReactorControlType<ForumAction, ForumState>;\n    initialState?: ForumState\n\n\n    componentWillMount(){\n        this.reactor = new ForumReactor(ForumStateInitialState)\n        this.reactorControls = this.reactor.getReactorControl();\n    }\n\n    componentDidMount(){\n\n        this.reactor?.dispatch({type:\"CLICKTOPIC\", newTopic:\"tips\"});\n\n        this.reactor?.state.pipe(\n            map( value => value.mode ),\n            deepDistinctUntilChanged(),\n        ).subscribe( \n            mode=> this.setState({mode})\n        )\n\n    }\n\n    render(){\n        //ismodal\n        return(\n            <React.Fragment>\n                <FROUMMARGIN>\n                    <ReactorGroup {...this.reactorControls}>\n                        <R6CommunityNavigation></R6CommunityNavigation>\n                        {\n                            this.reactor?.currentState.mode === \"list\" &&\n                                <R6List></R6List>\n                        }\n                        {\n                            this.reactor?.currentState.mode === \"list\" &&\n                                <R6ListFooter></R6ListFooter>\n                        }\n                        {\n                            this.reactor?.currentState.mode === \"edit\" &&\n                                <R6PostWrite></R6PostWrite>\n                        }\n                        {\n                            this.reactor?.currentState.mode === \"view\" &&\n                                <R6Post></R6Post>\n                        }\n\n\n                        {/* <R6IDSearch></R6IDSearch> */}\n                        {/* <R6QuickSearch></R6QuickSearch> */}\n                        {/* <R6List></R6List> */}\n                        {/* <DUMMY></DUMMY> */}\n                        </ReactorGroup>\n                </FROUMMARGIN>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default R6Forum;","import React from \"react\";\nimport styled from 'styled-components'\nimport { Button } from \"semantic-ui-react\";\n\nconst NAVIGATIONSTYLE = styled.nav`\n    max-width:1200px;\n    height:70px;\n`\n\nconst GLOBALNAV = styled.nav`\n\tposition: relative;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 10;\n\twidth: 100%;\n\theight: 75px;\n`\n\nconst NAVITEMS = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 1200px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 0 1rem;\n\n`\n\nconst BRANDLOGO = styled.a`\n    font-family: 'Anton', sans-serif;\n    font-size: 2.8rem;\n    color:black;\n    cursor: pointer;\n    text-decoration: unset;\n    margin-right:auto;\n\n    &:hover {\n        color: black;\n    }\n  \n`\n//onClick={()=>{this.props.globalReactor.action.next({type:\"MODALTOGGLE\"})}}\nclass R6Navigation extends React.Component<{stater: any}> {\n    \n    render(){\n        return(\n            <GLOBALNAV>\n                <NAVITEMS>\n                    <BRANDLOGO> R6 Search - TALK </BRANDLOGO>\n                    <Button secondary compact onClick={()=>{this.props.stater(1)}}>로그인하기</Button>\n                </NAVITEMS>\n            </GLOBALNAV>\n        )\n    }\n}\n\nexport default R6Navigation;","import { Form, Button, Header } from \"semantic-ui-react\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport './R6Register.css'\nimport { motion } from \"framer-motion\";\n//#36393f\n//https://gist.github.com/barbiturat/49facf4eeec1e2a5352ff4fa6bbf7286\n//https://gist.github.com/barbiturat/49facf4eeec1e2a5352ff4fa6bbf7286\n// 김종민님 + 인프런 인터렉티브 웹<div className=\"\"></div>\n\n\nclass R6Register extends React.Component<{stater :Dispatch<SetStateAction<number>>}> {\n\n    render(){\n       return( \n        <>\n       \n       \n\n        <div className=\"register-container\">\n            <div className=\"register-background-img\"> </div>\n            <motion.div \n                className=\"register-black-layer\"\n                initial={{ opacity:0.1}}\n                animate={{ opacity:0.5}}\n            />\n\n\n            <motion.div \n                className=\"register-content\"   \n                initial={{ scale: 1.1, opacity:0.5, y:'-5%' }}\n                animate={{ scale: 1, opacity:1, y:'0%'}}\n                // transition={{\n                //     type: \"spring\",\n                //     stiffness: 260,\n                //     damping: 20\n                // }}>\n                >\n                <Header className=\"header-center\" size={\"huge\"}> 계정 만들기 </Header>\n             \n                <Form>\n                    <Form.Field>\n                    <label>아이디</label>\n                    <input placeholder='ID' />\n                    </Form.Field>\n                    <Form.Field>\n                    <label>비밀번호</label>\n                    <input placeholder='Password' type={\"password\"}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>인증용 아이디</label>\n                    <input placeholder='Email' type={\"email\"} />\n                    </Form.Field>\n                    <Form.Field>\n                    </Form.Field>\n                </Form>\n                <Button type='submit' fluid color={\"green\"}>계속하기</Button>\n                <div className=\"button-bottom-top\"><a onClick={()=>{this.props.stater(0)}}> 이미 계정이 있으신가요? </a> </div>\n                <div> 등록하는 순간 R6-Community 서비스의 <a>이용 약관</a>과 <a>개인정보 보호 정책</a>에 동의하게 됩니다. </div>\n            </motion.div>\n\n        </div>\n\n\n        </>\n       )\n    \n    }\n}\n\nexport default R6Register","import React, { SetStateAction, Dispatch } from \"react\";\nimport { Transition, Image, Modal, Header, Button, Input, Icon, Form } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport './R6Login.css';\nimport { motion } from 'framer-motion'\n\nconst MODALCONTAINER = styled.div`\n    position:fixed;\n    z-index:50;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(23,25,29,.7);\n`\n\nconst MODALCONTENTCONTAINER = styled.div`\n    position:relative;\n\n    display:flex;\n    z-index:51;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    height:100%;\n`\n\nconst MODALCONTENT = styled.div`\n    position:relative;\n    background:#2c3035;\n    color:white;\n    max-width:700px;\n    width: 100%;\n    text-align:center;\n    overflow:hidden;\n    border-radius:10px;\n    height:432px;\n    display:flex;\n`\n\nconst LEFT = styled.div`\n    position:relative;\n    flex:1;\n`\n\nconst RIGHT = styled.div`\n    position:relative;\n    overflow:hidden;\n    flex:0.62;\n    display:flex;\n`\n\nconst RIGHTIMAGE= styled.img`\n    position:relative;\n    height:100%;\n    left:-50%;\n`\n\nconst HEADER = styled.div`\n    padding:50px 0 30px;\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-weight:700;\n    color:#e5e6e7;\n    font-size:2.3rem;\n`\n\n\nconst SUBHEADER = styled.p`\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-weight:700;\n    color:#b6b7b8;\n    font-size:1.4rem;\n`\n\n\nconst FORMCONTAINER = styled.div`\n    width:100%;\n    padding:0 40px;\n    text-align:left;\n\n    div { \n        margin-bottom:5px;\n    }\n`\n\nconst MOCKUP = styled.div`\n`\n\nconst DESCRIPTION = styled.p`\n    position:relative;\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    color:#646568;\n    padding:0 30px;\n    font-size:0.8rem;\n    padding-top:10px;\n`\n\nconst ICON = styled.div`\n    position:absolute;\n    top:10px;\n    right:10px;\n    background:#2c3035;\n    width:30px;\n    height:30px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    border-radius:10px;\n    i.icon {\n        margin:0px;\n    }\n`\n\nconst FOOTER = styled.div`\n    position:absolute;\n    bottom:20px;\n    right:40px;\n`\n\nconst BLACKLAYER = styled.div<{visible: boolean}>`\n    display:${props => props.visible? \"block;\" : \"none;\"}\n    position:fixed;\n    z-index:50;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(23,25,29,.7);\n`\n\nconst OTHERCONTENTS = styled.div`\n    position:fixed;\n    z-index:50;\n    top:50%;\n    left:50%;\n    transform : translate3d(-50%, -50%, 0);\n`\n\nexport class R6Login extends React.Component<{stater :Dispatch<SetStateAction<number>>, loginStater: Dispatch<SetStateAction<number>>}>  {\n\n    render(){\n        return(\n                <>\n                <motion.div \n                    initial={{ opacity:0.1}}\n                    animate={{ opacity:0.4}}\n                    className=\"black-layer\"\n                    onClick={()=>{this.props.loginStater(0)}}\n                /> \n                <motion.div className=\"login-content-layer\">\n                    <div className=\"login-content-layer relative\">\n                        <div className=\"left padder\">\n                            <div className=\"header login-text-center login-font\">\n                                로그인하기\n                            </div>\n                            <div className=\"sub-header login-text-center login-font\">\n                                안녕하세요! 만나서 반갑습니다.\n                            </div>\n\n                            <div className=\"form-container\">\n                                <Form.Field >\n                                    <div className=\"margin-bottom-5\"> <strong> 아이디 </strong>  </div>\n                                    <Input className=\"margin-bottom-10\" type=\"text\" iconPosition='left' icon={\"user\"} placeholder=\"아이디 입력\" fluid/>\n                                    <div className=\"margin-bottom-5\"> <strong> 비밀번호 </strong> </div>\n                                    <Input className=\"margin-bottom-20\" type='password' iconPosition='left' icon={\"key\"}  placeholder=\"비밀번호 입력\" fluid />\n                                    </Form.Field>\n                            </div>\n\n                            <Button fluid color={\"green\"}>로그인하기</Button>\n                            <div className=\"margin-bottom-10\"></div>\n                            <div className=\"description login-font login-text-center\">\n                                로그인은 개인 정보 보호 정책 및  서비스 약관에 동의하는 것을 의미합니다.\n                            </div>\n                            <Button floated={\"right\"} color={\"grey\"} size={\"small\"} inverted className=\"register-button-bottom\" onClick={()=>this.props.stater(1)}>회원가입하기</Button>\n                        </div>\n                        <div className=\"right\">\n                            <img src=\"./season18-he.jpg\" className=\"image\"/>\n                        </div>\n\n                    </div>\n                </motion.div>\n                </>\n            )\n        }\n}\n\nexport default R6Login\n\n\n/**\n * \n * \n                <BLACKLAYER visible={this.props.globalState.isOpened} onClick={()=>{this.props.globalReactor.action.next({type:\"MODALTOGGLE\"})}}>\n                </BLACKLAYER>\n                \n                <OTHERCONTENTS>\n                    <Transition visible={this.props.globalState.isOpened} animation='scale' duration={200}>\n                        <MODALCONTENTCONTAINER>\n                            <MODALCONTENT>\n                                <LEFT>\n                                <HEADER>\n                                    로그인하기\n                                </HEADER>\n                                <SUBHEADER>\n                                    안녕하세요! 만나서 반갑습니다.   \n                                </SUBHEADER>       \n\n                                <FORMCONTAINER>\n                                    <Form.Field >\n                                        <div> <strong> 아이디 </strong>  </div>\n                                        <Input type=\"text\" iconPosition='left' icon={\"at\"} placeholder=\"이메일 입력\" fluid/>\n                                        <div> <strong> 비밀번호 </strong> </div>\n                                        <Input type='password' iconPosition='left' icon={\"key\"}  placeholder=\"비밀번호 입력\" fluid />\n                                    </Form.Field>\n                                    <div style={{height:'8px'}}></div>\n                                    <Button fluid color={\"green\"}>로그인하기</Button>\n                                </FORMCONTAINER>\n\n                                        \n                            <DESCRIPTION> 로그인은 개인 정보 보호 정책 및  서비스 약관에 동의하는 것을 의미합니다.\n                            </DESCRIPTION>\n\n                                <FOOTER>\n                                    <div>\n                                        아직 아이디가 없으시다구요?\n                                        <a> 회원가입하기 </a>\n                                    </div>\n                                </FOOTER>\n                            </LEFT>\n                            <RIGHT>\n\n                            \n                                <RIGHTIMAGE src=\"./season18-he.jpg\"/>\n                                                            <ICON>\n                                    <Icon size={\"large\"} name={\"close\"}></Icon>\n                                </ICON>\n\n                            </RIGHT>\n                            </MODALCONTENT>\n                        </MODALCONTENTCONTAINER>\n                    </Transition>\n                </OTHERCONTENTS>\n\n */\n/**\n  \n                 \n */","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components'\n// import { ModalReactor } from './Component/Modal/ModalReactor';\nimport { \n  R6Forum, \n  R6Navigation, \n  R6Footer\n} from './Component';\nimport R6Register from './Component/Login/R6Register';\nimport R6Login from './Component/Login/R6Login';\nimport ForumReactor, { ForumStateInitialState } from './Component/@Forum/ForumReactor';\nimport { deepDistinctUntilChanged } from './Library/RxJsExtension';\nimport { map, filter, pluck } from 'rxjs/operators';\nimport { reduce } from 'lodash';\n\nconst PADDING = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`\n\nconst GLOBALNAV = styled.nav`\n\tposition: relative;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 10;\n\twidth: 100%;\n\theight: 60px;\n  padding: 0 1rem;\n  border-bottom: 1px solid #ddd;\n`\n\nconst NAVLINKTS = styled.nav`\n  display: flex;\n  align-items: center;\n  max-width: 1200px;\n  height: 100%;\n  margin: 0 auto;\n  \n`\nconst ABC = styled.div`\n\tmargin-right: auto;\n\tfont-size: 1.4rem;\n  font-weight: bold;\n`\nconst IMAGE = styled.img`\n  width:35px;\n  height:35px;\n  margin-right:10px;\n`\n\nconst CONTAINER = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  font-size: 1.2rem;\n  color: #888;\n`\n//  // padding: 0 1rem;\n// 항상 살아있어야하는 store입니다.\n// 앱이 꺼지기 전까지는요. 글로벌 스토어\n// const value = register([new ModalReactor({isOpened: false},false,true)])\n\nconst SECTIONWRAPPER = styled.div`\n  min-height:90vh;\n`\n\nlet a = new ForumReactor(ForumStateInitialState);\n\n\nfunction App() {\n  const [loginState, loginSetter] = useState(0);\n  const [registerState, registerSetter] = useState(0);\n\n  return(\n\n      <div className=\"App\">\n        {/* <R6Navigation></R6Navigation>\n            <SECTIONWRAPPER>\n              <R6Forum></R6Forum>\n            </SECTIONWRAPPER>\n            <R6Login stater={registerSetter}></R6Login>\n          <R6Footer></R6Footer> */}\n        { registerState === 0 && \n          <>\n            <R6Navigation stater={loginSetter}></R6Navigation>\n            <SECTIONWRAPPER>\n              <R6Forum></R6Forum>\n            </SECTIONWRAPPER>\n            { loginState && \n              <R6Login loginStater={loginSetter} stater={registerSetter}></R6Login>\n            } \n            <R6Footer></R6Footer>\n          </>\n        } \n        { registerState === 1 &&\n          <R6Register stater={registerSetter}></R6Register>\n        }\n      \n      </div>\n    );\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// <React.StrictMode>\n\n// </React.StrictMode>,\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}