{"version":3,"sources":["Component/@Reusable-Component/R6Loading.tsx","Component/@Reusable-Component/R6LottieLoader.tsx","Component/@Reusable-Component/R6RankIcon.tsx","Component/@Reusable-Component/@rank-icons/0.svg","Component/@Reusable-Component/@rank-icons/1.svg","Component/@Reusable-Component/@rank-icons/2.svg","Component/@Reusable-Component/@rank-icons/3.svg","Component/@Reusable-Component/@rank-icons/4.svg","Component/@Reusable-Component/@rank-icons/5.svg","Component/@Reusable-Component/@rank-icons/6.svg","Component/@Reusable-Component/@rank-icons/7.svg","Component/@Reusable-Component/@rank-icons/8.svg","Component/@Reusable-Component/@rank-icons/9.svg","Component/@Reusable-Component/@rank-icons/10.svg","Component/@Reusable-Component/@rank-icons/11.svg","Component/@Reusable-Component/@rank-icons/12.svg","Component/@Reusable-Component/@rank-icons/13.svg","Component/@Reusable-Component/@rank-icons/14.svg","Component/@Reusable-Component/@rank-icons/15.svg","Component/@Reusable-Component/@rank-icons/16.svg","Component/@Reusable-Component/@rank-icons/17.svg","Component/@Reusable-Component/@rank-icons/18.svg","Component/@Reusable-Component/@rank-icons/19.svg","Component/@Reusable-Component/@rank-icons/20.svg","Component/@Reusable-Component/@rank-icons/21.svg","Component/@Reusable-Component/@rank-icons/22.svg","Component/@Reusable-Component/@rank-icons/23.svg","Library/R6Ajax.ts","Component/@2Content/Page404/error.png","Component/@2Content/Login/loginpage.png","Component/@3Footer/R6Footer.tsx","Component/@1Header/R6Button/R6Button.tsx","Component/@1Header/R6Button/R6ButtonGroup.tsx","Component/@1Header/R6Navigation.tsx","Component/@2Content/Page404/Page404.tsx","Component/@0ForumReactor/ForumReactor.tsx","Component/@2Content/Login/R6Login.tsx","Component/@2Content/Login/R6RegisterConfirmation.tsx","Component/@2Content/Login/R6Register.tsx","Main.tsx","serviceWorker.ts","Component/Stores/RootStoreP.tsx","Component/Stores/ForumStore.tsx","Component/Stores/LoginStore.tsx","Component/Stores/RegisterStore.tsx","Component/Stores/EditorStore.tsx","Component/Stores/PostStore.tsx","Component/Stores/RootStore.tsx","index.tsx"],"names":["TRANSFORM","keyframes","CIRCLEANI","SVG","styled","svg","props","size","strokeSize","dasharray","R6Loading","cx","cy","r","R6LottieLoader","element","anim","option","path","this","container","renderer","loop","autoplay","style","height","width","lottie","loadAnimation","setSpeed","speed","play","destroy","ref","React","PureComponent","R6RankIcon","Object","keys","rankicons","rank","parsableRankString","replace","src","alt","defaultProps","module","exports","R6Ajax","accessToken","baseUrl","baseURLWithAPIVersion","id","pwd","href","URL","ajax","post","password","username","pipe","map","value","response","jwtToken","url","body","headers","withAccessToken","getHeader","delete","put","getJSON","blob","imageFiles","undefined","header","instance","createInstance","FOOTERCONTAINER","footer","FROUMMARGIN","div","HELLO","R6Footer","Component","Button","SelectedButton","R6Button","children","selected","onClick","ButtonGroup","R6ButtonGroup","onChange","currentValue","func","index","Children","child","isValidElement","count","total","childVal","cloneElement","inputVal","nav","GLOBALNAV","NAVITEMS","BRANDLOGO","a","SUBNAVITEMS","R6Navigation","inject","observer","forum","getList","openLoginModal","topic","isLogined","nickName","Fragment","handleBrandLogo","bind","Label","as","image","secondary","compact","handleLoginButton","handleToggle","STYLED","withRouter","history","require","color","goBack","ForumStateInitialState","isError","isLoading","page","postList","postId","list","isLoginModal","ForumReactor","action","type","of","newTopic","pageId","concat","on","state","mutation","newState","length","Reactor","img","p","visible","errorOn","x","errorOff","R6Login","login","idInput","createRef","pwdInput","resetState","current","gotoRegister","event","keyCode","isLoginModalOpened","isLoginError","errorMessage","isLoginLoading","initial","opacity","animate","className","handleBlackLayer","scale","y","transition","when","mass","Form","error","Message","negative","Field","placeholder","onKeyDown","handleOnKeyDown","variants","duration","fluid","disabled","loading","handleLogin","inverted","handleRegister","CENTER","query","maxWidth","matches","Header","key","push","R6Register","pwd2Input","emailInput","register","registerRequest","idError","pwdError","pwd2Error","isConfirmation","emailError","required","clickHandler","goBackHandler","ListComponent","lazy","EditorComponent","PostComponent","PADDER","Main","reactor","reactorControl","regexp","RegExp","pathname","location","progressed","exec","excuted","includes","substr","splittedPathname","split","parseInt","getReactorControl","exact","Boolean","window","hostname","match","RootStoreExtend","root","ForumStore","queue","queueArgs","topicQueue","router","shared","getJson","subscribe","res","meta","err","open","goEditor","RootStoreP","observable","currentPage","totalPage","LoginStore","signIn","message","RegisterStore","tester","MessageSet1","messageHeader","messageDesc","MessageSet2","MessageSet3","MessageSet4","pwd2","email","test","EditorStore","title","content","images","formData","FormData","append","forEach","PostStore","comment","parentId","parentNickname","array","elementArray","isChild","getFlattenCommentList","childComment","commentId","isCommentLoading","isCommentError","postContent","isConfirmOpened","thumbsLoading","flatMap","parentCommentId","console","log","toJS","commentList","flattenCommentList","computed","RootStore","editor","RouterStore","browserHistory","createBrowserHistory","rootStore","syncHistoryWithStore","WRPAPER","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bbe90a9d.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, {keyframes} from 'styled-components'\n\n\nconst TRANSFORM = keyframes`\n    100% { transform: rotate(360deg); }\n`\n\nconst CIRCLEANI = keyframes`\n    0% { stroke-dashoffset: 157; }\n    75% { stroke-dashoffset: -147; }\n    100% { stroke-dashoffset: -157; }\n`\n\nconst SVG = styled.svg<{size?: number, strokeSize?: number, dasharray?: number}>`\n    width: ${props => props.size? props.size : 62}px;\n    height: ${props => props.size? props.size : 62}px;\n    animation: ${TRANSFORM} 3s infinite;\n    margin-bottom:20px;\n\n    & circle {\n        stroke: black;\n        stroke-width: ${props => props.strokeSize? props.strokeSize : 6};\n        /* getTotalLength()로 stroke의 길이를 얻어올 수 있음 */\n        stroke-dasharray: ${props => props.dasharray ? props.dasharray : 157};\n        stroke-dashoffset: 0;\n        fill: transparent;\n        animation: ${CIRCLEANI} 1s infinite;\n    }\n`\n\nexport interface R6LoadingProps {\n    /** width & height 사이즈 */\n    size?: number;\n    /** Circle Stroke 사이즈, */\n    strokeSize?: number;\n    /** stroke-Dash Array의 속성. 사이즈 Height과 Width에 따라 달라집니다 */\n    dasharray?: number;\n}\n\n/**\n * SVG 로딩 애니메이션 입니다.\n */\nexport default function R6Loading({ size, strokeSize, dasharray } :R6LoadingProps) {\n    return (\n        <SVG size={size} strokeSize={strokeSize} dasharray={dasharray}>\n            <circle cx=\"50%\" cy=\"50%\" r=\"25\"></circle>\n        </SVG>\n    )\n}","import React from \"react\";\nimport lottie, { AnimationConfigWithPath , AnimationItem} from 'lottie-web';\n\nexport interface R6AnimationProperty {\n    /** 애니메이션 스피드 */\n    speed? : number;\n    /** 애니메이션 높이 */\n    height: number;\n    /** 애니메이션 너비 */\n    width: number;\n    /** 애니메이션 json path (url) */\n    path: string;\n}\n\n/**\n * Lottie 애니메이션을 간단하게 플레이할 수 있도록 감싼 wrapper입니다.\n * https://github.com/chenqingspring/react-lottie/blob/master/src/index.js#L118\n */\nexport default class R6LottieLoader extends React.PureComponent<R6AnimationProperty> {\n    \n    /** element ref */\n    private element! : HTMLElement; \n    private anim?: AnimationItem;\n \n    componentDidMount(){\n\n        let option : AnimationConfigWithPath = {\n            path : this.props.path,\n            container:this.element,\n            renderer:'svg',\n            loop:true,\n            autoplay:true\n        }\n\n        this.element.style.height = `${this.props.height}px`\n        this.element.style.width = `${this.props.width}px`\n\n        this.anim = lottie.loadAnimation(option);\n        this.anim?.setSpeed((this.props.speed)? this.props.speed : 1);\n        this.anim?.play();\n    }\n\n    componentWillUnmount() {\n        this.anim?.destroy();\n    }\n\n    render(){\n        return(\n                <div ref={ (ref) => this.element = ref!}/>\n        )\n    }\n    \n}\n\n","import React from 'react';\nimport * as rankicons from './@rank-icons'\nimport { CSSProperties } from 'styled-components';\n\nexport type RankType = keyof typeof rankicons;\nexport const rankIconTypes: RankType[] = Object.keys(rankicons) as any[];\n\nexport type R6RankIconProps = {\n    /** 랭크 타입 */\n    rank: string;\n    /** 아이콘 사이즈 */\n    size?: number;\n    /** 랭크아이콘 다음이나 이전의 아이콘을 조회하기 위한 값 */\n    forward?: number;\n\n    style?: CSSProperties;\n};\n\n\n//export => import string.\n\nconst R6RankIcon = ({ rank, size, style}: R6RankIconProps) => {\n    \n    //이제 rank에 들어오는 string은  받을 수 있습니다. 다만 확실하지 않을경우 \n    try {\n        let parsableRankString = rank.replace(\" \", \"_\") as RankType;\n        const src = rankicons[parsableRankString];\n        return  <img src={src} alt={\"rank\"} style={{...style, width:size, height:'auto'}}/>\n    } catch {\n        return <div style={{...style, width:size, height:size}}></div>\n    }  \n}\n\nR6RankIcon.defaultProps = {\n    size : 20\n}\n\nexport default R6RankIcon;\n  ","module.exports = __webpack_public_path__ + \"static/media/0.344141c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.682ff38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.d5d3ef47.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.9666e753.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.1f278692.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.d9127b49.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.3731835b.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.67b08a0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.2c10874a.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.9f60a569.svg\";","module.exports = __webpack_public_path__ + \"static/media/10.a9ef776a.svg\";","module.exports = __webpack_public_path__ + \"static/media/11.511fc75a.svg\";","module.exports = __webpack_public_path__ + \"static/media/12.ab22843f.svg\";","module.exports = __webpack_public_path__ + \"static/media/13.b3e04c72.svg\";","module.exports = __webpack_public_path__ + \"static/media/14.e1354c3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/15.62142744.svg\";","module.exports = __webpack_public_path__ + \"static/media/16.5ad4e2d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/17.3608213b.svg\";","module.exports = __webpack_public_path__ + \"static/media/18.84aa7e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/19.e69dbfa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/20.57c836b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/21.5ed6eff2.svg\";","module.exports = __webpack_public_path__ + \"static/media/22.75116dcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/23.65986604.svg\";","import { ajax, AjaxResponse } from \"rxjs/ajax\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n\n\nexport default class R6Ajax {\n\n    static instance : R6Ajax | null = null;\n    \n    static createInstance() {\n        var object = new R6Ajax();\n        return object;\n    }\n\n    static get shared() {\n        if (!R6Ajax.instance) {\n            R6Ajax.instance = R6Ajax.createInstance();\n        }\n        return R6Ajax.instance;\n    }\n\n    accessToken? : string;\n    baseUrl = \"https://r6-search.me\"\n    baseURLWithAPIVersion = this.baseUrl + \"/api/c/\" \n\n    id?: string;\n    pwd?: string;\n\n    /**\n     * 세가지경우.\n     * id, pwd가 메모리에 있는경우.\n     * id, pwd가 메모리에 없는 경우. accessToken\n     * accessToken이 없는경우, refresh Token 요청.\n     */\n\n    signIn(id: string, pwd: string) : Observable<string> {\n        const {href} = new URL(`signin`, this.baseURLWithAPIVersion);\n        return ajax.post(href, { password : pwd, username: id }, {\n            \"Content-Type\": \"application/json\"\n        }).pipe( map( value => {\n            this.id = id;\n            this.pwd = pwd;\n            this.accessToken = value.response.jwtToken;\n            return value.response.jwtToken\n        }))\n    }\n\n    /** updateAccessToken */\n\n    updateAccessToken(id: string, pwd: string): Observable<string>{\n        //refreshtoke으로 다시요청한다. (id, pwd는 저장하지않는다...)\n        const {href} = new URL(`/signin`, this.baseUrl);\n        return ajax.post(href, { password : pwd, username: id }, {\n            \"Content-Type\": \"application/json\"\n        }).pipe( map( value => value.response.jwtToken ))\n    }\n\n\n    /** Wrapper */\n    post(url: string, body? : any | HTMLFormElement, headers?:Object | \"json\" | \"multipart\", withAccessToken: boolean = false) : Observable<AjaxResponse> {\n        const {href} = new URL(url, this.baseURLWithAPIVersion);\n        //accessToken\n        //image to binary file => \n        return ajax.post(href, body, this.getHeader(headers, withAccessToken))\n        // if there is no accesstoken -> do update call..\n        //access -> update JSON.\n        // try to access -> 403 fail -> access token update...\n    }\n\n    delete(url: string, headers?:Object | \"json\" | \"multipart\", withAccessToken: boolean = false) : Observable<AjaxResponse> {\n        const {href} = new URL(url, this.baseURLWithAPIVersion);\n        return ajax.delete(href, this.getHeader(headers, withAccessToken))\n    }\n\n    put(url: string, body? : any | HTMLFormElement, headers?:Object | \"json\" | \"multipart\", withAccessToken: boolean = false) : Observable<AjaxResponse> {\n        const {href} = new URL(url, this.baseURLWithAPIVersion);\n        return ajax.put(href, body, this.getHeader(headers,withAccessToken))\n    }\n\n    getJson<T>(url: string, headers?: Object | \"json\" | \"multipart\") : Observable<T> {\n        const {href} = new URL(url, this.baseURLWithAPIVersion);\n        return ajax.getJSON(href, this.getHeader(headers, false))\n    }\n\n    imagePost(blob:Blob) {\n        const {href} = new URL('image', this.baseURLWithAPIVersion);\n        return ajax.post(href, {imageFiles: [blob]} , this.getHeader(undefined,true))\n    }\n\n\n    // Helper\n    getHeader(headers: Object | \"json\" | \"multipart\" | undefined , withAccessToken: boolean) {\n        let header = {} as any;\n        switch( headers ){\n            case \"json\":\n                header = {\"Content-Type\": \"application/json\"}\n                break;\n            case \"multipart\":\n                // header = {\"Content-Type\": \"multipart/form-data\"}\n                break;\n            default:\n                if (headers) {\n                } else {\n                    header = headers\n                }\n        }\n        \n        if (this.accessToken && withAccessToken) {\n            header[\"Authorization\"] = `Bearer ${this.accessToken}`\n            return header\n        } else {\n            return header\n        }\n    }\n\n\n\n}","module.exports = __webpack_public_path__ + \"static/media/error.96fe8c20.png\";","module.exports = __webpack_public_path__ + \"static/media/loginpage.d100889b.png\";","import React from \"react\";\nimport styled from 'styled-components'\n\n//https://cocoder.tistory.com/158\n\nconst FOOTERCONTAINER = styled.footer`\n    background-color:#2C3031;\n    height:300px;\n    width:100%;\n`\n\nconst FROUMMARGIN = styled.div`\n    margin: 0 auto;\n    max-width: 1200px;\n    padding: 50px 1rem;\n`\n\nconst HELLO = styled.div`\n    font-family: 'Anton',sans-serif;\n    font-size: 2.8rem;\n    cursor: none;\n    text-decoration: unset;\n    color: white;\n    opacity:0.3;\n`\n\nexport default class R6Footer extends React.Component {\n    \n    render(){\n        return(\n            <FOOTERCONTAINER>\n                <FROUMMARGIN>\n                    <HELLO> R6-Search Talk </HELLO>\n                    <div> Family Site </div>\n                    <div> R6 Search.me </div>\n                    <div> R6 Search.me </div>\n                </FROUMMARGIN>\n            </FOOTERCONTAINER>\n        )\n    }\n\n}","import styled from \"styled-components\";\nimport React from \"react\";\n\n\nconst Button = styled.div`\n\n    font-weight:500;\n    cursor:pointer;\n    transition: 0.2s;\n    color: #BABECC;\n    \n    margin-right: 25px;\n\n    & p {\n        margin: 0;\n        padding:0;\n    }\n\n    & div {\n        height:5px;\n        flex:1;\n        background: #BABECC;\n        border-radius:20px;\n        opacity:0;\n        margin-left: -10px;\n        transition: 0.2s ease-out;\n    }\n\n    &:hover p {\n        font-weight:700;\n        margin-top:-6px;\n    }\n\n    &:hover div {\n        margin-left:0px;\n        opacity:1;\n    }\n`\n\n\nconst SelectedButton = styled.div`\n\n    font-weight:700;\n    color: black;\n    cursor:pointer;\n\n    margin-right: 25px;\n\n    & p {\n        margin: 0;\n        padding:0;\n        margin-top:-6px;\n    }\n\n    & div {\n        flex:1;\n        background:black;\n        height:5px;\n        border-radius:20px;\n        margin : auto 5px;\n        margin-top:3px;\n        background:black;\n    }\n`\n\ninterface ButtonProps {\n    selected?: boolean;\n    onClick?:()=>void;\n    value: string;\n    children: React.ReactNode\n}\n\nexport default function R6Button({children, selected, onClick, value}:ButtonProps) {\n\n    if (selected) {\n        return (\n        <SelectedButton onClick={onClick}>\n            <p>{children}</p>\n            <div></div>\n        </SelectedButton>)\n    } else {\n        return (\n        <Button onClick={onClick}>\n            <p>{children}</p>\n            <div></div>\n        </Button>\n        )\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\n\nconst ButtonGroup = styled.div`\n\n    display: flex;\n    text-align: center;\n    font-size:2.3rem;\n    \n    @media screen and (max-width:820px) {\n        & div {\n            font-size:1.8rem;\n        }\n    }\n\n    @media screen and (max-width:620px) {\n        & div {\n            font-size:1.5rem;\n        }\n    }\n\n\n    @media screen and (max-width:500px) {\n        & div {\n            font-size:1.3rem;\n        }\n    }   \n\n    @media screen and (max-width:400px) {\n        & div {\n            font-size:1rem;\n        }\n    }   \n`\n\n\nfunction map(children : React.ReactNode, func: (child : React.ReactElement, index?:number, total?: number)=>void) {\n    let index = 0;\n    return React.Children.map(children, (child) =>\n      React.isValidElement(child) ? func(child, index++, React.Children.count(children)) : child,\n    );\n}\n\ninterface ButtonGroupProps {\n    onChange?: (inputVal: any) => void;\n    children: React.ReactNode;\n    currentValue: any;\n}\n\nexport default function R6ButtonGroup({onChange, currentValue, children}: ButtonGroupProps) {\n\n    const handleToggles = (inputVal: any) => {\n        if (onChange) {\n            onChange(inputVal)\n        }\n    }\n\n    return(\n            <ButtonGroup>\n                { \n                        map( children, (child, index, total) => {\n                        const { value : childVal } = (child.props)\n                        return React.cloneElement( child , {\n                            onClick : ()=>{handleToggles(childVal)},\n                            selected: currentValue !== null && currentValue === childVal,\n                            value: childVal,\n                        })\n                    })\n                }\n            </ButtonGroup>\n    )\n    \n}\n\n\n\n//withReactor(R6CommunityNavigation, (state) => ({topic: state.topic}))\n/**\n *     dispatcher = this.props.reactor_control.dispatcher;\n\n    render() {\n            const {topic} = this.props.reactor_control.getState();\n\n            return(\n                <div style={{marginBottom:'20px'}}>\n                    <Menu size={\"large\"} compact pointing secondary>\n                        <Menu.Item  \n                            active={topic === \"tips\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"tips\"})}\n                        >\n                        <Icon name='gamepad' disabled={topic !== \"tips\"} />\n                        공략/팁 게시판\n                        </Menu.Item>\n                        <Menu.Item  \n                            active={topic === \"clan\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"clan\"})}\n                        >\n                        <Icon name='signup' disabled={topic !== \"clan\"} />\n                        클랜 정보 게시판\n                        </Menu.Item>\n                        <Menu.Item\n                            active={topic === \"together\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"together\"})}\n                        >\n                        <Icon name='users' disabled={topic !== \"together\"}/>\n                        같이하기\n                        </Menu.Item>\n                        <Menu.Item\n                            active={topic === \"free\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"free\"})}\n                        >\n                        <Icon name='list alternate' disabled={topic !== \"free\"} />\n                        자유게시판\n                        </Menu.Item>\n                    </Menu>\n                \n                </div>\n            )\n        }\n\n */","import React from \"react\";\nimport styled from 'styled-components'\nimport { Button, Label } from \"semantic-ui-react\";\nimport { Topic} from \"../@0ForumReactor/ForumReactor\";\nimport { R6Button, R6ButtonGroup } from './R6Button'\nimport { map, distinctUntilChanged, skip } from \"rxjs/operators\";\nimport { observer, inject } from \"mobx-react\";\nimport ForumStore from \"../Stores/ForumStore\";\nconst NAVIGATIONSTYLE = styled.nav`\n    max-width:1200px;\n    height:70px;\n`\n\nconst GLOBALNAV = styled.nav`\n\tposition: relative;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 10;\n\twidth: 100%;\n\theight: 70px;\n`\n\nconst NAVITEMS = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 1200px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 0 1rem;\n\n`\n\nconst BRANDLOGO = styled.a`\n    font-family: 'Anton', sans-serif;\n    font-size: 2.8rem;\n    color:black;\n    cursor: pointer;\n    text-decoration: unset;\n    margin-right:auto;\n\n    &:hover {\n        color: black;\n    }\n\n    @media only screen and (max-width: 380px) {\n      & {\n        font-size: 1.5rem;\n        }\n\n        & button {\n            font-size: 3.0rem;\n        }\n    }\n\n    @media only screen and (max-width: 600px) {\n\n      & {\n        font-size: 2.0rem;\n      }\n\n        & button {\n            font-size: 1.5rem;\n        }\n\n    }\n`\n\nconst SUBNAVITEMS = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: 5rem;\n  padding-left: 1rem;\n\n  @media only screen and (max-width: 600px) {\n\n    & {\n        padding-top: 3rem;\n    }\n  }\n`\n\ninterface Props {\n    forum? : ForumStore;\n}\n\n@inject('forum')\n@observer\nclass R6Navigation extends React.Component<Props> {\n    \n\n    // componentDidMount(){\n    //     this.props.reactor.state.pipe(\n    //         map( res => res.topic),\n    //         distinctUntilChanged(),\n    //         skip(1),\n    //     ).subscribe(\n    //         topic => this.setState({topic})\n    //     )\n\n    //     this.props.reactor.state.pipe(\n    //         map( res => res.isLogined),\n    //         distinctUntilChanged(),\n    //         skip(1),\n    //     ).subscribe(\n    //         isLogined => this.setState({isLogined})\n    //     )\n\n    //     this.props.reactor.state.pipe(\n    //         map( res => res.nickName),\n    //         distinctUntilChanged(),\n    //         skip(1),\n    //     ).subscribe(\n    //         nickName => this.setState({nickName})\n    //     )\n\n    // }\n\n    handleToggle(value : Topic, url?: string){\n        this.props.forum?.getList(value);\n    }\n\n    handleBrandLogo(){\n        this.props.forum?.getList(\"free\");\n    }\n\n    handleLoginButton(){\n        this.props.forum?.openLoginModal(true);\n    }\n\n    render(){\n\n        const { topic, isLogined, nickName } = this.props.forum!;\n\n        return(\n            <React.Fragment>\n                <GLOBALNAV>\n                    <NAVITEMS>\n                        <BRANDLOGO onClick={this.handleBrandLogo.bind(this)}> R6 Search - TALK </BRANDLOGO>\n                        { !isLogined ? \n                            (<Button secondary compact onClick={this.handleLoginButton.bind(this)}>로그인하기</Button>) :\n                            (   <Label as='a' image>\n                                    <img src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n                                    {nickName}\n                                </Label>\n                            )\n                        }\n                    </NAVITEMS>\n                </GLOBALNAV>\n\n                <SUBNAVITEMS>\n                        <R6ButtonGroup onChange={this.handleToggle.bind(this)} currentValue={topic}>\n                            <R6Button value={\"free\"}> 자유게시판 </R6Button>\n                            <R6Button value={\"tips\"}> 공략/팁 </R6Button>\n                            <R6Button value={\"together\"}> 같이해요 </R6Button>\n                            <R6Button value={\"clan\"}> 클랜모집 </R6Button>\n                        </R6ButtonGroup>\n                </SUBNAVITEMS>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default R6Navigation\n","\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'semantic-ui-react'\nimport { BrowserRouterProps, RouteComponentProps, withRouter } from 'react-router-dom'\n\nconst STYLED = styled.div`\n    height: calc(100vh - 70px);\n    display:flex;\n    justify-content:space-evenly;\n    align-items:center;\n    flex-direction: column;\n\n    & img {\n        height : 180px;\n        width: 180px;\n    }\n\n    & div {\n        font-size:1.2rem;\n        font-weight:bold;\n    }\n  \n    @media screen and (max-width: 700px) {\n\n        & img {\n            height:100px;\n            width:100px;\n        }\n\n      }\n\n`\n\nfunction Page404({history} : RouteComponentProps) {\n\n    return (\n        <STYLED>\n            <img src={require('./error.png')}/>\n            <div> 존재하지 않는 페이지 입니다.</div>\n            <Button color={\"black\"} size={\"medium\"} onClick={history.goBack}> 돌아가기 </Button>\n        </STYLED>\n    )\n}\n\nexport default withRouter(Page404);\n","import { Observable , concat, of  } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\n\nimport { takeUntil, map,  filter, tap  } from \"rxjs/operators\";\nimport { ListType, CommentType, PostContentType } from \"../../Util/Entity\";\nimport { catchErrorJustReturn } from \"../../Library/RxJsExtension\";\nimport { Reactor, ReactorControlProps,  ReactorControlType } from \"reactivex-redux\";\nimport { listResultMockup } from \"../../Data/mockup\";\nimport R6Ajax from \"../../Library/R6Ajax\";\n\nexport function TopicToString( topicType: Topic) {\n    switch(topicType) {\n        case \"clan\":\n            return \"클랜홍보\"\n        case \"free\":\n            return \"자유게시판\"\n        case \"tips\":\n            return \"공략/팁\"\n        case \"together\":\n            return \"같이하기\"\n    }\n}\n\nexport type Topic = \"tips\"|\"free\"| \"together\"| \"clan\"\ntype Mode = \"list\" | \"edit\" | \"view\"\n\nexport const SETTOPIC = \"SETTOPIC\" as const\nexport const SETPAGENO = \"SETPAGENO\" as const\n\nexport const TOPICLISTREQUSET = \"TOPICLISTREQUSET\" as const\nexport const CLICKPOST = \"CLICKPOST\" as const \nexport const CLICKPAGE = \"CLICKPAGE\" as const\n\nexport const CLICKLOGINOFFBUTTON = \"CLICKLOGINOFFBUTTON\" as const\nexport const CLICKLOGINBUTTON = \"CLICKLOGINBUTTON\" as const\n\nexport const INVIS_LOGINSUCCESS = \"INVIS_LOGINSUCCESS\" as const\n\n\nexport interface SETTOPIC {\n    type: typeof SETTOPIC;\n    newTopic: Topic,\n}\n\nexport interface SETPAGENO {\n    type: typeof SETPAGENO;\n    pageId: number,\n}\n\nexport interface TOPICLISTREQUSET {\n    type: typeof TOPICLISTREQUSET;\n    newTopic: Topic,\n}\n\nexport interface CLICKPAGE {\n    type: typeof CLICKPAGE;\n    newPage: number,\n}\n\nexport interface CLICKPOST {\n    type: typeof CLICKPOST;\n    postId: number,\n}\n\nexport interface CLICKLOGINBUTTON {\n    type: typeof CLICKLOGINBUTTON;\n}\nexport interface CLICKLOGINOFFBUTTON {\n    type: typeof CLICKLOGINOFFBUTTON;\n}\n\nexport interface INVIS_LOGINSUCCESS {\n    type: typeof INVIS_LOGINSUCCESS;\n    nickName: string;\n}\n\n\nexport type ForumAction = SETTOPIC | SETPAGENO |  CLICKPAGE  | CLICKLOGINBUTTON | CLICKLOGINOFFBUTTON | TOPICLISTREQUSET | CLICKPOST | INVIS_LOGINSUCCESS\n\n\nexport const SETLOADING = \"SETLOADING\"\nexport const FETCHLIST = \"FETCHLIST\"\nexport const FETCHPOST = \"FETCHPOST\"\nexport const MODECHANGE = \"MODECHANGE\"\nexport const TOPICCHANGE = \"TOPICCHANGE\"\nexport const PAGENOCHANGE = \"PAGENOCHANGE\"\nexport const LOGINMODALSTATE = \"LOGINMODALSTATE\"\nexport const LOGINSUCCESS = \"LOGINSUCCESS\"\nexport const SETNICKNAME = \"SETNICKNAME\"\n\n// 상태에 대한 힌트.\nexport interface SETLOADING {\n    type: typeof SETLOADING,\n    isLoading: boolean,\n}\n\nexport interface FETCHLIST {\n    type: typeof FETCHLIST,\n    list: ListType[],\n    page: number\n}\n\nexport interface FETCHPOST {\n    type: typeof FETCHPOST,\n    post: PostContentType,\n}\n\nexport interface TOPICCHANGE {\n    type: typeof TOPICCHANGE,\n    topic: Topic,\n} \n\nexport interface PAGENOCHANGE {\n    type: typeof PAGENOCHANGE,\n    pageId: number,\n} \n\nexport interface LOGINMODALSTATE {\n    type: typeof LOGINMODALSTATE,\n    on: boolean;\n}\n\nexport interface LOGINSUCCESS {\n    type: typeof LOGINSUCCESS\n}\n\n\nexport interface SETNICKNAME {\n    type: typeof SETNICKNAME,\n    nickName : string,\n}\n\ntype ForumMutation = SETLOADING | FETCHLIST | FETCHPOST  | TOPICCHANGE | LOGINMODALSTATE | PAGENOCHANGE | LOGINSUCCESS | SETNICKNAME\n// --- state\n\nexport interface ForumState {\n    topic : Topic,\n    page: number,\n    postList?: ListType;\n    list: ListType[],\n    isLoading:boolean,\n    isError:boolean,\n    post?: PostContentType,\n    postId: number,\n    isLogined: boolean,\n    isLoginModal: boolean;\n    nickName: string;\n}\n\nexport const ForumStateInitialState : ForumState = {\n    isError: false,\n    isLoading: true,\n    page: 1,\n    postList: undefined,\n    topic:\"free\",\n    post: undefined,\n    postId: 0,\n    list:[],\n    isLoginModal: false,\n    isLogined: false,\n    nickName: \"\",\n}\n\nexport interface ForumReactorProps extends ReactorControlProps<ForumAction, ForumState> { \n    reactor_control: ReactorControlType<ForumAction, ForumState>;\n} ;\n\nexport interface ForumReactorProp {\n    reactor : ForumReactor;\n}\n\nexport default class ForumReactor extends Reactor<ForumAction, ForumState, ForumMutation> {\n\n    mutate(action: ForumAction): Observable<ForumMutation> {\n        switch(action.type) {\n        \n        case \"SETTOPIC\":\n            return of<ForumMutation>({type:\"TOPICCHANGE\", topic: action.newTopic})\n        \n        case \"SETPAGENO\":\n            return of<ForumMutation>({type:\"PAGENOCHANGE\", pageId: action.pageId})\n\n        case \"TOPICLISTREQUSET\":\n            return concat( \n                // of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n                // this.fetchList(action.newTopic).pipe(\n                //     takeUntil(this.action.pipe(filter((value)=> {\n                //         return value.type === action.type\n                //     }))),\n                    // map<PostListType, ForumMutation>( res => {\n                    //     return {type:\"FETCHLIST\", list: res.postList, page: 1 } \n                    // }),\n                )\n        case \"CLICKPAGE\":\n            return concat(\n                //is Loading\n                of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n                //fetching List\n                // this.fetchList(this.currentState.topic, action.newPage).pipe(\n                //     takeUntil(this.action.pipe(filter(value => value === action))),\n                //     map<PostListType, ForumMutation>( res => {\n                //         return {type:\"FETCHLIST\", list: res.postList, page: action.newPage } \n                //     })\n                // ),\n                of<ForumMutation>({type:\"SETLOADING\", isLoading: false}),\n            )\n\n        case \"CLICKPOST\":\n            return concat(\n            of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n            // this.fetchPost(action.postId).pipe(\n            //     map<ContentType, ForumMutation>( res => ({type:\"FETCHPOST\", post : res}))\n            // ),\n            )\n\n        case \"CLICKLOGINBUTTON\":\n            return of<ForumMutation>({type:\"LOGINMODALSTATE\", on: true})\n\n        case \"CLICKLOGINOFFBUTTON\":\n            return of<ForumMutation>({type:\"LOGINMODALSTATE\", on: false})\n\n        case \"INVIS_LOGINSUCCESS\":\n            return concat(\n                of<ForumMutation>({type:\"LOGINMODALSTATE\", on: false}),\n                of<ForumMutation>({type:\"LOGINSUCCESS\"}),\n                of<ForumMutation>({type:\"SETNICKNAME\", nickName: action.nickName })\n\n            )\n        }\n    }\n\n    reduce(state: ForumState, mutation: ForumMutation): ForumState {\n\n        let newState = state;\n        switch(mutation.type) {\n\n            case \"TOPICCHANGE\":\n                newState.topic = mutation.topic;\n                return newState;\n\n            case \"PAGENOCHANGE\":\n                newState.postId = mutation.pageId;\n                return newState;\n\n            case \"SETLOADING\":\n            newState.isLoading = mutation.isLoading\n            return newState\n\n            case \"FETCHLIST\":\n                newState.isLoading = false;\n                newState.list = mutation.list;\n                newState.page = mutation.page;\n                return newState\n                // if (mutation.list.length === 0){\n                //     newState.isError = true;\n                //     return newState\n                // } else {\n            case \"FETCHPOST\":\n                if (Object.keys(mutation.post).length === 0) {\n                    newState.isError = true;\n                    return newState;\n                } else {\n                    newState.post = mutation.post;\n                    newState.isLoading = false;\n                    return newState;\n                }\n            case \"LOGINMODALSTATE\":\n                newState.isLoginModal = mutation.on;\n                return newState;\n\n            case \"LOGINSUCCESS\":\n                newState.isLogined = true;\n                return newState;\n\n            case \"SETNICKNAME\":\n                newState.nickName = mutation.nickName;\n                return newState;\n        }\n    }\n   \n    fetchList(topic: Topic, page: number = 1) : Observable<ListType> {\n        return ajax.getJSON<ListType>(`https://www.r6-search.me/api/c/topic/${topic}?page=${page}`)\n    }\n\n    fetchPost(postId: number) : Observable<PostContentType> {\n        return ajax.getJSON<PostContentType>(`https://www.r6-search.me/api/c/post/${postId}`)\n    }\n\n }","import React, { SetStateAction, Dispatch } from \"react\";\nimport { Transition, Image, Modal, Header, Button, Input, Icon, Form, Message } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport './R6Login.css';\nimport { motion } from 'framer-motion'\nimport _ from \"lodash\";\nimport { observer, inject } from \"mobx-react\";\nimport ForumStore from \"../../Stores/ForumStore\";\nimport LoginStore from \"../../Stores/LoginStore\";\n\nconst MODALCONTAINER = styled.div`\n    position:fixed;\n    z-index:50;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(23,25,29,.7);\n`\n\nconst MODALCONTENTCONTAINER = styled.div`\n    position:relative;\n\n    display:flex;\n    z-index:51;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    height:100%;\n`\n\nconst MODALCONTENT = styled.div`\n    position:relative;\n    background:#2c3035;\n    color:white;\n    max-width:700px;\n    width: 100%;\n    text-align:center;\n    overflow:hidden;\n    border-radius:10px;\n    height:432px;\n    display:flex;\n`\n\nconst LEFT = styled.div`\n    position:relative;\n    flex:1;\n`\n\nconst RIGHT = styled.div`\n    position:relative;\n    overflow:hidden;\n    flex:0.62;\n    display:flex;\n`\n\nconst RIGHTIMAGE= styled.img`\n    position:relative;\n    height:100%;\n    left:-50%;\n`\n\nconst HEADER = styled.div`\n    padding:50px 0 30px;\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-weight:700;\n    color:#e5e6e7;\n    font-size:2.3rem;\n`\n\n\nconst SUBHEADER = styled.p`\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-weight:700;\n    color:#b6b7b8;\n    font-size:1.4rem;\n`\n\n\nconst FORMCONTAINER = styled.div`\n    width:100%;\n    padding:0 40px;\n    text-align:left;\n\n    div { \n        margin-bottom:5px;\n    }\n`\n\nconst MOCKUP = styled.div`\n`\n\nconst DESCRIPTION = styled.p`\n    position:relative;\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    color:#646568;\n    padding:0 30px;\n    font-size:0.8rem;\n    padding-top:10px;\n`\n\nconst ICON = styled.div`\n    position:absolute;\n    top:10px;\n    right:10px;\n    background:#2c3035;\n    width:30px;\n    height:30px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    border-radius:10px;\n    i.icon {\n        margin:0px;\n    }\n`\n\nconst FOOTER = styled.div`\n    position:absolute;\n    bottom:20px;\n    right:40px;\n`\n\nconst BLACKLAYER = styled.div<{visible: boolean}>`\n    display:${props => props.visible? \"block;\" : \"none;\"}\n    position:fixed;\n    z-index:50;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(23,25,29,.7);\n`\n\nconst OTHERCONTENTS = styled.div`\n    position:fixed;\n    z-index:50;\n    top:50%;\n    left:50%;\n    transform : translate3d(-50%, -50%, 0);\n`\n\n\n\nconst isError = {\n    errorOn : { x : [0, -5, 0, 5, 0] },\n    errorOff : { x : 0 }\n}\n\ninterface Props {\n    forum?: ForumStore;\n    login?: LoginStore;\n}\n\n@inject(({forum, login}) => ({login : login, forum: forum}))\n@observer\nexport class R6Login extends React.Component<Props>  {\n\n    idInput = React.createRef<HTMLInputElement>();\n    pwdInput = React.createRef<HTMLInputElement>();\n\n    handleBlackLayer(){\n        this.props.forum!.openLoginModal(false);\n        this.props.login?.resetState();\n    }\n\n    handleLogin(){\n        this.props.login?.login(this.idInput.current!.value, this.pwdInput.current!.value);\n    }\n\n    handleRegister(){\n        this.props.login?.gotoRegister();\n    }\n\n    handleOnKeyDown(event: React.KeyboardEvent<HTMLInputElement>){\n        if (event.keyCode === 13) {\n            this.props.login?.login(this.idInput.current!.value, this.pwdInput.current!.value)\n        }\n    }\n\n    render() {\n        \n        const { isLoginModalOpened  } = this.props.forum!;\n        const { isLoginError, errorMessage, isLoginLoading  } = this.props.login!;\n\n        if (!isLoginModalOpened) {\n            return null;\n        } else {\n            return  <>\n            <motion.div \n                initial={{ opacity:0.2}}\n                animate={{ opacity:0.6}}\n                className=\"black-layer\"\n                onClick={this.handleBlackLayer.bind(this)}\n            /> \n            {/* <div className=\"login-container\"> */}\n            <motion.div \n                    initial={{ scale:0.95,  y : '100%', opacity: 0}}\n                    animate={{ scale:1, y : '0%', opacity : 1}}\n                    className=\"login-content-container\" \n                    transition = {{\n                        when: \"beforeChildren\",\n                        type:\"spring\",\n                        // stiffness: 20,\n                        mass:0.1,\n                    }}>\n                    \n                    <a className=\"login-content-exit-button\" onClick={this.handleBlackLayer.bind(this)}> 닫기 </a>\n                \n                    <div className=\"left\">\n                        {/* <img src={require('./season18-he.jpg')} />\n                        <div className=\"login-content-imageLayer\"></div>   */}\n                        \n                        <p className=\"login-header-text text-align-center\">\n                            로그인하기\n                        </p>\n\n                        <Form error={isLoginError}>\n                            <Message error negative \n                            header={errorMessage}\n                            />\n\n                            <Form.Field >\n                                <label style={{color:'white'}}>아이디</label>\n                                <input placeholder='ID' ref={this.idInput} onKeyDown={this.handleOnKeyDown.bind(this)}/>\n                            </Form.Field>\n                            <Form.Field>\n                                <label style={{color:'white'}}>비밀번호</label>\n                                <input placeholder='password' type={\"password\"} ref={this.pwdInput} onKeyDown={this.handleOnKeyDown.bind(this)}/>\n                            </Form.Field>\n                        </Form>\n\n                        <motion.div \n                            animate={ isLoginError ? \"errorOn\" : \"errorOff\"}\n                            variants={ isError }\n                            transition={{ loop: 3, duration: 0.1}}\n                        > \n                            <Button fluid color={\"green\"} disabled={isLoginLoading} loading={isLoginLoading} className=\"success-button\" onClick={this.handleLogin.bind(this)}> 로그인하기 </Button>\n                         </motion.div>\n\n                        <p className=\"description text-align-left\">\n                            로그인은 개인 정보 보호 정책 및  서비스 약관에 동의하는 것을 의미합니다.\n                        </p>\n                        <Button inverted className=\"register-button\" onClick={this.handleRegister.bind(this)}> 회원가입하기 </Button>\n                    </div>\n\n                    <div className=\"right\">\n                        <img src={require('./loginpage.png')}/>\n                        {/* <img src=\"images/season18-he.jpg\"></img> */}\n                    </div>\n                \n            </motion.div>\n\n            </>\n        }\n\n       \n    }\n    \n}\n\nexport default R6Login\n//require('./season18-he.jpg')\n\n","import React from \"react\";\nimport { R6LottieLoader } from \"../../@Reusable-Component\";\nimport { Header, Button } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Media from 'react-media';\n\n\nconst CENTER = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nfunction R6RegisterConfirmation({ history } : RouteComponentProps) {\n\n    return(\n        <CENTER>\n            <Media query={{ maxWidth: 599 }}>\n                {matches =>\n                    matches ? (\n                        <>\n                        <Header size={\"small\"}> 회원가입 인증메일을 보냈어요! </Header>\n                        <span> 메일이 도착하지 않았다면, 스팸함도 체크해주세요! </span>\n                        <R6LottieLoader key={\"1\"} path={\"https://assets1.lottiefiles.com/packages/lf20_y9qOnk.json\"} speed={0.8} width={150} height={150}/>\n                       <Button fluid color=\"green\" onClick={()=> history.push('/')}> 돌아가기 </Button>\n                        </>\n                    ) : (\n                        <>\n                            <Header size={\"huge\"}> 회원가입 인증메일을 보냈어요! </Header>\n                            <span> 메일이 도착하지 않았다면, 스팸함도 체크해주세요! </span>\n                            <R6LottieLoader key={\"2\"} path={\"https://assets1.lottiefiles.com/packages/lf20_y9qOnk.json\"} speed={0.8} width={300} height={300}/>\n                            <Button fluid color=\"green\" onClick={()=> history.push('/')}> 돌아가기 </Button>\n                        </>\n                    )\n                }\n            </Media>\n        </CENTER> \n    )\n}\n\nexport default withRouter(R6RegisterConfirmation)","import { Form, Button, Header, Message } from \"semantic-ui-react\";\nimport React from \"react\";\nimport './R6Register.css'\nimport { motion } from \"framer-motion\";\nimport _ from \"lodash\";\nimport R6RegisterConfirmation from \"./R6RegisterConfirmation\";\nimport Media from \"react-media\";\nimport { inject, observer } from \"mobx-react\";\nimport RegisterStore from \"../../Stores/RegisterStore\";\n//#36393f\n//https://gist.github.com/barbiturat/49facf4eeec1e2a5352ff4fa6bbf7286\n//https://gist.github.com/barbiturat/49facf4eeec1e2a5352ff4fa6bbf7286\n// 김종민님 + 인프런 인터렉티브 웹<div className=\"\"></div>\n\n\ninterface Props {\n    register?: RegisterStore;\n}\n\n@inject('register')\n@observer\nclass R6Register extends React.PureComponent<Props> {\n\n    idInput = React.createRef<HTMLInputElement>();\n    pwdInput = React.createRef<HTMLInputElement>();\n    pwd2Input = React.createRef<HTMLInputElement>();\n    emailInput = React.createRef<HTMLInputElement>();\n \n\n    handleOnKeyDown(event: React.KeyboardEvent<HTMLInputElement>){\n        if (event.keyCode === 13) {\n            this.props.register?.registerRequest(\n                this.idInput.current!.value,\n                this.pwdInput.current!.value,\n                this.pwd2Input.current!.value,\n                this.emailInput.current!.value,\n            )\n        }\n    }\n\n    clickHandler(){\n        this.props.register?.registerRequest(\n            this.idInput.current!.value,\n            this.pwdInput.current!.value,\n            this.pwd2Input.current!.value,\n            this.emailInput.current!.value,\n        )\n    }\n\n    goBackHandler(){\n        this.props.register?.goBack();\n    }\n\n    render(){\n\n        const { \n            idError,\n            pwdError,\n            pwd2Error,\n            isError,\n            isConfirmation,\n            errorMessage,\n            emailError,\n            isLoading,\n         } = this.props.register!\n       return( \n        <>\n    \n        <div className=\"register-container\">\n            <div className=\"register-background-img\"> </div>\n            <motion.div \n                className=\"register-black-layer\"\n                initial={{ opacity:0.1}}\n                animate={{ opacity:0.5}}\n            />\n\n            <motion.div \n                className=\"register-content\"   \n                initial={{ scale: 1.1, opacity:0.5, y:'-5%' }}\n                animate={{ scale: 1, opacity:1, y:'0%'}}\n                >\n\n                { isConfirmation ? <R6RegisterConfirmation/> \n                :\n                (<React.Fragment>\n                    <Form error={isError}>\n                        <Media query={{ maxWidth: 599 }}>\n                            {matches =>\n                                matches ? (\n                                    <Header className=\"header-center\" size={\"medium\"}> 계정 만들기 </Header>\n                                ) : (\n                                    <Header className=\"header-center\" size={\"huge\"}> 계정 만들기 </Header>\n                                )\n                            }\n                        </Media>\n                        <Message\n                            error\n                            header={errorMessage}\n                            \n                        />\n                        <Form.Field required error={idError}>\n                        <label>아이디</label>\n                        <input placeholder='ID' ref={this.idInput} onKeyDown={this.handleOnKeyDown.bind(this)}/>\n                        </Form.Field>\n                        <Form.Field required error={pwdError}>\n                        <label>비밀번호</label>\n                        <input placeholder='Password' type={\"password\"} ref={this.pwdInput} onKeyDown={this.handleOnKeyDown.bind(this)}/>\n                        </Form.Field>\n                        <Form.Field required error={pwd2Error}>\n                        <label>비밀번호 확인</label>\n                        <input placeholder='Password' type={\"password\"} ref={this.pwd2Input} onKeyDown={this.handleOnKeyDown.bind(this)}/>\n                        </Form.Field>\n                        <Form.Field required error={emailError}>\n                        <label>인증용 아이디</label>\n                        <input placeholder='Email' type={\"email\"} ref={this.emailInput} onKeyDown={this.handleOnKeyDown.bind(this)}/>\n                        </Form.Field>\n                    </Form>\n\n                    <Button id=\"button-top-margin\" type='submit' fluid color={isError? \"red\" : \"green\"} loading={isLoading} disabled={isLoading}\n                    onClick={this.clickHandler.bind(this)}>계속하기</Button>\n\n                    <div className=\"button-bottom-top\"><a onClick={this.goBackHandler.bind(this)}> 이미 계정이 있으신가요? </a> </div>\n                    <div> 등록하는 순간 R6-Community 서비스의 <a>이용 약관</a>과 <a>개인정보 보호 정책</a>에 동의하게 됩니다. </div>\n                    </React.Fragment>\n                )}\n            </motion.div>\n\n        </div>\n\n\n        </>\n       )\n    \n    }\n}\n\nexport default R6Register","import React, { useState, Suspense, lazy } from 'react';\nimport './App.css';\n\nimport styled from 'styled-components'\n// import { ModalReactor } from './Component/Modal/ModalReactor';\n\nimport { \n  R6Navigation, \n  R6Footer\n} from './Component';\n\nimport { createPortal } from \"react-dom\";\n\n\nimport Page404 from './Component/@2Content/Page404/Page404';\nimport { ForumReactor } from './Component/@0ForumReactor';\nimport { ForumStateInitialState, Topic } from './Component/@0ForumReactor/ForumReactor';\nimport { values } from 'lodash';\nimport { deepDistinctUntilChanged } from 'jsreactorkit';\nimport { skip } from 'rxjs/operators';\nimport { Divider, Portal } from 'semantic-ui-react';\nimport { R6Login, R6Register } from './Component/@2Content/Login';\nimport R6Ajax from './Library/R6Ajax';\n\n\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport { Provider } from 'mobx-react';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  RouteComponentProps,\n  withRouter,\n  Redirect,\n} from \"react-router-dom\";\n\n\n\nconst ListComponent = lazy( () => import('./Component/@2Content/Contents/List/R6List'))\nconst EditorComponent = lazy( () =>  import('./Component/@2Content/Contents/Post/Edit/R6Editor'))\nconst PostComponent = lazy( () =>  import('./Component/@2Content/Contents/Post/View/R6Post'))\n\nconst SECTIONWRAPPER = styled.div`\n  min-height:90vh;\n`\n\n\n\n\nconst PADDER = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 1.5rem 1rem;\n`\n\n\n\n\n\nclass Main extends React.PureComponent<RouteComponentProps> {\n\n  reactor: ForumReactor;\n  reactorControl: any;\n  newTopic: Topic;\n\n  constructor(props:RouteComponentProps){\n\n    super(props);\n    \n    \n    let regexp = new RegExp(`\\/[a-z]{1,}|\\/`);\n    let pathname = this.props.location.pathname;\n    let progressed = regexp.exec(pathname);\n    let excuted = progressed ? progressed[0] : \"/null\";\n\n\n    if (pathname === \"/\") {\n      ForumStateInitialState.topic = \"free\" as Topic\n    } else if ( ![\"free\", \"clan\", \"together\", \"tips\"].includes(excuted.substr(1))) {\n      this.props.history.push('/error/404');\n    } else {\n      ForumStateInitialState.topic = excuted.substr(1) as Topic\n    }\n\n    const splittedPathname = this.props.location.pathname.split('/');\n\n    if (splittedPathname.length === 4) {\n      if (splittedPathname[2] === \"post\") {\n        ForumStateInitialState.postId = parseInt(splittedPathname[3]);\n      }\n    }\n\n\n    // if (splittedPathname.length === 3) {\n    //   if (splittedPathname[2] === \"editor\") {\n    //   }\n    // }\n\n    this.newTopic = ForumStateInitialState.topic;\n    this.reactor = new ForumReactor(ForumStateInitialState);\n    this.reactorControl = this.reactor.getReactorControl();\n\n  }\n\n  componentDidMount(){\n    // this.reactor.dispatch({type:\"CLICKTOPIC\", newTopic:this.newTopic})\n  }\n\n  /** url정리 및 PRomps기능\n   * https://reactrouter.com/web/example/query-parameters\n   */\n\n  render(){\n    return(\n      <React.Fragment>\n\n         <R6Navigation></R6Navigation>\n         <R6Login></R6Login>\n         <PADDER>\n          <Switch>\n\n              <Route path={[\"/\",\"/:type\"]}  exact >\n                <ListComponent/>\n              </Route>\n\n              <Route path=\"/:style/post/:postid\">\n                <PostComponent/>\n              </Route>\n\n              <Route path=\"/:style/editor\">\n                <EditorComponent/>\n              </Route>\n\n              <Route path=\"*\">\n                <Page404></Page404>\n              </Route>\n\n              <Route path=\"/error/404\">\n                <Page404></Page404>\n              </Route>\n          </Switch>\n        </PADDER>\n     </React.Fragment>\n   );\n  }\n}\n\nexport default withRouter(Main);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nexport default class RootStoreExtend<T> {\n    root: T;\n    constructor(root: T) {\n        this.root = root;\n    }\n}","\nimport { observable, action } from 'mobx';\nimport RootStore from './RootStore';\nimport RootStoreP from './RootStoreP';\nimport { ListElementType, ListType, Meta } from '../../Util/Entity';\nimport R6Ajax from '../../Library/R6Ajax';\n\nexport type Topic = \"tips\"| \"free\" | \"together\"| \"clan\"\n\n/**\n * 현재 사용자가 보고있는 게시판의 상태에 대한 상태 저장소.\n */\nexport default class ForumStore extends RootStoreP<RootStore>{\n\n\n    queue? : Function;\n    queueArgs : any[] = [];\n\n    @observable meta : Meta = { currentPage : 0, totalPage : 0 }; \n    /** 현재 페이지 */\n    @observable page : number = 1;\n    /** 현재 게시판 주제 */\n    @observable topic : Topic = \"free\"\n    /** 현재 게시판 주제에 따른 List */\n    @observable list : ListElementType[] = [];\n    /** 현재 보고있는 Post Id */\n    postId : number = 0;\n\n    /** 로딩중인가? */\n    @observable isLoading : boolean = false;\n    /** 에러가 나왔는가? */\n    @observable isError : boolean = false;\n    /** 현재 에러의 메세지 */\n    @observable errorMessage: string = \"\";\n\n    /** 로그인 되었는가? */\n    @observable isLogined : boolean = false;\n    /** 닉네임 : 로그인완료시에만 노출 */\n    @observable nickName : string = \"\";\n\n    /** 로그인 창 open */\n    @observable isLoginModalOpened : boolean = false;\n\n    /** 현재 Topic으로 리스트 받아오기 */\n    @action\n    getList(topic?: Topic, page: number = 1){\n\n        let topicQueue : Topic = \"free\";\n\n        if (!topic) {\n            let regexp = new RegExp(`\\/[a-z]{1,}|\\/`);\n            let pathname = this.root.router.location.pathname;\n            let progressed = regexp.exec(pathname);\n            let excuted = progressed ? progressed[0] : \"/null\";\n    \n            if (pathname === \"/\") {\n                this.topic = \"free\";\n            } else if ( ![\"free\", \"clan\", \"together\", \"tips\"].includes(excuted.substr(1))) {\n                this.root.router.push('/404/error')\n            } else {\n                topicQueue = excuted.substr(1) as Topic\n            }    \n        } else {\n             topicQueue = topic;\n        }\n        // const splittedPathname = this.root.router.location.pathname.split('/');\n        // if (splittedPathname.length === 4) {\n        //     if (splittedPathname[2] === \"post\") {\n        //         ForumStateInitialState.postId = parseInt(splittedPathname[3]);\n        //     }\n        // }\n\n        this.isLoading = true;\n        this.topic = topicQueue;\n        this.root.router.push(`/${topicQueue}?page=${page}`)\n        //page\n\n        R6Ajax.shared.getJson<ListType>(`topic/${topicQueue}?page=${page}`)\n        .pipe(\n        ).subscribe(\n            res => {\n                this.meta = res.meta\n                this.page = page;\n                this.list = res.postList;\n                this.isLoading = false;\n            },\n            \n            err => {\n                this.isError = true\n                this.isLoading = false\n            }\n        )\n    }\n\n    @action\n    openLoginModal(open: boolean){\n        this.isLoginModalOpened = open;\n    }\n\n    /** 에디터 페이지로 이동 */\n    @action\n    goEditor(){\n        if (this.isLogined) {\n            let regexp = new RegExp(`\\/[a-z]{1,}|\\/`);\n            let pathname = this.root.router.location.pathname;\n            let progressed = regexp.exec(pathname);\n            let excuted = progressed ? progressed[0] : \"/null\";\n            if (excuted === \"/\") {\n                excuted = \"/free\"\n            }\n            this.root.router.history.push(`${excuted}/editor`)\n        } else {\n            this.queue = this.goEditor.bind(this);\n            this.openLoginModal(true);\n        }\n    }\n\n    /** 포스트 페이지로 이동 */\n    @action\n    goPost(postId: number){\n        let pathname = this.root.router.location.pathname === \"/\" ? \"/free\" : this.root.router.location.pathname;\n        this.root.router.history.push(`${pathname}/post/${postId}`)\n    }\n}\n","import RootStore from \"./RootStore\";\nimport RootStoreP from \"./RootStoreP\";\nimport { observable, action } from \"mobx\";\nimport R6Ajax from \"../../Library/R6Ajax\";\n\nexport default class LoginStore extends RootStoreP<RootStore>{\n\n    @observable isLoginError: boolean = false;\n    @observable errorMessage: string = \"\";\n    @observable isLoginLoading: boolean = false;\n\n    @action\n    login(id : string, pwd: string) {\n\n        if (id === \"\" || pwd === \"\") {\n            this.isLoginError = true;\n            this.errorMessage = \"아이디 혹은 패스워드를 입력해주세요\"\n            return;\n\n        } else {\n\n            this.isLoginLoading = true;\n            R6Ajax.shared.signIn(id, pwd)\n            .subscribe(\n                res=> {\n                    const queue = this.root.forum.queue;\n                    this.root.forum.isLoginModalOpened = false;\n                    this.root.forum.isLogined = true;    \n                    this.root.forum.nickName = id;\n\n                    if (queue) {\n                        queue();\n                        this.root.forum.queue = undefined;    \n                    } \n                },\n                err => {\n                    this.isLoginLoading = false;\n                    this.isLoginError = true;\n                    this.errorMessage = err.response.message\n                    \n                }\n            )\n        }\n    }\n\n    @action\n    resetState(){\n        this.isLoginError = false;\n        this.errorMessage = \"\";\n        this.isLoginLoading = false;\n    }\n\n    @action\n    gotoRegister(){\n        this.root.router.push('/register');\n    }\n}\n","import RootStore from \"./RootStore\";\nimport RootStoreP from \"./RootStoreP\";\nimport { observable, action } from \"mobx\";\nimport R6Ajax from \"../../Library/R6Ajax\";\n\nexport default class RegisterStore extends RootStoreP<RootStore> {\n    @observable idError: boolean = false;\n    @observable pwdError: boolean = false;\n    @observable pwd2Error: boolean = false;\n    @observable emailError: boolean = false;\n    @observable isError : boolean = false;\n    @observable isLoading: boolean = false;\n    @observable isConfirmation : boolean = false;\n    @observable errorMessage : string = \"\";\n\n    private tester = new RegExp(`([A-Z]|[a-z]|[0-9]){1,}\\@([A-Z]|[a-z]|[0-9]){1,}\\.([A-Z]|[a-z]){1,}`);\n\n    private MessageSet1 = {\n        messageHeader:\"아이디 오류\",\n        messageDesc:\"아이디를 입력해주세요.\"\n    }\n    \n    private MessageSet2 = {\n        messageHeader:\"비밀번호 오류\",\n        messageDesc:\"비밀번호를 확인해주세요.\"\n    }\n    \n    private MessageSet3 = {\n        messageHeader:\"비밀번호 오류\",\n        messageDesc:\"비밀번호가 일치하지 않습니다.\"\n    }\n    \n    private MessageSet4 = {\n        messageHeader:\"이메일 오류\",\n        messageDesc:\"정상적인 이메일 포맷이 아닙니다.\"\n    }\n\n    @action\n    goBack(){\n        this.root.router.goBack();\n    }\n\n    @action\n    registerRequest(id: string, pwd: string, pwd2: string, email: string) {\n\n        this.isError = false;\n        this.idError = false;\n        this.pwdError = false;\n        this.pwd2Error = false;\n        this.emailError = false;\n        this.isLoading = false;\n\n        if (id === \"\") {\n            this.isError = true;\n            this.idError = true;\n            this.errorMessage = this.MessageSet1.messageDesc\n            return;\n        }\n \n        if (pwd === \"\") {\n            this.isError = true;\n            this.pwdError = true;\n            this.errorMessage = this.MessageSet2.messageDesc\n            return;\n        }\n\n        if (pwd !== pwd2) {\n            this.isError = true;\n            this.pwdError = true;\n            this.pwd2Error = true;\n            this.errorMessage = this.MessageSet3.messageDesc\n            return;\n        }\n\n        if (!this.tester.test(email)){\n            this.isError = true;\n            this.emailError = true;\n            this.errorMessage = this.MessageSet4.messageDesc\n            return;\n        }\n\n\n        this.isLoading = true;\n        \n        R6Ajax.shared.post('signup', { password : pwd, username: id, email: email }, \"json\")\n        .subscribe(\n            res => {\n                this.isError = false;\n                this.isLoading = false;\n                this.isConfirmation = true;\n            },\n            err => {\n                this.isError = true;\n                this.isLoading = false;\n                this.errorMessage = err.response.message\n            }\n        )\n    }\n}","import { observable, action } from \"mobx\";\nimport RootStore from \"./RootStore\";\nimport RootStoreP from \"./RootStoreP\";\nimport { Topic } from \"../@0ForumReactor/ForumReactor\";\nimport R6Ajax from \"../../Library/R6Ajax\";\nimport { forEach } from \"lodash\";\n\nexport default class EditorStore extends RootStoreP<RootStore> {\n\n    /** 업로드 로딩 */\n    @observable isLoading : boolean = false;\n\n    @action\n    upload(title: string, content: string, images : string[]){\n\n        if (title === \"\" || content === \"\") {\n            return; \n        }\n        let topicQueue : Topic = \"free\";\n\n        let regexp = new RegExp(`\\/[a-z]{1,}|\\/`);\n        let pathname = this.root.router.location.pathname;\n        let progressed = regexp.exec(pathname);\n        let excuted = progressed ? progressed[0] : \"/null\";\n\n        if (pathname === \"/\") {\n            this.root.router.push('/404/error')\n        } else if ( ![\"free\", \"clan\", \"together\", \"tips\"].includes(excuted.substr(1))) {\n            this.root.router.push('/404/error')\n        } else {\n            topicQueue = excuted.substr(1) as Topic\n        }    \n        \n        this.isLoading = true;\n\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('content', content);\n        formData.append('type', topicQueue);\n        images.forEach( (value) => {\n            formData.append('imgSrcList',value);\n        })\n        return R6Ajax.shared.post(`post`, formData, \"multipart\", true)\n        .subscribe(\n            res=>{\n                this.isLoading = false;\n                this.root.router.history.push(`/${topicQueue}/post/${res.response.postId}`)\n            },\n            err=>{ \n                this.isLoading = false;\n            }\n        )\n    }\n\n\n    @action\n    edit(title: string, content: string, type: Topic, images : string[]){\n\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('content', content);\n        formData.append('type', type);\n        images.forEach( (value) => {\n            formData.append('imgSrcList',value);\n        })\n\n        // R6Ajax.shared.put(`post/${this.postId}`, \"multipart\", true)\n        // .subscribe(\n        //     res => {\n        //         // this.root.router.push(`/${topic}`)\n        //     },\n        //     err => {\n        //         // \n        //     } \n        // )\n\n\n        \n    }\n}","import RootStore from \"./RootStore\";\nimport RootStoreP from \"./RootStoreP\";\nimport { observable, action, toJS, computed } from \"mobx\";\nimport { PostContentType, CommentType } from \"../../Util/Entity\";\nimport R6Ajax from \"../../Library/R6Ajax\";\nimport axios from \"axios\";\nimport {flatMap} from 'rxjs/operators'\nimport { Topic } from \"../@0ForumReactor/ForumReactor\";\n\nexport default class PostStore extends RootStoreP<RootStore> {\n\n    @observable isLoading: boolean = false;\n    @observable isError: boolean = false;\n    @observable isCommentLoading: boolean = false;\n    @observable isCommentError: boolean = false;\n    @observable postContent? : PostContentType;\n    @observable isConfirmOpened: boolean = false;\n    @observable thumbsLoading: boolean = false;\n    \n    queue? : Function;\n    queueArgs : any[] = [];\n\n    // @computed get commentsList(){\n    //     if (this.postContent) {\n    //         return this.postContent.commentList;\n    //     } else {\n    //         return []\n    //     }\n    // } \n\n    // @computed get commentList(): CommentType[] {\n    //     if (!this.postContent) {\n    //         return [];\n    //     } else {\n    //         return this.getFlattenCommentList(this.commentList)\n    //     }\n    // }\n\n    @computed get flattenCommentList(): CommentType[] {\n\n        if (!this.postContent) {\n            return []\n        } else {\n            console.log(this.getFlattenCommentList(toJS(this.postContent.commentList)))\n            return this.getFlattenCommentList(toJS(this.postContent.commentList))\n        }\n    }\n\n    // get commentList() : CommentType[] {\n    //     if (!this.postContent) {\n    //         return [];\n    //     } else {\n    //         return this.getFlattenCommentList(this.commentList)\n    //     }\n    // }\n\n    @computed get countOfComments(){\n        if (this.postContent) {\n            return this.flattenCommentList.length\n        } else {\n            return 0\n        }   \n    }\n\n\n    // flatten(array : CommentType[], parentId?: number, parentNickname?: string, mutable: boolean = true) {\n    //     var toString = Object.prototype.toString;\n    //     var arrayTypeStr = '[object Array]';\n\n    //     var result : CommentType[] = [];\n    //     var nodes : (CommentType | undefined)[] = (mutable && array) || arrayslice();\n    //     var node: CommentType | undefined;\n    \n    //     if (!array.length) {\n    //         return result;\n    //     }\n\n    //     node = nodes.pop();\n\n    //     do {\n    //         if (toString.call(node) === arrayTypeStr) {\n    //             // nodes.push.apply(nodes, node);\n    //             nodes.push(node);\n    //         } else {\n    //             if (node) {\n    //                 result.push(node);\n    //             }\n    //         }\n    //     } while (nodes.length && (node = nodes.pop()) !== undefined);\n\n    //     result.reverse(); // we reverse result to restore the original order\n    //     return result;\n    // }\n\n    \n    getFlattenCommentList(comment : CommentType[], parentId?: number, parentNickname?: string): CommentType[]{\n\n        if (comment.length === 0) {\n            return [];\n        }\n\n        let array: CommentType[] = []; \n\n        for( const element of comment) {  \n            let elementArray : CommentType[];\n            if (parentId) {\n                elementArray = [{...element, parentId: parentId, parentNickname: parentNickname, isChild: true}]\n            } else {\n                elementArray = [element]\n            }\n            elementArray = elementArray.concat(this.getFlattenCommentList(element.childComment, element.commentId, element.username))\n            array = array.concat(elementArray);\n        }\n        \n        return array;\n    }\n\n\n\n\n\n    \n\n    postId : string = '0';\n    // @observable post?: PostListType; = undefined;\n    // @observable comments: CommentType[] = [];\n    \n\n    @action\n    resetState(){\n        this.isLoading = false;\n        this.isError = false;\n        this.isCommentLoading = false;\n        this.isCommentError = false;\n        this.postContent = undefined;\n        this.isConfirmOpened = false;\n        this.thumbsLoading = false;\n    }\n\n    \n    @action\n    getPost(){\n\n        let regexp = new RegExp(`\\/[a-z]{1,}|\\/`);\n        let pathname = this.root.router.location.pathname;\n        let progressed = regexp.exec(pathname);\n        let excuted = progressed ? progressed[0] : \"/null\";\n\n        if (pathname === \"/\") {\n            this.root.router.push('/404/error')\n        } else if ( ![\"free\", \"clan\", \"together\", \"tips\"].includes(excuted.substr(1))) {\n            this.root.router.push('/404/error')\n        } else {\n            this.root.forum.topic = excuted.substr(1) as Topic\n        }    \n\n        const pathNames = this.root.router.location.pathname.split('/');\n        const postId = pathNames[3];\n        this.postId = postId;\n        this.isLoading = true;\n\n\n        return R6Ajax.shared.getJson<PostContentType>(`post/${postId}`)\n        .subscribe(\n            res => {\n                this.isLoading = false;\n                this.postContent = res;\n            },\n            err => {\n                this.isError = true;\n            }\n        )\n    }\n\n    @action\n    thumbsUp(){\n\n        this.thumbsLoading = true;\n        \n        return R6Ajax.shared.post('comment', {postId: this.postId}, \"json\", true)\n        .pipe(\n            flatMap( res => {\n                return R6Ajax.shared.getJson<PostContentType>(`post/${this.postId}/recommend`)\n            })\n        )\n        .subscribe(\n            res => { \n            } ,\n            err => {\n            },\n            () => {\n                this.thumbsLoading = false;\n            }\n        )\n    }\n\n    @action\n    postComment(content: string, parentCommentId?: number){  \n\n        if (!this.root.forum.isLogined) {\n            this.root.forum.openLoginModal(true);\n            return;\n        }\n\n        if (content === \"\") {\n            return;\n        }\n\n        this.isCommentLoading = true;\n\n        if (parentCommentId) {\n            return R6Ajax.shared.post('comment', {content: content, postId: this.postId, parentCommentId: parentCommentId}, \"json\", true)\n            .pipe(\n                flatMap( res => {\n                    return R6Ajax.shared.getJson<PostContentType>(`post/${this.postId}`)\n                })\n            )\n            .subscribe(\n                res => { \n                    this.postContent = res;\n                    this.isCommentLoading = false;\n                } ,\n                err => {\n                    this.isCommentError = true;\n                    this.isCommentLoading = false;\n                }\n            )\n        } else {\n            return R6Ajax.shared.post('comment', {content: content, postId: this.postId}, \"json\", true)\n            .pipe(\n                flatMap( res => {\n                    return R6Ajax.shared.getJson<PostContentType>(`post/${this.postId}`)\n                })\n            )\n            .subscribe(\n                res => { \n                    this.postContent = res;\n                    this.isCommentLoading = false;\n                } ,\n                err => {\n                    this.isCommentError = true;\n                    this.isCommentLoading = false;\n                }\n            )\n        }\n    }\n\n    @action\n    setConfirmOpen(open:boolean) {\n        this.isConfirmOpened = open;\n    }\n  \n    @action\n    delete(){\n\n        // fetch('http://r6-search.me/api/c/post/63', \n        // { \n        //     method: \"DELETE\",\n        //     headers : {\n        //         \"Authorization\" : \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWFjY291bnQiLCJpYXQiOjE1OTcwNjkxNjYsImV4cCI6MTU5NzE1NTU2Nn0.wFwRZjqXi4AM4WqsJvxp0zYYtHFoiv20djNZMuNIkuk\",\n        //         \"Content-Type\" : \"application/json\",\n        //     }\n        // })\n        // .then( res => {\n        //     console.log(res)\n        // })\n        const topic = this.root.forum.topic;\n        R6Ajax.shared.delete(`post/${this.postId}`, \"json\", true)\n        .subscribe(\n            res => {\n                this.resetState();\n                this.root.router.push(`/${topic}`)\n            },\n            err => {\n\n            } \n        )\n    }\n\n\n\n}\n","\nimport { RouterStore } from 'mobx-react-router';\nimport ForumStore from './ForumStore';\nimport LoginStore from './LoginStore';\nimport RegisterStore from './RegisterStore';\nimport EditorStore from './EditorStore';\nimport PostStore from './PostStore';\n\n\nclass RootStore {\n\n    router : RouterStore;\n    forum : ForumStore;\n    login : LoginStore;\n    register: RegisterStore;\n    editor: EditorStore;\n    post: PostStore;\n\n    constructor() {\n        this.forum = new ForumStore(this);\n        this.login = new LoginStore(this);\n        this.register = new RegisterStore(this);\n        this.editor = new EditorStore(this);\n        this.post = new PostStore(this);\n        this.router = new RouterStore();\n    }\n}\n\nexport default RootStore;\n","import React, { Suspense, lazy} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport 'moment/locale/ko'\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport { Router, Switch, Route } from 'react-router';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport { Provider } from 'mobx-react';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\n\n\nimport { R6Register, R6RegisterConfirmation } from './Component/@2Content/Login';\nimport { R6Footer } from './Component/@3Footer';\nimport R6Comment from './Component/@2Content/Contents/Post/View/R6Comment';\nimport RootStore from './Component/Stores/RootStore';\nimport styled from 'styled-components';\n\n\nconst browserHistory = createBrowserHistory();\nconst rootStore = new RootStore();\nconst history = syncHistoryWithStore(browserHistory, rootStore.router);\nconst WRPAPER = styled.div`\n  display: block;\n  margin: 0; padding: 0;\n  min-height: 800px; /*푸터를 위해*/\n  position: relative; /*푸터를 위해*/\n  width: 100%; \n`\n\n\nReactDOM.render(\n  <>\n    <Provider {...rootStore}>\n\n      <Router history={history}>\n        <Suspense fallback={ <div>loading...</div>}>\n          <Switch>\n            <Route path=\"/register\" exact>\n                  <R6Register></R6Register>\n            </Route>\n            <WRPAPER> \n              <Main/>\n            </WRPAPER>\n          </Switch>\n          <R6Footer></R6Footer>\n        </Suspense>\n      </Router>\n\n    </Provider>\n  </>\n,\n  document.getElementById('root')\n);\n\n// <React.StrictMode>\n\n// </React.StrictMode>,\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}