{"version":3,"sources":["Component/@2Content/Contents/Post/View/R6TextArea.tsx","Component/@2Content/Contents/Post/View/R6Comment.tsx","Component/@2Content/Contents/Post/View/R6CommentGroup.tsx","Component/@2Content/Contents/Post/View/R6Post.tsx"],"names":["TEXTAREA","styled","textarea","R6TextArea","placeholder","textRef","onKeyDown","thisTextRef","useRef","useEffect","ref","ANIMATE","keyframes","COMMENTGRID","div","props","isNew","UPDOWNAREA","PROFILECONTAINER","CONTENTCONTAINER","isChild","REPLYBUTTONAREA","BUTTONAREA","BUTTONGROUPAREA","CHILDBACKGROUND","TAG","span","CONTENTAREA","R6Comment","React","createRef","this","comment","parentId","onSubmit","current","value","commentId","onClick","onCancel","Button","icon","size","color","basic","Icon","name","flipped","rotated","style","marginLeft","rank","id","username","locale","fromNow","createdTime","parentNickname","content","handleOnClick","bind","selected","compact","handleOnSubmit","handleOnCancel","PureComponent","R6CommentGroup","state","currentValue","setState","children","func","index","Children","map","child","isValidElement","count","total","cloneElement","handleClick","handleCancel","POSTAREA","VIEWERAREA","SUBTITLEAREA","AUTHOR","TIME","MODIFYBUTTONAREA","THUMBSUPBUTTONAREA","R6Post","inject","post","forum","observer","commentInput","getPost","key","postComment","event","keyCode","setConfirmOpen","delete","postContent","isLoading","isCommentLoading","isConfirmOpened","countOfComments","flattenCommentList","nickName","Segment","loading","Placeholder","Header","Line","Paragraph","author","title","postId","Confirm","open","onConfirm","handleDelete","local","handleOpen","Divider","initialValue","Fragment","as","dividing","labelPosition","disabled","getCommentList"],"mappings":"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","file":"static/js/10.518c7db8.chunk.js","sourcesContent":["import styled from \"styled-components\"\nimport React, { useRef, useEffect } from \"react\"\n\nconst TEXTAREA = styled.textarea`\nresize: none;\nmargin-bottom: 1rem;\nwidth: 100%;\nmin-height: 6.125rem;\nfont-size: 1rem;\ncolor: rgb(33, 37, 41);\nline-height: 1.75;\npadding: 1rem 1rem 1.5rem;\noutline: none;\nborder-width: 1px;\nborder-style: solid;\nborder-color: rgb(233, 236, 239);\nborder-image: initial;\nborder-radius: 4px;\n`\n\ninterface Props {\n    placeholder? : string\n    textRef?: (ref : React.RefObject<HTMLTextAreaElement> ) => void | (React.RefObject<HTMLTextAreaElement>);\n    onKeyDown?: ((event: React.KeyboardEvent<HTMLTextAreaElement>) => void) | undefined;\n}\n\nexport default function R6TextArea({placeholder, textRef, onKeyDown} : Props) {\n    const thisTextRef = useRef<HTMLTextAreaElement>(null);\n    useEffect( () => {\n        if (textRef) {\n            if (typeof textRef === \"function\") {\n                textRef(thisTextRef)\n            } else {   \n                (textRef as React.RefObject<HTMLTextAreaElement>) = thisTextRef;\n            }\n        }\n    }, [])\n    return <TEXTAREA ref={thisTextRef} placeholder={placeholder} onKeyDown={onKeyDown}></TEXTAREA>\n\n}","\nimport styled, {keyframes} from 'styled-components'\nimport React from 'react'\nimport { R6RankIcon } from '../../../../@Reusable-Component'\nimport { Icon, Button } from 'semantic-ui-react'\nimport R6TextArea from './R6TextArea'\nimport { CommentType } from '../../../../../Util/Entity'\nimport Moment from 'react-moment'\n\n\nconst ANIMATE = keyframes`\n    from {\n        background: rgba(0,0,0,0.5);\n    }\n\n    to {\n        background: white;\n    }\n`\n\nconst COMMENTGRID = styled.div<{isNew?: boolean}>`\n    position:relative;\n    display: flex;\n    flex-direction: column;\n    justify-content:flex-end;\n    // border-top: 1px solid #eee;\n    border-bottom: 1px solid #eee;\n    padding: 0px 10px;\n    // ${props => props.isNew ? `animation: ${ANIMATE} 1s linear`: \"\"};\n    // transition: 1s;\n`\n\nconst UPDOWNAREA = styled.div`\n    position:absolute;\n    right:10px;\n    top:8px;\n    display:flex;\n    flex-direction:row;\n    justify-content:space-evenly;\n    align-items:center;\n`\n\nconst PROFILECONTAINER = styled.div`\n    display:flex;\n    align-items:center;\n    flex-basis:45px;\n    max-height:45px;\n\n    #profile {\n        font-weight:bold;\n        margin-right:10px;\n        margin-left:-5px;\n    }\n\n    #id {\n        font-weight: bold;\n        margin-right:10px;\n        font-size:1.1rem;\n    }\n\n    #time {\n        color : #A9A9A9;\n    }\n`\n\nconst CONTENTCONTAINER = styled.div<{isChild?: boolean}>`\n    display:flex;\n    flex-grow:1;\n    padding-top:10px;\n    padding-bottom:10px;\n    max-height:1000px;\n    align-items:center;\n    ${props => props.isChild ? \"padding-left:25px\" : \"\"};\n`\n\nconst REPLYBUTTONAREA = styled.div`\n    dispaly:flex;\n    user-select:none;\n    cursor:pointer;\n    color:#C9CFD3;\n`\n\n\nconst BUTTONAREA = styled.div<{isChild?: boolean}>`\n    display:flex;\n    flex-basis:40px;\n    max-height:40px;\n    align-items:center;\n    ${props => props.isChild ? \"padding-left:25px\" : \"\"};\n`\n\nconst BUTTONGROUPAREA = styled.div`\n    display:flex;\n    justify-content:flex-end;\n    // margin-bottom: 1rem;\n`\n\nconst CHILDBACKGROUND = styled.div`\n    background-color: rgba(0, 0, 0, 0.016);\n    margin-top: 1.3125rem;\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgba(0, 0, 0, 0.02);\n    border-image: initial;\n    padding: 1rem;\n    border-radius: 4px;\n`\n\nconst TAG = styled.span`\n    display:inline-block;\n    background: #D1F2E7;\n    color: #1AAE80;\n    border-radius:10px;\n    padding:2px 7px;\n    margin-right:7px;\n    user-select:none;\n    font-weight:bold;\n`\nconst CONTENTAREA = styled.span`\n    display:inline-block;\n    max-width:100%;\n`\n\ninterface Props {\n    comment:CommentType;\n    selected?: boolean;\n    value?:number;\n    onClick?:(value: number) => void;\n    onCancel?:()=>void;\n    onSubmit: (content:string, parentId?: number) => void;\n}\n\nexport default class R6Comment extends React.PureComponent<Props> {\n\n    // const [state, setState] = useState(false);\n    // let thisTextRef = useRef<HTMLTextAreaElement>(null);\n    // comment group.\n    // comment group? how to?\n    // reply click, make a new something?\n    // is child? how?\n\n    thisTextRef = React.createRef<HTMLTextAreaElement>();\n\n\n    handleOnSubmit(){\n        if (this.props.comment.parentId) {\n            this.props.onSubmit(this.thisTextRef.current!.value, this.props.comment.parentId)\n        } else {\n            this.props.onSubmit(this.thisTextRef.current!.value, this.props.comment.commentId)\n        }\n    }\n\n    handleOnClick(){\n        if (this.props.onClick){\n            this.props.onClick(this.props.value!)\n        }\n    }\n    \n    handleOnCancel(){\n        if (this.props.onCancel){\n            this.props.onCancel()\n        }                                \n    }\n\n    render(){\n        return (\n            <COMMENTGRID>\n                <UPDOWNAREA>\n                    <Button icon size={\"mini\"} color={\"black\"} basic>\n                        <Icon name={\"thumbs up\"}/>\n                    </Button>\n                    <Button icon size={\"mini\"} color={\"black\"} basic>\n                        <Icon name={\"thumbs down\"} />\n                    </Button>\n                </UPDOWNAREA>\n                <PROFILECONTAINER>\n                    { this.props.comment.isChild && <Icon name={\"level up alternate\"} flipped={\"vertically\"} rotated={\"clockwise\"}></Icon>}\n                    <R6RankIcon style={{marginLeft:\"-5px\"}} rank={\"SILVER_I\"} size={30}></R6RankIcon>\n                    <div id=\"id\">{this.props.comment.username}</div>\n                    <div id=\"time\"><Moment locale=\"ko\" fromNow>{this.props.comment.createdTime}</Moment></div>\n                </PROFILECONTAINER>\n\n                <CONTENTCONTAINER isChild={this.props.comment.isChild}>\n                    <CONTENTAREA>\n                        { this.props.comment.isChild && <TAG> @{this.props.comment.parentNickname} </TAG>}\n                        {this.props.comment.content}\n                    </CONTENTAREA>\n                </CONTENTCONTAINER>\n\n                <BUTTONAREA isChild={this.props.comment.isChild} onClick={this.handleOnClick.bind(this)}>\n                    <REPLYBUTTONAREA>\n                            <Icon name={\"reply\"} size={\"small\"}></Icon>\n                            답글달기\n                    </REPLYBUTTONAREA>\n                </BUTTONAREA>\n\n                {\n                    this.props.selected && \n                    <CHILDBACKGROUND>\n                        <R6TextArea placeholder={`${this.props.comment.username} 에게 덧글 달기..` } textRef={(ref)=> this.thisTextRef = ref}/>\n                        <BUTTONGROUPAREA>\n                            <Button color={\"green\"} size={\"small\"} compact onClick={this.handleOnSubmit.bind(this)}>\n                                        작성하기\n                            </Button>\n                            <Button color={\"grey\"} size={\"small\"} compact onClick={this.handleOnCancel.bind(this)}>\n                                        취소\n                            </Button>\n                        </BUTTONGROUPAREA>\n                    </CHILDBACKGROUND>\n                }\n\n                {/* <CHILDCONTAINER> */}\n                    {/* {\n                        comment.childComment.map( (value, index) => {\n                            return <R6Comment isChild={true} comment={value} key={comment.commentId+index+\"_CHILD_COMMENT\"} onSubmit={onSubmit}></R6Comment>\n                        })\n                    } */}\n                {/* </CHILDCONTAINER> */}\n\n            </COMMENTGRID>\n        )\n    }\n}\n\n","import React from \"react\";\n\nfunction map(children : React.ReactNode, func: (child : React.ReactElement, index?:number, total?: number)=>void) {\n    let index = 0;\n    return React.Children.map(children, (child) =>\n      React.isValidElement(child) ? func(child, index++, React.Children.count(children)) : child,\n    );\n}\n\n\ninterface Props {\n    onChange?:(inputVal: any)=>void;\n}\n\ninterface State {\n    currentValue: number;\n}\n\nexport default class R6CommentGroup extends React.PureComponent<Props, State> {\n    \n    constructor(props: any){\n        super(props);\n        this.state = { currentValue : -1 }\n    }\n    handleClick(current: number){\n        // if (this.props.onChange) {\n        //     this.props.onChange(inputVal);\n        // }\n\n        if (this.state.currentValue === current) {\n            this.setState({currentValue : -1})\n        } else {\n            this.setState({currentValue: current})\n        }\n    }\n\n    handleCancel(){\n        this.setState({currentValue: -1})\n    }\n\n    render(){\n        return(\n            <>\n            {\n                map( this.props.children, (child, index, total) => {\n                    return React.cloneElement( child , {\n                        ...child.props,\n                        onClick : this.handleClick.bind(this),\n                        onCancel: this.handleCancel.bind(this),\n                        selected: (this.state.currentValue > -1) && this.state.currentValue === index,\n                        value: index,\n                    })\n                })\n            }\n            </>\n        ) \n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Viewer } from '@toast-ui/react-editor'\nimport { Placeholder, Segment, Header, Divider, Button, Confirm, Icon } from \"semantic-ui-react\";\nimport '@toast-ui/editor/dist/toastui-editor-viewer.css';\nimport './R6Post.css';\nimport Moment from \"react-moment\";\nimport { CommentType } from \"../../../../../Util/Entity\";\nimport R6Comment from \"./R6Comment\";\nimport R6TextArea from \"./R6TextArea\";\nimport { observer, inject } from \"mobx-react\";\nimport PostStore from \"../../../../Stores/PostStore\";\nimport ForumStore from \"../../../../Stores/ForumStore\";\nimport R6CommentGroup from \"./R6CommentGroup\";\nimport _ from 'lodash'\nimport { R6Loading } from \"../../../../@Reusable-Component\";\nimport { toJS } from \"mobx\";\n\nconst POSTAREA = styled.div`\n    position: relative;\n    background: #fff;\n    box-shadow: 0 1px 2px 0 rgba(34,36,38,.15);\n    margin: 1rem 0;\n    padding: 2em 2em;\n    border-radius: .28571429rem;\n    border: 1px solid rgba(34,36,38,.15);\n`\n\nconst VIEWERAREA = styled.div`\n    min-height:400px;\n    overflow-y:hidden;\n    word-break:break-all;\n`\n\nconst SUBTITLEAREA = styled.div`\n    display:flex;\n    flex-direction:row;\n    font-size:1.1rem;\n`\n\nconst AUTHOR = styled.div`\n    font-weight:bold;\n    margin-right:0.8em;\n\n`\n\nconst TIME = styled.div`\n    font-size:1rem;\n    color:#A9A9A9;\n`\n\nconst BUTTONAREA = styled.div`\n    display:flex;\n    justify-content: flex-end;\n    margin-bottom:10px;\n`\n\nconst MODIFYBUTTONAREA = styled.div`\n    margin:14px 0px;\n`\n\nconst THUMBSUPBUTTONAREA = styled.div`\n    display:flex;\n    flex-direction:row;\n    width:100%;\n    justify-content:center;\n\n    button:nth-child(1) {\n        margin-right:10px !important;\n        width:90px;\n    }\n    button:nth-child(2) {\n        margin-left:10px !important;\n        margin-right:0px !important;\n        width:90px;\n    }\n\n`\n\n\ninterface Props {\n    post?: PostStore;\n    forum?: ForumStore;\n}\n\n@inject(({post, forum}) => ({ forum : forum, post: post}))\n@observer\nclass R6Post extends React.PureComponent<Props> {\n\n    commentInput = React.createRef<HTMLTextAreaElement>();\n\n    componentDidMount() {\n        // window.scrollTo(0,0);\n        this.props.post?.getPost();\n    }\n\n    getCommentList(comment: CommentType[]){\n\n        return(\n            <R6CommentGroup>\n                {          \n                    comment.map( (value, index) => {\n                        return (\n                            <R6Comment key={index+\"_COMMENT\"} comment={value} onSubmit={this.onSubmit.bind(this)}></R6Comment>\n                        )\n                    })\n                }\n            </R6CommentGroup>\n        )\n    }\n\n    onSubmit(content:string, parentId?: number){\n        this.props.post!.postComment( content, parentId)\n    }\n\n    handleOnClick(){\n        this.onSubmit((this.commentInput as any).current.value)\n        if (this.commentInput.current) {\n            this.commentInput.current!.value = \"\"\n        }\n    } \n\n    handleOnKeyDown(event: React.KeyboardEvent<HTMLInputElement>){\n        if (event.keyCode === 13) {\n            this.onSubmit((this.commentInput as any).current.value)\n        }\n    }\n    \n    handleCancel(){\n        this.props.post!.setConfirmOpen(false);\n    }\n\n    handleOpen(){\n        this.props.post!.setConfirmOpen(true);\n    }\n\n    handleDelete(){\n        this.props.post?.delete();        \n    }\n\n    render(){\n        const { postContent, isLoading, isCommentLoading, isConfirmOpened, countOfComments, flattenCommentList} = this.props.post!;\n        const { nickName } = this.props.forum!;\n\n        if ( isLoading || !postContent ) {\n            return (\n                <Segment loading>\n                    <Placeholder>\n                        <Placeholder.Header>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        </Placeholder.Header>\n                        <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        </Placeholder.Paragraph>\n                    </Placeholder>\n                 </Segment>\n            \n            )\n        } else {\n            const { author, title, content, createdTime, postId} = postContent!\n            return (\n                <>\n                \n                <Confirm\n                    open={isConfirmOpened}\n                    content='삭제하시겠습니까?'\n                    onCancel={this.handleCancel.bind(this)}\n                    onConfirm={this.handleDelete.bind(this)}\n                />\n\n                    <POSTAREA key={postId + \"_KEY\"}>\n                        <Header size={'huge'}>{title}</Header>\n                        <SUBTITLEAREA>\n                            <AUTHOR>{author}</AUTHOR>\n                            <TIME><Moment local locale=\"ko\" fromNow>{createdTime}</Moment></TIME>\n                        </SUBTITLEAREA>\n                        {\n                            nickName === author && \n                            <MODIFYBUTTONAREA>\n                                <Button basic color={\"red\"} onClick={this.handleOpen.bind(this)}> 삭제 </Button>\n                                <Button basic color={\"green\"}> 수정 </Button>\n                            </MODIFYBUTTONAREA>\n                        }\n                        <Divider />\n                        <VIEWERAREA>\n                            <Viewer initialValue={content}/>\n                        </VIEWERAREA>\n                        \n                        <React.Fragment>\n                            <THUMBSUPBUTTONAREA>\n                                <Button icon basic color={\"green\"}>\n                                    <Icon name={\"thumbs up outline\"} ></Icon>\n                                    추천\n                                </Button>\n\n                                <Button icon basic color={\"red\"}>\n                                    <Icon name={\"thumbs down outline\"}></Icon>\n                                    비추천\n                                </Button>\n                            </THUMBSUPBUTTONAREA>\n                        </React.Fragment>\n\n\n                        <Header key={\"MY_KEY\"} as='h2' dividing>\n                            덧글 { countOfComments } 개\n                        </Header>\n\n                        <R6TextArea placeholder='덧글을 입력해주세요' textRef={ (ref) => this.commentInput = ref }/>\n                        <BUTTONAREA>\n                            <Button \n                                content='덧글 달기'\n                                labelPosition='left'\n                                icon='edit'\n                                color={\"green\"}\n                                disabled={isCommentLoading}\n                                loading={isCommentLoading}\n                                onClick={this.handleOnClick.bind(this)}/>\n                        </BUTTONAREA>\n\n                        {/* <Form>\n                            <R6TextArea placeholder='Tell us more' ref={ (ref) => this.commentInput = ref }/>\n                            <BUTTONAREA>\n                            <Button \n                                content='덧글 달기'\n                                labelPosition='left'\n                                icon='edit'\n                                color={\"green\"}\n                                disabled={this.state.commentIsLoading}\n                                loading={this.state.commentIsLoading}\n                                onClick={()=>{\n                                    \n                                    const {isLogined} = this.props.reactor.getState();\n                                    if (isLogined) {\n                                        this.reactor?.dispatch({type:\"CLICKREPLY\", postId: postId, content:(this.commentInput as any).current.ref.current.value})\n                                    } else {\n                                        this.props.reactor.dispatch({type:\"CLICKLOGINBUTTON\"})\n                                    }\n                                    \n                                    }}/>\n                            </BUTTONAREA>\n                        </Form> */}\n                        {/*pencil delete */}\n\n                        <React.Fragment>\n                            {/* <R6Comment comment={commentsReactorList}></R6Comment> */}\n                            { \n                                isCommentLoading ?\n                                <R6Loading/> :\n                                this.getCommentList(flattenCommentList)\n                            }\n                            {/* <Comment.Group>\n                                { commentsReactorList.length !== 0 ? this.commentList(commentsReactorList) : this.commentList(commentList) }\n                            </Comment.Group> */}\n                        </React.Fragment>\n                    </POSTAREA>\n\n                </>\n            )\n            \n        }        \n    }\n}\n\nexport default R6Post\n"],"sourceRoot":""}