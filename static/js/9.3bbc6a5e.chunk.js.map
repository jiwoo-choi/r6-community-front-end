{"version":3,"sources":["Component/@2Content/Contents/Post/View/R6TextArea.tsx","Component/@2Content/Contents/Post/View/R6Comment.tsx","Component/@2Content/Contents/Post/View/R6CommentGroup.tsx","Component/@2Content/Contents/Post/View/R6Post.tsx"],"names":["TEXTAREA","styled","textarea","R6TextArea","placeholder","textRef","onKeyDown","thisTextRef","useRef","useEffect","ref","ANIMATE","keyframes","COMMENTGRID","div","props","show","isNew","UPDOWNAREA","PROFILECONTAINER","CONTENTCONTAINER","isChild","REPLYBUTTONAREA","BUTTONAREA","BUTTONGROUPAREA","REPLYAREA","EDITREPLYAREA","TAG","span","CONTENTAREA","R6Comment","replyTextRef","React","createRef","editTextRef","parentId","this","comment","commentId","onSubmit","current","value","username","onClick","onCancel","onCommentDelete","console","log","onCommentEditClick","content","onCommentEditCancel","onCommentEdit","undefined","childComment","isEditing","Button","color","size","compact","handleCommentEditExcute","bind","handleCommentEditOnCancel","isEditable","icon","basic","handleCommentEditOnClick","Icon","name","handleCommentDeleteOnClick","flipped","rotated","style","marginLeft","rank","id","locale","fromNow","createdTime","replayUsername","handleOnClick","selected","handleOnSubmit","handleOnCancel","PureComponent","R6CommentGroup","state","currentEditingValue","currentValue","setState","handleEditingCancel","handleCancel","children","func","index","Children","map","child","isValidElement","count","total","cloneElement","handleClick","handleEditing","POSTAREA","VIEWERAREA","SUBTITLEAREA","AUTHOR","TIME","MODIFYBUTTONAREA","THUMBSUPBUTTONAREA","R6Post","inject","post","forum","observer","commentInput","getPost","currentNickName","nickName","key","commentDelete","commentEdit","replayUserName","postComment","event","keyCode","setConfirmOpen","goEdit","delete","postContent","isLoading","isCommentLoading","isConfirmOpened","countOfComments","flattenCommentList","Segment","loading","Placeholder","Header","Line","Paragraph","author","title","postId","Confirm","open","onConfirm","handleDelete","local","handleDeleteModal","handleEdit","Divider","initialValue","Fragment","as","dividing","labelPosition","disabled","getCommentList"],"mappings":"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","file":"static/js/9.3bbc6a5e.chunk.js","sourcesContent":["import styled from \"styled-components\"\nimport React, { useRef, useEffect } from \"react\"\n\nconst TEXTAREA = styled.textarea`\nresize: none;\nmargin-bottom: 1rem;\nwidth: 100%;\nmin-height: 6.125rem;\nfont-size: 1rem;\ncolor: rgb(33, 37, 41);\nline-height: 1.75;\npadding: 1rem 1rem 1.5rem;\noutline: none;\nborder-width: 1px;\nborder-style: solid;\nborder-color: rgb(233, 236, 239);\nborder-image: initial;\nborder-radius: 4px;\n`\n\ninterface Props {\n    placeholder? : string\n    textRef?: (ref : React.RefObject<HTMLTextAreaElement> ) => void | (React.RefObject<HTMLTextAreaElement>);\n    onKeyDown?: ((event: React.KeyboardEvent<HTMLTextAreaElement>) => void) | undefined;\n}\n\nexport default function R6TextArea({placeholder, textRef, onKeyDown} : Props) {\n    const thisTextRef = useRef<HTMLTextAreaElement>(null);\n    useEffect( () => {\n        if (textRef) {\n            if (typeof textRef === \"function\") {\n                textRef(thisTextRef)\n            } else {   \n                (textRef as React.RefObject<HTMLTextAreaElement>) = thisTextRef;\n            }\n        }\n    }, [])\n    return <TEXTAREA ref={thisTextRef} placeholder={placeholder} onKeyDown={onKeyDown}></TEXTAREA>\n\n}","\nimport styled, {keyframes} from 'styled-components'\nimport React from 'react'\nimport { R6RankIcon } from '../../../../@Reusable-Component'\nimport { Icon, Button } from 'semantic-ui-react'\nimport R6TextArea from './R6TextArea'\nimport { CommentType } from '../../../../../Util/Entity'\nimport Moment from 'react-moment'\n\n\nconst ANIMATE = keyframes`\n    from {\n        background: rgba(0,0,0,0.5);\n    }\n\n    to {\n        background: white;\n    }\n`\n\nconst COMMENTGRID = styled.div<{isNew?: boolean, show? : boolean}>`\n    ${props => {\n        if (!props.show) {\n            return 'display:flex;'\n        } else {\n            return 'display:none;'\n        }\n    }}\n\n    position:relative;\n    // display: flex;\n    flex-direction: column;\n    justify-content:flex-end;\n    // border-top: 1px solid #eee;\n    border-bottom: 1px solid #eee;\n    padding: 0px 10px;\n    // ${props => props.isNew ? `animation: ${ANIMATE} 1s linear`: \"\"};\n    // transition: 1s;\n`\n\nconst UPDOWNAREA = styled.div`\n    position:absolute;\n    right:10px;\n    top:8px;\n    display:flex;\n    flex-direction:row;\n    justify-content:space-evenly;\n    align-items:center;\n`\n\nconst PROFILECONTAINER = styled.div`\n    display:flex;\n    align-items:center;\n    flex-basis:45px;\n    max-height:45px;\n\n    #profile {\n        font-weight:bold;\n        margin-right:10px;\n        margin-left:-5px;\n    }\n\n    #id {\n        font-weight: bold;\n        margin-right:10px;\n        font-size:1.1rem;\n    }\n\n    #time {\n        color : #A9A9A9;\n    }\n`\n\nconst CONTENTCONTAINER = styled.div<{isChild?: boolean}>`\n    display:flex;\n    flex-grow:1;\n    padding-top:10px;\n    padding-bottom:10px;\n    max-height:1000px;\n    align-items:center;\n    ${props => props.isChild ? \"padding-left:25px\" : \"\"};\n`\n\nconst REPLYBUTTONAREA = styled.div`\n    dispaly:flex;\n    user-select:none;\n    cursor:pointer;\n    color:#C9CFD3;\n`\n\n\nconst BUTTONAREA = styled.div<{isChild?: boolean}>`\n    display:flex;\n    flex-basis:40px;\n    max-height:40px;\n    align-items:center;\n    ${props => props.isChild ? \"padding-left:25px\" : \"\"};\n`\n\nconst BUTTONGROUPAREA = styled.div`\n    display:flex;\n    justify-content:flex-end;\n    // margin-bottom: 1rem;\n`\n\nconst REPLYAREA = styled.div`\n    background-color: rgba(0, 0, 0, 0.016);\n    margin-top: 1.3125rem;\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgba(0, 0, 0, 0.02);\n    border-image: initial;\n    padding: 1rem;\n    border-radius: 4px;\n`\n\n\nconst EDITREPLYAREA = styled.div<{show?: boolean}>`\n    ${props => {\n        if (props.show) {\n            return 'display:block;'\n        } else {\n            return 'display:none;'\n        }\n    }}\n    background-color: rgba(0, 0, 0, 0.016);\n    margin-top: 1.3125rem;\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgba(0, 0, 0, 0.02);\n    border-image: initial;\n    padding: 1rem;\n    border-radius: 4px;\n`\n\nconst TAG = styled.span`\n    display:inline-block;\n    background: #D1F2E7;\n    color: #1AAE80;\n    border-radius:10px;\n    padding:2px 7px;\n    margin-right:7px;\n    user-select:none;\n    font-weight:bold;\n`\nconst CONTENTAREA = styled.span`\n    display:inline-block;\n    max-width:100%;\n`\n\ninterface Props {\n    comment:CommentType;\n    selected?: boolean;\n    value?:number;\n    /** Group으로 부터 관리 받는 종속성 목록. */\n    onClick?:(value: number) => void;\n    onCancel?:()=>void;\n    onCommentEditClick?:(value: number) => void;\n    onCommentEditCancel?:()=>void;\n\n    /** Post로 부터 관리받는 종속성 목록. */\n    onSubmit: (content:string, replayUsername?: string, parentId?: number) => void;\n    onCommentEdit?:(commentId: number, content: string)=>void;\n    onCommentDelete?:(commentId: number)=>void;\n    isEditable: boolean;\n    isEditing?:boolean;\n}\n\nexport default class R6Comment extends React.PureComponent<Props> {\n\n    // const [state, setState] = useState(false);\n    // let thisTextRef = useRef<HTMLTextAreaElement>(null);\n    // comment group.\n    // comment group? how to?\n    // reply click, make a new something?\n    // is child? how?\n\n    replyTextRef = React.createRef<HTMLTextAreaElement>();\n    editTextRef = React.createRef<HTMLTextAreaElement>();\n\n\n    handleOnSubmit(){\n        const parentId = this.props.comment.parentId ? this.props.comment.parentId : this.props.comment.commentId\n        this.props.onSubmit(this.replyTextRef.current!.value, this.props.comment.username, parentId)\n    }\n\n    handleOnClick(){\n        if (this.props.onClick){\n            this.props.onClick(this.props.value!)\n        }\n    }\n    \n    handleOnCancel(){\n        if (this.props.onCancel){\n            this.props.onCancel()\n        }                                \n    }\n\n\n    handleCommentDeleteOnClick(){\n        //바로 삭제해 줘야함.\n        if (this.props.onCommentDelete){\n            console.log(\"hey\");\n            this.props.onCommentDelete(this.props.comment.commentId)\n        }                                 \n    }\n\n    /**\n     * 단순 수정 버튼 (연필) 클릭시.\n     */\n    handleCommentEditOnClick(){\n        if (this.props.onCommentEditClick){\n            this.props.onCommentEditClick(this.props.value!)\n            this.editTextRef.current!.value = this.props.comment.content;       \n        }                        \n    }\n\n      /**\n     * 단순 수정 버튼 (연필) 클릭시.\n     */\n    handleCommentEditOnCancel(){\n        if (this.props.onCommentEditCancel){\n            this.editTextRef.current!.value = \"\";       \n            this.props.onCommentEditCancel()\n        }                        \n    }\n\n    /**\n     * 수정버튼을 실제로 excute할때.\n     */\n    handleCommentEditExcute(){\n        if(this.props.onCommentEdit){\n            this.props.onCommentEdit(this.props.comment.commentId, this.editTextRef.current!.value)\n        }\n    }\n\n    render(){\n        \n        const isChild : boolean = (this.props.comment.childComment === undefined);\n        \n        return (\n            <>\n\n                <EDITREPLYAREA show={this.props.isEditing}>\n                        <R6TextArea textRef={(ref)=> this.editTextRef = ref}/>\n                        <BUTTONGROUPAREA>\n                            <Button color={\"yellow\"} size={\"small\"} compact onClick={this.handleCommentEditExcute.bind(this)}>\n                                        수정하기\n                            </Button>\n                            <Button color={\"grey\"} size={\"small\"} compact onClick={this.handleCommentEditOnCancel.bind(this)}>\n                                        취소\n                            </Button>\n                        </BUTTONGROUPAREA>\n                </EDITREPLYAREA>\n\n                <COMMENTGRID show={this.props.isEditing}>\n                {\n                    (this.props.isEditable && !this.props.isEditing) &&\n                    <UPDOWNAREA>\n                        <Button icon size={\"mini\"} color={\"black\"} basic onClick={this.handleCommentEditOnClick.bind(this)}>\n                            <Icon name={\"pencil\"}/>\n                        </Button>\n                        <Button icon size={\"mini\"} color={\"red\"} basic onClick={this.handleCommentDeleteOnClick.bind(this)}>\n                            <Icon name={\"delete\"} />\n                        </Button>\n                    </UPDOWNAREA>\n                }\n\n\n                <PROFILECONTAINER>\n                    { isChild && <Icon name={\"level up alternate\"} flipped={\"vertically\"} rotated={\"clockwise\"}></Icon>}\n                    <R6RankIcon style={{marginLeft:\"-5px\"}} rank={\"SILVER_I\"} size={30}></R6RankIcon>\n                    <div id=\"id\">{this.props.comment.username}</div>\n                    <div id=\"time\"><Moment locale=\"ko\" fromNow>{this.props.comment.createdTime}</Moment></div>\n                </PROFILECONTAINER>\n\n                <CONTENTCONTAINER isChild={isChild}>\n                    <CONTENTAREA>\n                        { isChild && <TAG> @{this.props.comment.replayUsername!} </TAG>}\n                        {this.props.comment.content}\n                    </CONTENTAREA>\n                </CONTENTCONTAINER>\n\n                <BUTTONAREA isChild={isChild}>\n                    <REPLYBUTTONAREA onClick={this.handleOnClick.bind(this)}>\n                            <Icon name={\"reply\"} size={\"small\"}></Icon>\n                            답글달기\n                    </REPLYBUTTONAREA>\n                </BUTTONAREA>\n\n                {\n                this.props.selected && \n                    <REPLYAREA>\n                        <R6TextArea placeholder={`${this.props.comment.username} 에게 덧글 달기..` } textRef={(ref)=> this.replyTextRef = ref}/>\n                        <BUTTONGROUPAREA>\n                            <Button color={\"green\"} size={\"small\"} compact onClick={this.handleOnSubmit.bind(this)}>\n                                        작성하기\n                            </Button>\n                            <Button color={\"grey\"} size={\"small\"} compact onClick={this.handleOnCancel.bind(this)}>\n                                        취소\n                            </Button>\n                        </BUTTONGROUPAREA>\n                    </REPLYAREA>\n                }\n                </COMMENTGRID>\n            </>\n        )\n    }\n}\n\n","import React from \"react\";\n\nfunction map(children : React.ReactNode, func: (child : React.ReactElement, index?:number, total?: number)=>void) {\n    let index = 0;\n    return React.Children.map(children, (child) =>\n      React.isValidElement(child) ? func(child, index++, React.Children.count(children)) : child,\n    );\n}\n\n\ninterface Props {\n    onChange?:(inputVal: any)=>void;\n}\n\ninterface State {\n    currentValue: number;\n    currentEditingValue: number;\n}\n\nexport default class R6CommentGroup extends React.PureComponent<Props, State> {\n    \n    constructor(props: any){\n        super(props);\n        this.state = { \n            currentEditingValue : -1,\n            currentValue : -1 \n        }\n    }\n\n    handleClick(current: number){\n        if (this.state.currentValue === current) {\n            this.setState({currentValue : -1})\n        } else {\n            this.setState({currentValue: current})\n            this.handleEditingCancel();\n        }\n    }\n\n    handleCancel(){\n        this.setState({currentValue: -1})\n    }\n\n    handleEditing(current: number){\n        if (this.state.currentEditingValue === current) {\n            this.setState({currentEditingValue : -1})\n        } else {\n            this.setState({currentEditingValue: current})\n            this.handleCancel();\n        }\n    }\n\n    handleEditingCancel(){\n        this.setState({currentEditingValue: -1})\n    }\n\n\n    render(){\n        return(\n            <>\n            {\n                map( this.props.children, (child, index, total) => {\n                    return React.cloneElement( child , {\n                        ...child.props,\n                        onClick : this.handleClick.bind(this),\n                        onCancel: this.handleCancel.bind(this),\n                        onCommentEditClick: this.handleEditing.bind(this),\n                        onCommentEditCancel: this.handleEditingCancel.bind(this),\n                        selected: (this.state.currentValue > -1) && this.state.currentValue === index,\n                        isEditing: (this.state.currentEditingValue > -1) && this.state.currentEditingValue === index,\n                        value: index,\n                    })\n                })\n            }\n            </>\n        ) \n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Viewer } from '@toast-ui/react-editor'\nimport { Placeholder, Segment, Header, Divider, Button, Confirm, Icon } from \"semantic-ui-react\";\nimport '@toast-ui/editor/dist/toastui-editor-viewer.css';\nimport './R6Post.css';\nimport Moment from \"react-moment\";\nimport { CommentType } from \"../../../../../Util/Entity\";\nimport R6Comment from \"./R6Comment\";\nimport R6TextArea from \"./R6TextArea\";\nimport { observer, inject } from \"mobx-react\";\nimport PostStore from \"../../../../Stores/PostStore\";\nimport ForumStore from \"../../../../Stores/ForumStore\";\nimport R6CommentGroup from \"./R6CommentGroup\";\nimport _ from 'lodash'\nimport { R6Loading } from \"../../../../@Reusable-Component\";\nimport { toJS } from \"mobx\";\n\nconst POSTAREA = styled.div`\n    position: relative;\n    background: #fff;\n    box-shadow: 0 1px 2px 0 rgba(34,36,38,.15);\n    margin: 1rem 0;\n    padding: 2em 2em;\n    border-radius: .28571429rem;\n    border: 1px solid rgba(34,36,38,.15);\n`\n\nconst VIEWERAREA = styled.div`\n    min-height:400px;\n    overflow-y:hidden;\n    word-break:break-all;\n`\n\nconst SUBTITLEAREA = styled.div`\n    display:flex;\n    flex-direction:row;\n    font-size:1.1rem;\n`\n\nconst AUTHOR = styled.div`\n    font-weight:bold;\n    margin-right:0.8em;\n\n`\n\nconst TIME = styled.div`\n    font-size:1rem;\n    color:#A9A9A9;\n`\n\nconst BUTTONAREA = styled.div`\n    display:flex;\n    justify-content: flex-end;\n    margin-bottom:10px;\n`\n\nconst MODIFYBUTTONAREA = styled.div`\n    margin:14px 0px;\n`\n\nconst THUMBSUPBUTTONAREA = styled.div`\n    display:flex;\n    flex-direction:row;\n    width:100%;\n    justify-content:center;\n\n    button:nth-child(1) {\n        margin-right:10px !important;\n        width:90px;\n    }\n    button:nth-child(2) {\n        margin-left:10px !important;\n        margin-right:0px !important;\n        width:90px;\n    }\n`\n\n\ninterface Props {\n    post?: PostStore;\n    forum?: ForumStore;\n}\n\n@inject(({post, forum}) => ({ forum : forum, post: post}))\n@observer\nclass R6Post extends React.PureComponent<Props> {\n\n    commentInput = React.createRef<HTMLTextAreaElement>();\n\n    componentDidMount() {\n        // window.scrollTo(0,0);\n        this.props.post?.getPost();\n    }\n\n    \n    getCommentList(comment: CommentType[]){\n        const currentNickName = this.props.forum!.nickName;\n        return(\n            <R6CommentGroup>\n                {          \n                    comment.map( (value, index) => {\n                        return (\n                            <R6Comment \n                                key={index+\"_COMMENT\"} \n                                comment={value} \n                                onSubmit={this.onSubmit.bind(this)}\n                                onCommentDelete={this.onCommentDelete.bind(this)}\n                                onCommentEdit={this.onCommentEdit.bind(this)}\n                                isEditable={currentNickName === value.username}\n                                >\n                            </R6Comment>\n                        )\n                    })\n                }\n            </R6CommentGroup>\n        )\n    }\n\n    onCommentDelete(commentId: number){\n        this.props.post?.commentDelete(commentId);\n    }\n\n    onCommentEdit(commentId: number, content: string){\n        this.props.post?.commentEdit(commentId, content);\n    }\n\n    onSubmit(content:string, replayUserName?: string, parentId?: number,){\n        this.props.post!.postComment(content, replayUserName, parentId)\n    }\n\n    handleOnClick(){\n        this.onSubmit((this.commentInput as any).current.value)\n        if (this.commentInput.current) {\n            this.commentInput.current!.value = \"\"\n        }\n    } \n\n    handleOnKeyDown(event: React.KeyboardEvent<HTMLInputElement>){\n        if (event.keyCode === 13) {\n            this.onSubmit((this.commentInput as any).current.value)\n        }\n    }\n    \n    handleCancel(){\n        this.props.post!.setConfirmOpen(false);\n    }\n\n    handleDeleteModal(){\n        this.props.post!.setConfirmOpen(true);\n    }\n\n    handleEdit(){\n        this.props.post!.goEdit();\n    }\n\n    handleDelete(){\n        this.props.post?.delete();        \n    }\n\n    render(){\n        const { postContent, isLoading, isCommentLoading, isConfirmOpened, countOfComments, flattenCommentList} = this.props.post!;\n        const { nickName } = this.props.forum!;\n\n        if ( isLoading || !postContent ) {\n            return (\n                <Segment loading>\n                    <Placeholder>\n                        <Placeholder.Header>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        </Placeholder.Header>\n                        <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        </Placeholder.Paragraph>\n                    </Placeholder>\n                 </Segment>\n            \n            )\n        } else {\n            const { author, title, content, createdTime, postId } = postContent!\n            return (\n                <>\n                \n                <Confirm\n                    open={isConfirmOpened}\n                    content='삭제하시겠습니까?'\n                    onCancel={this.handleCancel.bind(this)}\n                    onConfirm={this.handleDelete.bind(this)}\n                />\n\n                    <POSTAREA key={postId + \"_KEY\"}>\n                        <Header size={'huge'}>{title}</Header>\n                        <SUBTITLEAREA>\n                            <AUTHOR>{author}</AUTHOR>\n                            <TIME><Moment local locale=\"ko\" fromNow>{createdTime}</Moment></TIME>\n                        </SUBTITLEAREA>\n                        {\n                            nickName === author && \n                            <MODIFYBUTTONAREA>\n                                <Button basic color={\"red\"} onClick={this.handleDeleteModal.bind(this)}> 삭제 </Button>\n                                <Button basic color={\"green\"} onClick={this.handleEdit.bind(this)}> 수정 </Button>\n                            </MODIFYBUTTONAREA>\n                        }\n                        <Divider />\n                        <VIEWERAREA>\n                            <Viewer initialValue={content}/>\n                        </VIEWERAREA>\n                        \n                        <React.Fragment>\n                            <THUMBSUPBUTTONAREA>\n                                <Button icon basic color={\"green\"}>\n                                    <Icon name={\"thumbs up outline\"} ></Icon>\n                                    추천\n                                </Button>\n\n                                <Button icon basic color={\"red\"}>\n                                    <Icon name={\"thumbs down outline\"}></Icon>\n                                    비추천\n                                </Button>\n                            </THUMBSUPBUTTONAREA>\n                        </React.Fragment>\n\n\n                        <Header key={\"MY_KEY\"} as='h2' dividing>\n                            덧글 { countOfComments } 개\n                        </Header>\n\n                        \n                        \n                        <R6TextArea placeholder='덧글을 입력해주세요' textRef={ (ref) => this.commentInput = ref }/>\n                        <BUTTONAREA>\n                            <Button \n                                content='덧글 달기'\n                                labelPosition='left'\n                                icon='edit'\n                                color={\"green\"}\n                                disabled={isCommentLoading}\n                                loading={isCommentLoading}\n                                onClick={this.handleOnClick.bind(this)}/>\n                        </BUTTONAREA>\n\n                        {/* <Form>\n                            <R6TextArea placeholder='Tell us more' ref={ (ref) => this.commentInput = ref }/>\n                            <BUTTONAREA>\n                            <Button \n                                content='덧글 달기'\n                                labelPosition='left'\n                                icon='edit'\n                                color={\"green\"}\n                                disabled={this.state.commentIsLoading}\n                                loading={this.state.commentIsLoading}\n                                onClick={()=>{\n                                    \n                                    const {isLogined} = this.props.reactor.getState();\n                                    if (isLogined) {\n                                        this.reactor?.dispatch({type:\"CLICKREPLY\", postId: postId, content:(this.commentInput as any).current.ref.current.value})\n                                    } else {\n                                        this.props.reactor.dispatch({type:\"CLICKLOGINBUTTON\"})\n                                    }\n                                    \n                                    }}/>\n                            </BUTTONAREA>\n                        </Form> */}\n                        {/*pencil delete */}\n\n                        <React.Fragment>\n                            {/* <R6Comment comment={commentsReactorList}></R6Comment> */}\n                            { \n                                isCommentLoading ?\n                                <R6Loading/> :\n                                this.getCommentList(flattenCommentList)\n                            }\n                            {/* <Comment.Group>\n                                { commentsReactorList.length !== 0 ? this.commentList(commentsReactorList) : this.commentList(commentList) }\n                            </Comment.Group> */}\n                        </React.Fragment>\n                    </POSTAREA>\n\n                </>\n            )\n            \n        }        \n    }\n}\n\nexport default R6Post\n"],"sourceRoot":""}