{"version":3,"sources":["Component/@Reusable-Component/R6Loading.tsx","Component/@Reusable-Component/R6LottieLoader.tsx","Component/@Reusable-Component/R6RankIcon.tsx","Library/R6Ajax.ts","Component/@Reusable-Component/@rank-icons/0.svg","Component/@Reusable-Component/@rank-icons/1.svg","Component/@Reusable-Component/@rank-icons/2.svg","Component/@Reusable-Component/@rank-icons/3.svg","Component/@Reusable-Component/@rank-icons/4.svg","Component/@Reusable-Component/@rank-icons/5.svg","Component/@Reusable-Component/@rank-icons/6.svg","Component/@Reusable-Component/@rank-icons/7.svg","Component/@Reusable-Component/@rank-icons/8.svg","Component/@Reusable-Component/@rank-icons/9.svg","Component/@Reusable-Component/@rank-icons/10.svg","Component/@Reusable-Component/@rank-icons/11.svg","Component/@Reusable-Component/@rank-icons/12.svg","Component/@Reusable-Component/@rank-icons/13.svg","Component/@Reusable-Component/@rank-icons/14.svg","Component/@Reusable-Component/@rank-icons/15.svg","Component/@Reusable-Component/@rank-icons/16.svg","Component/@Reusable-Component/@rank-icons/17.svg","Component/@Reusable-Component/@rank-icons/18.svg","Component/@Reusable-Component/@rank-icons/19.svg","Component/@Reusable-Component/@rank-icons/20.svg","Component/@Reusable-Component/@rank-icons/21.svg","Component/@Reusable-Component/@rank-icons/22.svg","Component/@Reusable-Component/@rank-icons/23.svg","Component/@2Content/Page404/error.png","Component/@2Content/Login/season18-he.jpg","Component/@3Footer/R6Footer.tsx","Component/@1Header/R6Button/R6Button.tsx","Component/@1Header/R6Button/R6ButtonGroup.tsx","Component/@1Header/R6Navigation.tsx","Component/@2Content/Page404/Page404.tsx","Component/@0ForumReactor/ForumReactor.tsx","Component/@0ForumReactor/R6Forum.tsx","Component/@2Content/Login/R6LoginReactor.tsx","Component/@2Content/Login/R6Login.tsx","Component/@2Content/Login/R6RegisterReactor.tsx","Component/@2Content/Login/R6RegisterConfirmation.tsx","Component/@2Content/Login/R6Register.tsx","Main.tsx","serviceWorker.ts","index.tsx"],"names":["TRANSFORM","keyframes","CIRCLEANI","styled","svg","props","size","strokeSize","dasharray","R6LottieLoader","element","anim","option","path","this","container","renderer","loop","autoplay","style","height","width","lottie","loadAnimation","setSpeed","speed","play","destroy","ref","React","PureComponent","R6RankIcon","Object","keys","rankicons","rank","parsableRankString","replace","src","alt","defaultProps","R6Ajax","accessToken","baseUrl","baseURLWithAPIVersion","id","pwd","href","URL","ajax","post","password","username","pipe","map","value","response","jwtToken","url","body","headers","withAccessToken","getHeader","getJSON","header","instance","createInstance","module","exports","FOOTERCONTAINER","footer","FROUMMARGIN","div","HELLO","R6Footer","Component","Button","SelectedButton","R6Button","children","selected","onClick","ButtonGroup","R6ButtonGroup","onChange","currentValue","func","index","Children","child","isValidElement","count","total","childVal","cloneElement","inputVal","nav","GLOBALNAV","NAVITEMS","BRANDLOGO","a","SUBNAVITEMS","R6Navigation","state","reactor","getState","dispatch","type","newTopic","history","push","res","topic","distinctUntilChanged","skip","subscribe","setState","isLogined","nickName","Fragment","handleToggle","secondary","compact","dispatchFn","bind","withRouter","STYLED","require","color","goBack","ForumStateInitialState","isError","isLoading","page","postList","undefined","postId","list","isLoginModal","ForumReactor","action","of","pageId","concat","fetchList","takeUntil","filter","currentState","newPage","fetchPost","on","mutation","newState","length","Reactor","LoginInitialState","isSuccess","message","LoginReactor","login","initialState","shared","signIn","catchError","err","img","p","visible","errorOn","x","errorOff","R6Login","idInput","createRef","pwdInput","disposedBy","_","isEqual","reactor_control","dispatcher","current","disposeAll","initial","opacity","animate","className","handleClick","scale","y","transition","when","mass","Form","error","Message","negative","Field","placeholder","variants","duration","fluid","disabled","loading","inverted","withReactor","RegisterInitialState","isIdError","isPwd2Error","isPwdError","isEmailError","isValidated","messageHeader","messageDesc","MessageSet1","MessageSet2","MessageSet3","MessageSet4","tester","RegExp","R6RegisterReactor","pwd2","test","email","registerRequest","CENTER","query","maxWidth","matches","Header","key","R6Register","pwd2Input","emailInput","required","ListComponent","lazy","EditorComponent","PostComponent","PADDER","Main","reactorControl","regexp","pathname","location","progressed","exec","excuted","includes","substr","splittedPathname","split","parseInt","getReactorControl","exact","Boolean","window","hostname","match","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4e0e7c36.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, {keyframes} from 'styled-components'\n\n\nconst TRANSFORM = keyframes`\n    100% { transform: rotate(360deg); }\n`\n\nconst CIRCLEANI = keyframes`\n    0% { stroke-dashoffset: 157; }\n    75% { stroke-dashoffset: -147; }\n    100% { stroke-dashoffset: -157; }\n`\n\nconst SVG = styled.svg<{size?: number, strokeSize?: number, dasharray?: number}>`\n    width: ${props => props.size? props.size : 62}px;\n    height: ${props => props.size? props.size : 62}px;\n    animation: ${TRANSFORM} 3s infinite;\n    margin-bottom:20px;\n\n    & circle {\n        stroke: black;\n        stroke-width: ${props => props.strokeSize? props.strokeSize : 6};\n        /* getTotalLength()로 stroke의 길이를 얻어올 수 있음 */\n        stroke-dasharray: ${props => props.dasharray ? props.dasharray : 157};\n        stroke-dashoffset: 0;\n        fill: transparent;\n        animation: ${CIRCLEANI} 1s infinite;\n    }\n`\n\nexport interface R6LoadingProps {\n    /** width & height 사이즈 */\n    size?: number;\n    /** Circle Stroke 사이즈, */\n    strokeSize?: number;\n    /** stroke-Dash Array의 속성. 사이즈 Height과 Width에 따라 달라집니다 */\n    dasharray?: number;\n}\n\n/**\n * SVG 로딩 애니메이션 입니다.\n */\nexport default function R6Loading({ size, strokeSize, dasharray } :R6LoadingProps) {\n    return (\n        <SVG size={size} strokeSize={strokeSize} dasharray={dasharray}>\n            <circle cx=\"50%\" cy=\"50%\" r=\"25\"></circle>\n        </SVG>\n    )\n}","import React from \"react\";\nimport lottie, { AnimationConfigWithPath , AnimationItem} from 'lottie-web';\n\nexport interface R6AnimationProperty {\n    /** 애니메이션 스피드 */\n    speed? : number;\n    /** 애니메이션 높이 */\n    height: number;\n    /** 애니메이션 너비 */\n    width: number;\n    /** 애니메이션 json path (url) */\n    path: string;\n}\n\n/**\n * Lottie 애니메이션을 간단하게 플레이할 수 있도록 감싼 wrapper입니다.\n * https://github.com/chenqingspring/react-lottie/blob/master/src/index.js#L118\n */\nexport default class R6LottieLoader extends React.PureComponent<R6AnimationProperty> {\n    \n    /** element ref */\n    private element! : HTMLElement; \n    private anim?: AnimationItem;\n \n    componentDidMount(){\n\n        let option : AnimationConfigWithPath = {\n            path : this.props.path,\n            container:this.element,\n            renderer:'svg',\n            loop:true,\n            autoplay:true\n        }\n\n        this.element.style.height = `${this.props.height}px`\n        this.element.style.width = `${this.props.width}px`\n\n        this.anim = lottie.loadAnimation(option);\n        this.anim?.setSpeed((this.props.speed)? this.props.speed : 1);\n        this.anim?.play();\n    }\n\n    componentWillUnmount() {\n        this.anim?.destroy();\n    }\n\n    render(){\n        return(\n                <div ref={ (ref) => this.element = ref!}/>\n        )\n    }\n    \n}\n\n","import React from 'react';\nimport * as rankicons from './@rank-icons'\nimport { CSSProperties } from 'styled-components';\n\nexport type RankType = keyof typeof rankicons;\nexport const rankIconTypes: RankType[] = Object.keys(rankicons) as any[];\n\nexport type R6RankIconProps = {\n    /** 랭크 타입 */\n    rank: string;\n    /** 아이콘 사이즈 */\n    size?: number;\n    /** 랭크아이콘 다음이나 이전의 아이콘을 조회하기 위한 값 */\n    forward?: number;\n\n    style?: CSSProperties;\n};\n\n\n//export => import string.\n\nconst R6RankIcon = ({ rank, size, style}: R6RankIconProps) => {\n    \n    //이제 rank에 들어오는 string은  받을 수 있습니다. 다만 확실하지 않을경우 \n    try {\n        let parsableRankString = rank.replace(\" \", \"_\") as RankType;\n        const src = rankicons[parsableRankString];\n        return  <img src={src} alt={\"rank\"} style={{...style, width:size, height:'auto'}}/>\n    } catch {\n        return <div style={{...style, width:size, height:size}}></div>\n    }  \n}\n\nR6RankIcon.defaultProps = {\n    size : 20\n}\n\nexport default R6RankIcon;\n  ","import { ajax, AjaxResponse } from \"rxjs/ajax\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n\n\nexport default class R6Ajax {\n\n    static instance : R6Ajax | null = null;\n    \n    static createInstance() {\n        var object = new R6Ajax();\n        return object;\n    }\n\n    static get shared() {\n        if (!R6Ajax.instance) {\n            R6Ajax.instance = R6Ajax.createInstance();\n        }\n        return R6Ajax.instance;\n    }\n\n    accessToken? : string;\n    baseUrl = \"http://r6-search.me\"\n    baseURLWithAPIVersion = this.baseUrl + \"/api/c/\" \n\n    id?: string;\n    pwd?: string;\n\n    /**\n     * 세가지경우.\n     * id, pwd가 메모리에 있는경우.\n     * id, pwd가 메모리에 없는 경우. accessToken\n     * accessToken이 없는경우, refresh Token 요청.\n     */\n\n    signIn(id: string, pwd: string) : Observable<string> {\n        const {href} = new URL(`signin`, this.baseURLWithAPIVersion);\n        return ajax.post(href, { password : pwd, username: id }, {\n            \"Content-Type\": \"application/json\"\n        }).pipe( map( value => {\n            this.id = id;\n            this.pwd = pwd;\n            this.accessToken = value.response.jwtToken;\n            return value.response.jwtToken\n        }))\n    }\n\n    /** updateAccessToken */\n\n    updateAccessToken(id: string, pwd: string): Observable<string>{\n        //refreshtoke으로 다시요청한다. (id, pwd는 저장하지않는다...)\n        const {href} = new URL(`/signin`, this.baseUrl);\n        return ajax.post(href, { password : pwd, username: id }, {\n            \"Content-Type\": \"application/json\"\n        }).pipe( map( value => value.response.jwtToken ))\n    }\n\n\n    /** Wrapper */\n    post(url: string, body? : any | HTMLFormElement, headers?:Object | \"json\" | \"multipart\", withAccessToken: boolean = false) : Observable<AjaxResponse> {\n        const {href} = new URL(url, this.baseURLWithAPIVersion);\n        //accessToken\n        //image to binary file => \n        return ajax.post(href, body, this.getHeader(headers, withAccessToken))\n        // if there is no accesstoken -> do update call..\n        //access -> update JSON.\n        // try to access -> 403 fail -> access token update...\n    }\n\n    getJson<T>(url: string, headers?: Object | \"json\" | \"multipart\") : Observable<T> {\n        const {href} = new URL(url, this.baseURLWithAPIVersion);\n        return ajax.getJSON(href, this.getHeader(headers, false))\n    }\n\n\n    // Helper\n    getHeader(headers: Object | \"json\" | \"multipart\" | undefined , withAccessToken: boolean) {\n        let header = {} as any;\n        switch( headers ){\n            case \"json\":\n                header = {\"Content-Type\": \"application/json\"}\n                break;\n            case \"multipart\":\n                // header = {\"Content-Type\": \"multipart/form-data\"}\n                break;\n            default:\n                if (headers) {\n                } else {\n                    header = headers\n                }\n        }\n        \n        if (this.accessToken && withAccessToken) {\n            header[\"Authorization\"] = `Bearer ${this.accessToken}`\n            return header\n        } else {\n            return header\n        }\n    }\n\n\n\n}","module.exports = __webpack_public_path__ + \"static/media/0.344141c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.682ff38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.d5d3ef47.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.9666e753.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.1f278692.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.d9127b49.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.3731835b.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.67b08a0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.2c10874a.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.9f60a569.svg\";","module.exports = __webpack_public_path__ + \"static/media/10.a9ef776a.svg\";","module.exports = __webpack_public_path__ + \"static/media/11.511fc75a.svg\";","module.exports = __webpack_public_path__ + \"static/media/12.ab22843f.svg\";","module.exports = __webpack_public_path__ + \"static/media/13.b3e04c72.svg\";","module.exports = __webpack_public_path__ + \"static/media/14.e1354c3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/15.62142744.svg\";","module.exports = __webpack_public_path__ + \"static/media/16.5ad4e2d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/17.3608213b.svg\";","module.exports = __webpack_public_path__ + \"static/media/18.84aa7e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/19.e69dbfa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/20.57c836b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/21.5ed6eff2.svg\";","module.exports = __webpack_public_path__ + \"static/media/22.75116dcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/23.65986604.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.96fe8c20.png\";","module.exports = __webpack_public_path__ + \"static/media/season18-he.bcdaa61d.jpg\";","import React from \"react\";\nimport styled from 'styled-components'\n\n//https://cocoder.tistory.com/158\n\nconst FOOTERCONTAINER = styled.footer`\n    background-color:#2C3031;\n    height:300px;\n    width:100%;\n`\n\nconst FROUMMARGIN = styled.div`\n    margin: 0 auto;\n    max-width: 1200px;\n    padding: 50px 1rem;\n`\n\nconst HELLO = styled.div`\n    font-family: 'Anton',sans-serif;\n    font-size: 2.8rem;\n    cursor: none;\n    text-decoration: unset;\n    color: white;\n    opacity:0.3;\n`\n\nexport default class R6Footer extends React.Component {\n    \n    render(){\n        return(\n            <FOOTERCONTAINER>\n                <FROUMMARGIN>\n                    <HELLO> R6-Search Talk </HELLO>\n                    <div> Family Site </div>\n                    <div> R6 Search.me </div>\n                    <div> R6 Search.me </div>\n                </FROUMMARGIN>\n            </FOOTERCONTAINER>\n        )\n    }\n\n}","import styled from \"styled-components\";\nimport React from \"react\";\n\n\nconst Button = styled.div`\n\n    font-weight:500;\n    cursor:pointer;\n    transition: 0.2s;\n    color: #BABECC;\n    \n    margin-right: 25px;\n\n    & p {\n        margin: 0;\n        padding:0;\n    }\n\n    & div {\n        height:5px;\n        flex:1;\n        background: #BABECC;\n        border-radius:20px;\n        opacity:0;\n        margin-left: -10px;\n        transition: 0.2s ease-out;\n    }\n\n    &:hover p {\n        font-weight:700;\n        margin-top:-6px;\n    }\n\n    &:hover div {\n        margin-left:0px;\n        opacity:1;\n    }\n`\n\n\nconst SelectedButton = styled.div`\n\n    font-weight:700;\n    color: black;\n    cursor:pointer;\n\n    margin-right: 25px;\n\n    & p {\n        margin: 0;\n        padding:0;\n        margin-top:-6px;\n    }\n\n    & div {\n        flex:1;\n        background:black;\n        height:5px;\n        border-radius:20px;\n        margin : auto 5px;\n        margin-top:3px;\n        background:black;\n    }\n`\n\ninterface ButtonProps {\n    selected?: boolean;\n    onClick?:()=>void;\n    value: string;\n    children: React.ReactNode\n}\n\nexport default function R6Button({children, selected, onClick, value}:ButtonProps) {\n\n    if (selected) {\n        return (\n        <SelectedButton onClick={onClick}>\n            <p>{children}</p>\n            <div></div>\n        </SelectedButton>)\n    } else {\n        return (\n        <Button onClick={onClick}>\n            <p>{children}</p>\n            <div></div>\n        </Button>\n        )\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\n\nconst ButtonGroup = styled.div`\n\n    display: flex;\n    text-align: center;\n    font-size:2.3rem;\n    \n    @media screen and (max-width:820px) {\n        & div {\n            font-size:1.8rem;\n        }\n    }\n\n    @media screen and (max-width:620px) {\n        & div {\n            font-size:1.5rem;\n        }\n    }\n\n\n    @media screen and (max-width:500px) {\n        & div {\n            font-size:1.3rem;\n        }\n    }   \n\n    @media screen and (max-width:400px) {\n        & div {\n            font-size:1rem;\n        }\n    }   \n`\n\n\nfunction map(children : React.ReactNode, func: (child : React.ReactElement, index?:number, total?: number)=>void) {\n    let index = 0;\n    return React.Children.map(children, (child) =>\n      React.isValidElement(child) ? func(child, index++, React.Children.count(children)) : child,\n    );\n}\n\ninterface ButtonGroupProps {\n    onChange?: (inputVal: any) => void;\n    children: React.ReactNode;\n    currentValue: any;\n}\n\nexport default function R6ButtonGroup({onChange, currentValue, children}: ButtonGroupProps) {\n\n    const handleToggles = (inputVal: any) => {\n        if (onChange) {\n            onChange(inputVal)\n        }\n    }\n\n    return(\n            <ButtonGroup>\n                { \n                        map( children, (child, index, total) => {\n                        const { value : childVal } = (child.props)\n                        return React.cloneElement( child , {\n                            onClick : ()=>{handleToggles(childVal)},\n                            selected: currentValue !== null && currentValue === childVal,\n                            value: childVal,\n                        })\n                    })\n                }\n            </ButtonGroup>\n    )\n    \n}\n\n\n\n//withReactor(R6CommunityNavigation, (state) => ({topic: state.topic}))\n/**\n *     dispatcher = this.props.reactor_control.dispatcher;\n\n    render() {\n            const {topic} = this.props.reactor_control.getState();\n\n            return(\n                <div style={{marginBottom:'20px'}}>\n                    <Menu size={\"large\"} compact pointing secondary>\n                        <Menu.Item  \n                            active={topic === \"tips\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"tips\"})}\n                        >\n                        <Icon name='gamepad' disabled={topic !== \"tips\"} />\n                        공략/팁 게시판\n                        </Menu.Item>\n                        <Menu.Item  \n                            active={topic === \"clan\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"clan\"})}\n                        >\n                        <Icon name='signup' disabled={topic !== \"clan\"} />\n                        클랜 정보 게시판\n                        </Menu.Item>\n                        <Menu.Item\n                            active={topic === \"together\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"together\"})}\n                        >\n                        <Icon name='users' disabled={topic !== \"together\"}/>\n                        같이하기\n                        </Menu.Item>\n                        <Menu.Item\n                            active={topic === \"free\"}\n                            onClick={this.dispatcher({type:\"CLICKTOPIC\", newTopic:\"free\"})}\n                        >\n                        <Icon name='list alternate' disabled={topic !== \"free\"} />\n                        자유게시판\n                        </Menu.Item>\n                    </Menu>\n                \n                </div>\n            )\n        }\n\n */","import React from \"react\";\nimport styled from 'styled-components'\nimport { Button } from \"semantic-ui-react\";\nimport { withReactor } from \"reactivex-redux\";\nimport { ForumReactorProps, Topic, ForumReactorProp, ForumState } from \"../@0ForumReactor/ForumReactor\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { R6Button, R6ButtonGroup } from './R6Button'\nimport { map, distinctUntilChanged, skip } from \"rxjs/operators\";\n\nconst NAVIGATIONSTYLE = styled.nav`\n    max-width:1200px;\n    height:70px;\n`\n\nconst GLOBALNAV = styled.nav`\n\tposition: relative;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 10;\n\twidth: 100%;\n\theight: 70px;\n`\n\nconst NAVITEMS = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 1200px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 0 1rem;\n\n`\n\nconst BRANDLOGO = styled.a`\n    font-family: 'Anton', sans-serif;\n    font-size: 2.8rem;\n    color:black;\n    cursor: pointer;\n    text-decoration: unset;\n    margin-right:auto;\n\n    &:hover {\n        color: black;\n    }\n\n    @media only screen and (max-width: 380px) {\n      & {\n        font-size: 1.5rem;\n        }\n\n        & button {\n            font-size: 3.0rem;\n        }\n    }\n\n    @media only screen and (max-width: 600px) {\n\n      & {\n        font-size: 2.0rem;\n      }\n\n        & button {\n            font-size: 1.5rem;\n        }\n\n    }\n`\n\nconst SUBNAVITEMS = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: 5rem;\n  padding-left: 1rem;\n\n  @media only screen and (max-width: 600px) {\n\n    & {\n        padding-top: 3rem;\n    }\n  }\n`\n\nclass R6Navigation extends React.Component<ForumReactorProp & RouteComponentProps, ForumState> {\n    \n\n    constructor(props: any) {\n        super(props);\n        this.state = this.props.reactor.getState();\n\n    }\n\n    handleToggle(value : Topic, url?: string){\n        this.props.reactor.dispatch({type:\"SETTOPIC\", newTopic: value})\n        if (url) {\n            this.props.history.push(`${url}`)\n        } else {\n            this.props.history.push(`/${value}`)\n        }\n    }\n\n    componentDidMount(){\n        this.props.reactor.state.pipe(\n            map( res => res.topic),\n            distinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            topic => this.setState({topic})\n        )\n\n        this.props.reactor.state.pipe(\n            map( res => res.isLogined),\n            distinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            isLogined => this.setState({isLogined})\n        )\n\n        this.props.reactor.state.pipe(\n            map( res => res.nickName),\n            distinctUntilChanged(),\n            skip(1),\n        ).subscribe(\n            nickName => this.setState({nickName})\n        )\n\n    }\n\n    render(){\n\n        const { topic, isLogined } = this.state;\n\n        return(\n            <React.Fragment>\n                <GLOBALNAV>\n                    <NAVITEMS>\n                        <BRANDLOGO onClick={()=>{this.handleToggle(\"free\", \"/\")}}> R6 Search - TALK </BRANDLOGO>\n                        { !isLogined ? \n                            (<Button secondary compact onClick={this.props.reactor.dispatchFn({type:\"CLICKLOGINBUTTON\"})}>로그인하기</Button>) :\n                            (<div> {this.state.nickName}님 안녕하세요! </div>)\n                        }\n                    </NAVITEMS>\n                </GLOBALNAV>\n\n                <SUBNAVITEMS>\n                        <R6ButtonGroup onChange={this.handleToggle.bind(this)} currentValue={topic}>\n                            <R6Button value={\"free\"}> 자유게시판 </R6Button>\n                            <R6Button value={\"tips\"}> 공략/팁 </R6Button>\n                            <R6Button value={\"together\"}> 같이해요 </R6Button>\n                            <R6Button value={\"clan\"}> 클랜모집 </R6Button>\n                        </R6ButtonGroup>\n                </SUBNAVITEMS>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(R6Navigation);\n","\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'semantic-ui-react'\nimport { BrowserRouterProps, RouteComponentProps, withRouter } from 'react-router-dom'\n\nconst STYLED = styled.div`\n    height: calc(100vh - 70px);\n    display:flex;\n    justify-content:space-evenly;\n    align-items:center;\n    flex-direction: column;\n\n    & img {\n        height : 180px;\n        width: 180px;\n    }\n\n    & div {\n        font-size:1.2rem;\n        font-weight:bold;\n    }\n  \n    @media screen and (max-width: 700px) {\n\n        & img {\n            height:100px;\n            width:100px;\n        }\n\n      }\n\n`\n\nfunction Page404({history} : RouteComponentProps) {\n\n    return (\n        <STYLED>\n            <img src={require('./error.png')}/>\n            <div> 존재하지 않는 페이지 입니다.</div>\n            <Button color={\"black\"} size={\"medium\"} onClick={history.goBack}> 돌아가기 </Button>\n        </STYLED>\n    )\n}\n\nexport default withRouter(Page404);\n","import { Observable , concat, of  } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\n\nimport { takeUntil, map,  filter, tap  } from \"rxjs/operators\";\nimport { ListType, ContentType, PostListType, CommentType } from \"../../Util/Entity\";\nimport { catchErrorJustReturn } from \"../../Library/RxJsExtension\";\nimport { Reactor, ReactorControlProps,  ReactorControlType } from \"reactivex-redux\";\nimport { listResultMockup } from \"../../Data/mockup\";\nimport R6Ajax from \"../../Library/R6Ajax\";\n\nexport function TopicToString( topicType: Topic) {\n    switch(topicType) {\n        case \"clan\":\n            return \"클랜홍보\"\n        case \"free\":\n            return \"자유게시판\"\n        case \"tips\":\n            return \"공략/팁\"\n        case \"together\":\n            return \"같이하기\"\n    }\n}\n\nexport type Topic = \"tips\"|\"free\"| \"together\"| \"clan\"\ntype Mode = \"list\" | \"edit\" | \"view\"\n\nexport const SETTOPIC = \"SETTOPIC\" as const\nexport const SETPAGENO = \"SETPAGENO\" as const\n\nexport const TOPICLISTREQUSET = \"TOPICLISTREQUSET\" as const\nexport const CLICKPOST = \"CLICKPOST\" as const \nexport const CLICKPAGE = \"CLICKPAGE\" as const\n\nexport const CLICKLOGINOFFBUTTON = \"CLICKLOGINOFFBUTTON\" as const\nexport const CLICKLOGINBUTTON = \"CLICKLOGINBUTTON\" as const\n\nexport const INVIS_LOGINSUCCESS = \"INVIS_LOGINSUCCESS\" as const\n\n\nexport interface SETTOPIC {\n    type: typeof SETTOPIC;\n    newTopic: Topic,\n}\n\nexport interface SETPAGENO {\n    type: typeof SETPAGENO;\n    pageId: number,\n}\n\nexport interface TOPICLISTREQUSET {\n    type: typeof TOPICLISTREQUSET;\n    newTopic: Topic,\n}\n\nexport interface CLICKPAGE {\n    type: typeof CLICKPAGE;\n    newPage: number,\n}\n\nexport interface CLICKPOST {\n    type: typeof CLICKPOST;\n    postId: number,\n}\n\nexport interface CLICKLOGINBUTTON {\n    type: typeof CLICKLOGINBUTTON;\n}\nexport interface CLICKLOGINOFFBUTTON {\n    type: typeof CLICKLOGINOFFBUTTON;\n}\n\nexport interface INVIS_LOGINSUCCESS {\n    type: typeof INVIS_LOGINSUCCESS;\n    nickName: string;\n}\n\n\nexport type ForumAction = SETTOPIC | SETPAGENO |  CLICKPAGE  | CLICKLOGINBUTTON | CLICKLOGINOFFBUTTON | TOPICLISTREQUSET | CLICKPOST | INVIS_LOGINSUCCESS\n\n\nexport const SETLOADING = \"SETLOADING\"\nexport const FETCHLIST = \"FETCHLIST\"\nexport const FETCHPOST = \"FETCHPOST\"\nexport const MODECHANGE = \"MODECHANGE\"\nexport const TOPICCHANGE = \"TOPICCHANGE\"\nexport const PAGENOCHANGE = \"PAGENOCHANGE\"\nexport const LOGINMODALSTATE = \"LOGINMODALSTATE\"\nexport const LOGINSUCCESS = \"LOGINSUCCESS\"\nexport const SETNICKNAME = \"SETNICKNAME\"\n\n// 상태에 대한 힌트.\nexport interface SETLOADING {\n    type: typeof SETLOADING,\n    isLoading: boolean,\n}\n\nexport interface FETCHLIST {\n    type: typeof FETCHLIST,\n    list: ListType[],\n    page: number\n}\n\nexport interface FETCHPOST {\n    type: typeof FETCHPOST,\n    post: ContentType,\n}\n\nexport interface TOPICCHANGE {\n    type: typeof TOPICCHANGE,\n    topic: Topic,\n} \n\nexport interface PAGENOCHANGE {\n    type: typeof PAGENOCHANGE,\n    pageId: number,\n} \n\nexport interface LOGINMODALSTATE {\n    type: typeof LOGINMODALSTATE,\n    on: boolean;\n}\n\nexport interface LOGINSUCCESS {\n    type: typeof LOGINSUCCESS\n}\n\n\nexport interface SETNICKNAME {\n    type: typeof SETNICKNAME,\n    nickName : string,\n}\n\ntype ForumMutation = SETLOADING | FETCHLIST | FETCHPOST  | TOPICCHANGE | LOGINMODALSTATE | PAGENOCHANGE | LOGINSUCCESS | SETNICKNAME\n// --- state\n\nexport interface ForumState {\n    topic : Topic,\n    page: number,\n    postList?: PostListType;\n    list: ListType[],\n    isLoading:boolean,\n    isError:boolean,\n    post?: ContentType,\n    postId: number,\n    isLogined: boolean,\n    isLoginModal: boolean;\n    nickName: string;\n}\n\nexport const ForumStateInitialState : ForumState = {\n    isError: false,\n    isLoading: true,\n    page: 1,\n    postList: undefined,\n    topic:\"free\",\n    post: undefined,\n    postId: 0,\n    list:[],\n    isLoginModal: false,\n    isLogined: false,\n    nickName: \"\",\n}\n\nexport interface ForumReactorProps extends ReactorControlProps<ForumAction, ForumState> { \n    reactor_control: ReactorControlType<ForumAction, ForumState>;\n} ;\n\nexport interface ForumReactorProp {\n    reactor : ForumReactor;\n}\n\nexport default class ForumReactor extends Reactor<ForumAction, ForumState, ForumMutation> {\n\n    mutate(action: ForumAction): Observable<ForumMutation> {\n        switch(action.type) {\n        \n        case \"SETTOPIC\":\n            return of<ForumMutation>({type:\"TOPICCHANGE\", topic: action.newTopic})\n        \n        case \"SETPAGENO\":\n            return of<ForumMutation>({type:\"PAGENOCHANGE\", pageId: action.pageId})\n\n        case \"TOPICLISTREQUSET\":\n            return concat( \n                of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n                this.fetchList(action.newTopic).pipe(\n                    takeUntil(this.action.pipe(filter((value)=> {\n                        return value.type === action.type\n                    }))),\n                    map<PostListType, ForumMutation>( res => {\n                        return {type:\"FETCHLIST\", list: res.postList, page: 1 } \n                    }),\n                ))\n\n        case \"CLICKPAGE\":\n            return concat(\n                //is Loading\n                of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n                //fetching List\n                this.fetchList(this.currentState.topic, action.newPage).pipe(\n                    takeUntil(this.action.pipe(filter(value => value === action))),\n                    map<PostListType, ForumMutation>( res => {\n                        return {type:\"FETCHLIST\", list: res.postList, page: 1 } \n                    })\n                ),\n                of<ForumMutation>({type:\"SETLOADING\", isLoading: false}),\n            )\n\n        case \"CLICKPOST\":\n            return concat(\n            of<ForumMutation>({type:\"SETLOADING\", isLoading: true}),\n            this.fetchPost(action.postId).pipe(\n                map<ContentType, ForumMutation>( res => ({type:\"FETCHPOST\", post : res}))\n            ),\n            )\n\n        case \"CLICKLOGINBUTTON\":\n            return of<ForumMutation>({type:\"LOGINMODALSTATE\", on: true})\n\n        case \"CLICKLOGINOFFBUTTON\":\n            return of<ForumMutation>({type:\"LOGINMODALSTATE\", on: false})\n\n        case \"INVIS_LOGINSUCCESS\":\n            return concat(\n                of<ForumMutation>({type:\"LOGINMODALSTATE\", on: false}),\n                of<ForumMutation>({type:\"LOGINSUCCESS\"}),\n                of<ForumMutation>({type:\"SETNICKNAME\", nickName: action.nickName })\n\n            )\n        }\n\n\n    }\n\n    reduce(state: ForumState, mutation: ForumMutation): ForumState {\n\n        let newState = state;\n        switch(mutation.type) {\n\n            case \"TOPICCHANGE\":\n                newState.topic = mutation.topic;\n                return newState;\n\n            case \"PAGENOCHANGE\":\n                newState.postId = mutation.pageId;\n                return newState;\n\n                case \"SETLOADING\":\n                newState.isLoading = mutation.isLoading\n                return newState\n            case \"FETCHLIST\":\n                newState.isLoading = false;\n                newState.list = mutation.list;\n                newState.page = mutation.page;\n                return newState\n                // if (mutation.list.length === 0){\n                //     newState.isError = true;\n                //     return newState\n                // } else {\n            case \"FETCHPOST\":\n                if (Object.keys(mutation.post).length === 0) {\n                    newState.isError = true;\n                    return newState;\n                } else {\n                    newState.post = mutation.post;\n                    newState.isLoading = false;\n                    return newState;\n                }\n            case \"LOGINMODALSTATE\":\n                newState.isLoginModal = mutation.on;\n                return newState;\n\n            case \"LOGINSUCCESS\":\n                newState.isLogined = true;\n                return newState;\n\n            case \"SETNICKNAME\":\n                newState.nickName = mutation.nickName;\n                return newState;\n        }\n    }\n   \n    fetchList(topic: Topic, page: number = 1) : Observable<PostListType> {\n        return ajax.getJSON<PostListType>(`https://www.r6-search.me/api/c/topic/${topic}?page=${page}`)\n    }\n\n    fetchPost(postId: number) : Observable<ContentType> {\n        return ajax.getJSON<ContentType>(`https://www.r6-search.me/api/c/post/${postId}`)\n    }\n\n }","import React from \"react\";\nimport ForumReactor, { ForumState, ForumStateInitialState, ForumAction } from \"./ForumReactor\";\nimport { deepDistinctUntilChanged, ReactorControlType } from \"reactivex-redux\";\nimport styled from \"styled-components\";\nimport { map } from \"rxjs/operators\";\n\nconst FROUMMARGIN = styled.div`\n    margin: 0 auto;\n    max-width: 1200px;\n    margin-top:90px;\n    padding: 0 1rem;\n`\n\nexport class R6Forum extends React.Component {\n    \n    reactor?: ForumReactor | undefined;\n    reactorControls?: ReactorControlType<ForumAction, ForumState>;\n    initialState?: ForumState\n\n    componentWillMount(){\n        this.reactor = new ForumReactor(ForumStateInitialState)\n        this.reactorControls = this.reactor.getReactorControl();\n    }\n\n    componentDidMount(){\n\n        // this.reactor?.dispatch({type:\"CLICKTOPIC\", newTopic:\"tips\"});\n        \n        // this.reactor!.disposedBy = this.reactor?.state.pipe(\n        //     map( value => value.mode ),\n        //     deepDistinctUntilChanged(),\n        // ).subscribe( \n        //     mode=> this.setState({mode})\n        // )\n    }\n\n    componentWillUnmount(){\n        this.reactor?.disposeAll();\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <FROUMMARGIN>\n                        {/* <R6CommunityNavigation reactor_control={this.reactorControls!}></R6CommunityNavigation> */}\n                        {/* {\n                            this.reactor?.currentState.mode === \"list\" &&\n                                <R6List reactor_control={this.reactorControls!}></R6List>\n                        }\n                        {\n                            this.reactor?.currentState.mode === \"list\" &&\n                                <R6ListFooter reactor_control={this.reactorControls!}></R6ListFooter>\n                        }\n                        {\n                            this.reactor?.currentState.mode === \"edit\" &&\n                                <R6PostWrite reactor_control={this.reactorControls!}></R6PostWrite>\n                        }\n                        {\n                            this.reactor?.currentState.mode === \"view\" &&\n                                <R6Post reactor_control={this.reactorControls!}></R6Post>\n                        } */}\n                </FROUMMARGIN>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default R6Forum;","import { Reactor } from \"reactivex-redux\"\nimport { Observable, concat, of } from \"rxjs\"\nimport { ajax } from \"rxjs/ajax\"\nimport { map, catchError, flatMap, tap } from \"rxjs/operators\"\nimport R6Ajax from \"../../../Library/R6Ajax\"\n\nconst LOGIN = \"LOGIN\"\nconst CLOSELOGIN = \"CLOSELOGIN\"\n\n\ninterface LOGIN {\n    type : typeof LOGIN,\n    id : string,\n    pwd: string,\n}\n\ninterface CLOSELOGIN {\n    type : typeof CLOSELOGIN,\n}\n\nexport type LoginAction = LOGIN | CLOSELOGIN \n\n\nconst LOGINCHECKLOADING = \"LOGINCHECKLOADING\"\nconst LOGINSUCCESS = \"LOGINSUCCESS\"\nconst LOGINFAILURE = \"LOGINFAILURE\"\nconst CLOSE = \"CLOSE\"\n\n\ninterface LOGINCHECKLOADING {\n    type : typeof LOGINCHECKLOADING,\n}\n\ninterface LOGINSUCCESS {\n    type : typeof LOGINSUCCESS,\n}\n\ninterface LOGINFAILURE {\n    type : typeof LOGINFAILURE,\n    message: string\n}\n\ninterface CLOSE {\n    type : typeof CLOSE,\n}\n\ntype LoginMutation = LOGINCHECKLOADING | LOGINSUCCESS | LOGINFAILURE | CLOSE\n\nexport interface LoginState {\n    isLoading: boolean,\n    isError:boolean,\n    isSuccess: boolean,\n    message:string,\n}\n\nexport const LoginInitialState : LoginState = {\n    isLoading : false,\n    isError: false,\n    isSuccess : false,\n    message:\"\",\n}\n\nexport default class LoginReactor extends Reactor<LoginAction, LoginState, LoginMutation> {\n\n    mutate(action: LoginAction): Observable<LoginMutation> {\n\n        switch(action.type) {\n\n            case \"LOGIN\":\n\n                if (action.id === \"\" || action.pwd === \"\") {\n                    return of<LoginMutation>({type:\"LOGINFAILURE\", message: \"아이디 & 패스워드를 입력해주세요.\"})\n                }\n\n                return concat( \n                    of<LoginMutation>({type:\"LOGINCHECKLOADING\"}),\n                    this.login(action.id, action.pwd)\n                )\n\n            case \"CLOSELOGIN\":\n                return of({type:\"CLOSE\"})\n        }\n    }\n\n    reduce(state: LoginState, mutation: LoginMutation): LoginState {\n\n        let newState = {...this.initialState};\n\n        switch(mutation.type) {\n\n            case \"LOGINCHECKLOADING\":\n                newState.isLoading = true;\n                return newState;\n\n            case \"LOGINFAILURE\":\n                newState.message = mutation.message;\n                newState.isError = true;\n                return newState;\n\n            case \"LOGINSUCCESS\" :\n                newState.isSuccess = true;\n                return newState;\n\n            case \"CLOSE\":\n                return newState;\n        }\n    }\n    \n    login(id : string, pwd: string) {\n        return R6Ajax.shared.signIn(id, pwd).pipe(\n            map<any,LoginMutation>( value => ({type:\"LOGINSUCCESS\"})),\n            catchError( err => {\n                return of<LoginMutation>({type:\"LOGINFAILURE\", message: err.response.message})\n            })\n        )\n    }\n        // return ajax.post(`https://www.r6-search.me/api/c/signin`, { password : pwd, username: id }, {\n        //     \"Content-Type\": \"application/json\"\n        // }).pipe( \n        //     map( value => ({type: \"LOGINSUCCESS\"} as LoginMutation)),\n        //     catchError( err =>{\n        //         return of<LoginMutation>({type:\"LOGINFAILURE\", message: err.response.message})\n        //     } )\n        // )\n}\n","import React, { SetStateAction, Dispatch } from \"react\";\nimport { Transition, Image, Modal, Header, Button, Input, Icon, Form, Message } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport './R6Login.css';\nimport { motion } from 'framer-motion'\nimport LoginReactor, { LoginInitialState, LoginState } from \"./R6LoginReactor\";\nimport { filter, distinctUntilChanged, skip, map, tap } from \"rxjs/operators\";\nimport _ from \"lodash\";\nimport { ForumReactorProps, ForumReactorProp } from \"../../@0ForumReactor/ForumReactor\";\nimport { withReactor } from \"reactivex-redux\";\nimport { createPortal } from \"react-dom\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\nconst MODALCONTAINER = styled.div`\n    position:fixed;\n    z-index:50;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(23,25,29,.7);\n`\n\nconst MODALCONTENTCONTAINER = styled.div`\n    position:relative;\n\n    display:flex;\n    z-index:51;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    height:100%;\n`\n\nconst MODALCONTENT = styled.div`\n    position:relative;\n    background:#2c3035;\n    color:white;\n    max-width:700px;\n    width: 100%;\n    text-align:center;\n    overflow:hidden;\n    border-radius:10px;\n    height:432px;\n    display:flex;\n`\n\nconst LEFT = styled.div`\n    position:relative;\n    flex:1;\n`\n\nconst RIGHT = styled.div`\n    position:relative;\n    overflow:hidden;\n    flex:0.62;\n    display:flex;\n`\n\nconst RIGHTIMAGE= styled.img`\n    position:relative;\n    height:100%;\n    left:-50%;\n`\n\nconst HEADER = styled.div`\n    padding:50px 0 30px;\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-weight:700;\n    color:#e5e6e7;\n    font-size:2.3rem;\n`\n\n\nconst SUBHEADER = styled.p`\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-weight:700;\n    color:#b6b7b8;\n    font-size:1.4rem;\n`\n\n\nconst FORMCONTAINER = styled.div`\n    width:100%;\n    padding:0 40px;\n    text-align:left;\n\n    div { \n        margin-bottom:5px;\n    }\n`\n\nconst MOCKUP = styled.div`\n`\n\nconst DESCRIPTION = styled.p`\n    position:relative;\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    color:#646568;\n    padding:0 30px;\n    font-size:0.8rem;\n    padding-top:10px;\n`\n\nconst ICON = styled.div`\n    position:absolute;\n    top:10px;\n    right:10px;\n    background:#2c3035;\n    width:30px;\n    height:30px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    border-radius:10px;\n    i.icon {\n        margin:0px;\n    }\n`\n\nconst FOOTER = styled.div`\n    position:absolute;\n    bottom:20px;\n    right:40px;\n`\n\nconst BLACKLAYER = styled.div<{visible: boolean}>`\n    display:${props => props.visible? \"block;\" : \"none;\"}\n    position:fixed;\n    z-index:50;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(23,25,29,.7);\n`\n\nconst OTHERCONTENTS = styled.div`\n    position:fixed;\n    z-index:50;\n    top:50%;\n    left:50%;\n    transform : translate3d(-50%, -50%, 0);\n`\n\n\n\nconst isError = {\n    errorOn : { x : [0, -5, 0, 5, 0] },\n    errorOff : { x : 0 }\n}\n\nexport class R6Login extends React.Component<ForumReactorProps & RouteComponentProps, LoginState>  {\n\n    idInput = React.createRef<HTMLInputElement>();\n    pwdInput = React.createRef<HTMLInputElement>();\n\n    reactor?: LoginReactor | null;\n\n    constructor(props:any){\n        super(props)\n        this.state = LoginInitialState;\n    }\n\n\n    componentDidMount(){\n\n        this.reactor = new LoginReactor(LoginInitialState)        \n        //if close => then \n\n        \n        if (this.reactor) {\n\n            //if is success.. => then \n            this.reactor.disposedBy = this.reactor?.state.pipe(\n                filter((value,index) => { return value.isSuccess !== true}),\n                distinctUntilChanged(_.isEqual),\n                skip(1),\n            ).subscribe(\n                res => {\n                    this.setState({...res})\n                }\n            )\n\n            // login success\n            this.reactor.disposedBy = this.reactor?.state.pipe(\n                filter((value,index) => { return value.isSuccess === true}),\n                distinctUntilChanged(_.isEqual),\n                // skip(1)\n            ).subscribe(\n                res => {\n                    this.reactor?.dispatch({type:\"CLOSELOGIN\"})\n                    this.props.reactor_control?.dispatcher({type:\"INVIS_LOGINSUCCESS\", nickName: this.idInput.current!.value})()\n                }\n                // res => this.props.history.push('/register')\n            )\n\n        }\n    }\n      \n    componentWillUnmount(){\n        this.reactor?.disposeAll();\n        this.reactor = null;\n    }\n\n    handleClick(){\n        this.reactor?.dispatch({type:\"CLOSELOGIN\"})\n        this.props.reactor_control.dispatcher({type:\"CLICKLOGINOFFBUTTON\"})()\n    }\n\n    render(){\n        //isopen or not..\n        \n        const { isLoginModal } = this.props.reactor_control.getState();\n        // this.props.reactor_control.getState();\n\n        if (!isLoginModal) {\n            return null;\n        } else {\n            return ( \n                <>\n                    <motion.div \n                        initial={{ opacity:0.2}}\n                        animate={{ opacity:0.6}}\n                        className=\"black-layer\"\n                        onClick={this.handleClick.bind(this)}\n                    /> \n                    {/* <div className=\"login-container\"> */}\n                    <motion.div \n                            initial={{ scale:0.95,  y : '100%', opacity: 0}}\n                            animate={{ scale:1, y : '0%', opacity : 1}}\n                            className=\"login-content-container\" \n                            transition = {{\n                                when: \"beforeChildren\",\n                                type:\"spring\",\n                                // stiffness: 20,\n                                mass:0.1,\n                            }}>\n                            \n                            <a className=\"login-content-exit-button\" onClick={this.handleClick.bind(this)}> 닫기 </a>\n                        \n                            <div className=\"left\">\n                                {/* <img src={require('./season18-he.jpg')} />\n                                <div className=\"login-content-imageLayer\"></div>   */}\n                                \n                                <p className=\"login-header-text text-align-center\">\n                                    로그인하기\n                                </p>\n\n                                <Form error={this.state.isError}>\n                                    <Message error negative \n                                    header={this.state.message}\n                                    />\n\n                                    <Form.Field >\n                                        <label style={{color:'white'}}>아이디</label>\n                                        <input placeholder='ID' ref={this.idInput}/>\n                                    </Form.Field>\n                                    <Form.Field>\n                                        <label style={{color:'white'}}>비밀번호</label>\n                                        <input placeholder='password' type={\"password\"} ref={this.pwdInput}/>\n                                    </Form.Field>\n                                </Form>\n\n                                <motion.div \n                                    animate={ this.state.isError ? \"errorOn\" : \"errorOff\"}\n                                    variants={ isError }\n                                    transition={{ loop: 3, duration: 0.1}}\n                                > \n                                    <Button fluid color={\"green\"} disabled={this.state.isLoading} loading={this.state.isLoading} className=\"success-button\" onClick={()=>{                                        \n                                        this.reactor?.dispatch({\n                                            type:\"LOGIN\", \n                                            id: this.idInput.current!.value,\n                                            pwd:this.pwdInput.current!.value\n                                        })\n                                    }}> 로그인하기 </Button>\n                                 </motion.div>\n\n                                <p className=\"description text-align-left\">\n                                    로그인은 개인 정보 보호 정책 및  서비스 약관에 동의하는 것을 의미합니다.\n                                </p>\n                                <Button inverted className=\"register-button\" onClick={()=>{\n                                    this.props.history.push('/register')\n                                }}> 회원가입하기 </Button>\n                            </div>\n\n                            <div className=\"right\">\n                                <img src={require('./season18-he.jpg')}/>\n                            </div>\n                        \n                    </motion.div>\n\n                    </>\n              )\n        }\n    }\n    \n}\n\nexport default withRouter(withReactor(R6Login, (state) => ({isLoginModal: state.isLoginModal}))) ","\nimport {Reactor} from 'reactivex-redux'\nimport { Observable, of, concat } from 'rxjs'\nimport { ajax } from 'rxjs/ajax'\nimport { map, catchError } from 'rxjs/operators'\n\nconst SUBMIT = \"SUBMIT\" \n\ninterface SUBMIT {\n    type : typeof SUBMIT,\n    id : string,\n    pwd: string,\n    pwd2: string,\n    email: string,\n}\n\nexport type RegisterAction = SUBMIT\n\nconst IDERROR = \"IDERROR\"\nconst PWDERROR = \"PWDERROR\"\nconst PWD2ERROR = \"PWD2ERROR\"\nconst EMAILERROR = \"EMAILERROR\"\nconst VALIDATEDPASS = \"VALIDATEDPASS\"\nconst SUCCESS = \"SUCCESS\"\nconst REGISTERERROR = \"REGISTERERROR\"\n\ninterface IDERROR {\n    type: typeof IDERROR\n    messageHeader:string;\n    messageDesc: string;\n}\n\ninterface PWDERROR {\n    type: typeof PWDERROR\n    messageHeader:string;\n    messageDesc: string;\n}\n\ninterface PWD2ERROR {\n    type: typeof PWD2ERROR\n    messageHeader:string;\n    messageDesc: string;\n}\n\ninterface EMAILERROR {\n    type: typeof EMAILERROR\n    messageHeader:string;\n    messageDesc: string;\n}\ninterface VALIDATEDPASS {\n    type: typeof VALIDATEDPASS\n}\n\ninterface SUCCESS {\n    type: typeof SUCCESS\n}\n\ninterface REGISTERERROR {\n    type : typeof REGISTERERROR\n    messageHeader:string;\n    messageDesc: string;\n}\n\nexport type RegisterMutation = IDERROR | PWDERROR | PWD2ERROR | EMAILERROR | VALIDATEDPASS | SUCCESS | REGISTERERROR\n\nexport const RegisterInitialState : RegisterState = {\n     isError : false,\n     isIdError: false,\n     isPwd2Error: false,\n     isPwdError: false,\n     isEmailError: false,\n     isValidated:false,\n     isSuccess: false,\n     messageHeader:\"\",\n     messageDesc:\"\"\n}\n\nexport interface RegisterState {\n    isError: boolean;\n    isIdError:boolean;\n    isPwdError:boolean;\n    isPwd2Error:boolean;\n    isEmailError:boolean;\n    isValidated:boolean;\n    isSuccess:boolean;\n    messageHeader:string;\n    messageDesc:string;\n}\n\nconst MessageSet1 = {\n    messageHeader:\"아이디 오류\",\n    messageDesc:\"아이디를 입력해주세요.\"\n}\n\nconst MessageSet2 = {\n    messageHeader:\"비밀번호 오류\",\n    messageDesc:\"비밀번호를 확인해주세요.\"\n}\n\nconst MessageSet3 = {\n    messageHeader:\"비밀번호 오류\",\n    messageDesc:\"비밀번호가 일치하지 않습니다.\"\n}\n\nconst MessageSet4 = {\n    messageHeader:\"이메일 오류\",\n    messageDesc:\"정상적인 이메일 포맷이 아닙니다.\"\n}\n\nconst tester = new RegExp(`([A-Z]|[a-z]|[0-9]){1,}\\@([A-Z]|[a-z]|[0-9]){1,}\\.([A-Z]|[a-z]){1,}`);\n\nexport default class R6RegisterReactor extends Reactor<RegisterAction, RegisterState, RegisterMutation> {\n\n\n    mutate(action: SUBMIT): Observable<RegisterMutation> {\n        switch(action.type) {\n            case \"SUBMIT\":\n                if (!action.id) {\n                    return of<RegisterMutation>({type:\"IDERROR\", ...MessageSet1})\n                }\n\n                if (!action.pwd) {\n                    return of<RegisterMutation>({type:\"PWDERROR\", ...MessageSet2})\n                }\n\n                if (action.pwd !== action.pwd2) {\n                    return of<RegisterMutation>({type:\"PWD2ERROR\", ...MessageSet3})\n                }\n\n                if (!tester.test(action.email)) {\n                    return of<RegisterMutation>({type:\"EMAILERROR\", ...MessageSet4})\n                }\n\n                return concat( \n                    of<RegisterMutation>({type:\"VALIDATEDPASS\"}),\n                    this.registerRequest(action.id, action.pwd, action.pwd2, action.email)\n                    // of<RegisterMutation>({type:\"REGISTERERROR\", messageDesc : \"아이디 중복\", messageHeader:\"아이디가 중복되었습니다. 아이디를 변경해주세요\"}),\n                    // //if this is pass, send them pass here.\n                    // this.registerRequest(action.id, action.pwd)\n                )\n               \n        }\n    }\n\n    reduce(state: RegisterState, mutation: RegisterMutation): RegisterState {\n        let newState = state\n\n        newState = {...this.initialState}\n\n        switch(mutation.type){\n            case \"IDERROR\":\n                newState.isError = true;\n                newState.isIdError = true;\n                newState.messageDesc = mutation.messageDesc;\n                newState.messageHeader = mutation.messageDesc;\n                return newState;\n            case \"PWDERROR\":\n                newState.isError = true;\n                newState.isPwdError = true;\n                newState.messageDesc = mutation.messageDesc;\n                newState.messageHeader = mutation.messageDesc;\n                return newState;\n            case \"PWD2ERROR\":\n                newState.isError = true;\n                newState.isPwdError = true;\n                newState.isPwd2Error = true;\n                newState.messageDesc = mutation.messageDesc;\n                newState.messageHeader = mutation.messageDesc;\n                return newState;\n            case \"EMAILERROR\":\n                newState.isError = true;\n                newState.isEmailError = true;\n                newState.messageDesc = mutation.messageDesc;\n                newState.messageHeader = mutation.messageDesc;\n                return newState;\n\n            case \"VALIDATEDPASS\" :\n                newState.isError = false;\n                newState.isValidated = true;\n                return newState;\n\n            case \"REGISTERERROR\":\n                newState.isError = true;\n                newState.messageDesc = mutation.messageDesc;\n                newState.messageHeader = mutation.messageHeader;\n                return newState;\n\n            case \"SUCCESS\":\n                newState.isSuccess = true;\n                return newState;\n        }\n    }\n\n    registerRequest(id: string, pwd: string, pwd2: string, email: string) : Observable<RegisterMutation> {\n\n       return ajax.post('https://www.r6-search.me/api/c/signup', { password : pwd, username: id,  email: email}, {\n        \"Content-Type\": \"application/json\"\n       }).pipe(\n            map( value => ({type: \"SUCCESS\"} as RegisterMutation)),\n            catchError( err =>{\n                return of<RegisterMutation>({type:\"REGISTERERROR\", messageHeader: \"서버쪽 오류\", messageDesc: err.response.message})\n            } )\n        )\n    }\n\n\n    \n\n}\n","import React from \"react\";\nimport { R6LottieLoader } from \"../../@Reusable-Component\";\nimport { Header, Button } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Media from 'react-media';\n\n\nconst CENTER = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nfunction R6RegisterConfirmation({ history } : RouteComponentProps) {\n\n    return(\n        <CENTER>\n            <Media query={{ maxWidth: 599 }}>\n                {matches =>\n                    matches ? (\n                        <>\n                        <Header size={\"small\"}> 회원가입 인증메일을 보냈어요! </Header>\n                        <span> 메일이 도착하지 않았다면, 스팸함도 체크해주세요! </span>\n                        <R6LottieLoader key={\"1\"} path={\"https://assets1.lottiefiles.com/packages/lf20_y9qOnk.json\"} speed={0.8} width={150} height={150}/>\n                        <Button fluid color=\"green\" onClick={()=> history.push('/')}> 돌아가기 </Button>\n                        </>\n                    ) : (\n                        <>\n                            <Header size={\"huge\"}> 회원가입 인증메일을 보냈어요! </Header>\n                            <span> 메일이 도착하지 않았다면, 스팸함도 체크해주세요! </span>\n                            <R6LottieLoader key={\"2\"} path={\"https://assets1.lottiefiles.com/packages/lf20_y9qOnk.json\"} speed={0.8} width={300} height={300}/>\n                            <Button fluid color=\"green\" onClick={()=> history.push('/')}> 돌아가기 </Button>\n                        </>\n                    )\n                }\n            </Media>\n        </CENTER> \n    )\n}\n\nexport default withRouter(R6RegisterConfirmation)","import { Form, Button, Header, Message } from \"semantic-ui-react\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport './R6Register.css'\nimport { motion } from \"framer-motion\";\nimport R6RegisterReactor, { RegisterInitialState, RegisterState } from \"./R6RegisterReactor\";\nimport { filter , skip, distinctUntilChanged  } from \"rxjs/operators\";\nimport _ from \"lodash\";\nimport R6RegisterConfirmation from \"./R6RegisterConfirmation\";\nimport Media from \"react-media\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//#36393f\n//https://gist.github.com/barbiturat/49facf4eeec1e2a5352ff4fa6bbf7286\n//https://gist.github.com/barbiturat/49facf4eeec1e2a5352ff4fa6bbf7286\n// 김종민님 + 인프런 인터렉티브 웹<div className=\"\"></div>\n\nclass R6Register extends React.PureComponent<RouteComponentProps, RegisterState> {\n\n    reactor?: R6RegisterReactor | null;\n\n    idInput = React.createRef<HTMLInputElement>();\n    pwdInput = React.createRef<HTMLInputElement>();\n    pwd2Input = React.createRef<HTMLInputElement>();\n    emailInput = React.createRef<HTMLInputElement>();\n\n    constructor(props:any) {\n        super(props);\n        this.state = RegisterInitialState;\n    }\n\n    UNSAFE_componentWillMount(){\n        this.reactor = new R6RegisterReactor(RegisterInitialState)        \n    }\n    \n    componentDidMount(){\n\n        // image scale change?\n        \n        if (this.reactor) {\n\n            this.reactor.disposedBy = this.reactor?.state.pipe(\n                filter((value,index) => { return value.isSuccess !== true}),\n                distinctUntilChanged(_.isEqual),\n                skip(1),\n            ).subscribe(\n                res => {\n                    this.setState({...res})\n                }\n            )\n            //isSuccess..\n            this.reactor.disposedBy = this.reactor?.state.pipe(\n                filter((value,index) => { return value.isSuccess === true}),\n                distinctUntilChanged(_.isEqual),\n            ).subscribe(\n                res => {\n                    this.setState({isSuccess : true })\n                }\n            )\n\n        }\n    }\n\n    componentWillUnmount(){\n        this.reactor?.disposeAll();\n        this.reactor = null;\n    }\n\n    render(){\n       return( \n        <>\n    \n        <div className=\"register-container\">\n            <div className=\"register-background-img\"> </div>\n            <motion.div \n                className=\"register-black-layer\"\n                initial={{ opacity:0.1}}\n                animate={{ opacity:0.5}}\n            />\n\n            <motion.div \n                className=\"register-content\"   \n                initial={{ scale: 1.1, opacity:0.5, y:'-5%' }}\n                animate={{ scale: 1, opacity:1, y:'0%'}}\n                >\n\n                { this.state.isSuccess ? <R6RegisterConfirmation/> \n                :\n                (<React.Fragment>\n                    <Form error={this.state.isError}>\n                        <Media query={{ maxWidth: 599 }}>\n                            {matches =>\n                                matches ? (\n                                    <Header className=\"header-center\" size={\"medium\"}> 계정 만들기 </Header>\n                                ) : (\n                                    <Header className=\"header-center\" size={\"huge\"}> 계정 만들기 </Header>\n                                )\n                            }\n                        </Media>\n                        <Message\n                            error\n                            header={this.state.messageDesc}\n                        />\n                        <Form.Field required error={this.state.isIdError}>\n                        <label>아이디</label>\n                        <input placeholder='ID' ref={this.idInput}/>\n                        </Form.Field>\n                        <Form.Field required error={this.state.isPwdError}>\n                        <label>비밀번호</label>\n                        <input placeholder='Password' type={\"password\"} ref={this.pwdInput}/>\n                        </Form.Field>\n                        <Form.Field required error={this.state.isPwd2Error}>\n                        <label>비밀번호 확인</label>\n                        <input placeholder='Password' type={\"password\"} ref={this.pwd2Input}/>\n                        </Form.Field>\n                        <Form.Field required error={this.state.isEmailError}>\n                        <label>인증용 아이디</label>\n                        <input placeholder='Email' type={\"email\"} ref={this.emailInput}/>\n                        </Form.Field>\n                    </Form>\n\n                    <Button id=\"button-top-margin\" type='submit' fluid color={this.state.isError? \"red\" : \"green\"} loading={this.state.isValidated} disabled={this.state.isValidated}\n                    onClick={()=>{\n                        this.reactor?.dispatch(\n                            {\n                                type:\"SUBMIT\", \n                                id : this.idInput.current!.value,\n                                email : this.emailInput.current!.value,\n                                pwd : this.pwdInput.current!.value,\n                                pwd2 : this.pwd2Input.current!.value,\n\n                            })\n                        }}>계속하기</Button>\n\n                    <div className=\"button-bottom-top\"><a onClick={()=>{\n                        this.props.history.goBack();\n                    }}> 이미 계정이 있으신가요? </a> </div>\n                    <div> 등록하는 순간 R6-Community 서비스의 <a>이용 약관</a>과 <a>개인정보 보호 정책</a>에 동의하게 됩니다. </div>\n                    </React.Fragment>\n                )}\n            </motion.div>\n\n        </div>\n\n\n        </>\n       )\n    \n    }\n}\n\nexport default withRouter(R6Register)","import React, { useState, Suspense, lazy } from 'react';\nimport './App.css';\n\nimport styled from 'styled-components'\n// import { ModalReactor } from './Component/Modal/ModalReactor';\n\nimport { \n  R6Navigation, \n  R6Footer\n} from './Component';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  RouteComponentProps,\n  withRouter,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { createPortal } from \"react-dom\";\n\n\nimport Page404 from './Component/@2Content/Page404/Page404';\nimport { ForumReactor } from './Component/@0ForumReactor';\nimport { ForumStateInitialState, Topic } from './Component/@0ForumReactor/ForumReactor';\nimport { values } from 'lodash';\nimport { deepDistinctUntilChanged } from 'jsreactorkit';\nimport { skip } from 'rxjs/operators';\nimport { Divider, Portal } from 'semantic-ui-react';\nimport { R6Login, R6Register } from './Component/@2Content/Login';\nimport R6Ajax from './Library/R6Ajax';\n\nconst ListComponent = lazy( () => import('./Component/@2Content/Contents/List/R6List'))\nconst EditorComponent = lazy( () =>  import('./Component/@2Content/Contents/Post/Edit/R6PostWrite'))\nconst PostComponent = lazy( () =>  import('./Component/@2Content/Contents/Post/View/R6Post'))\n\nconst SECTIONWRAPPER = styled.div`\n  min-height:90vh;\n`\n\n\n\n\nconst PADDER = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 1.5rem 1rem;\n`\n\n\n\n\nclass Main extends React.PureComponent<RouteComponentProps> {\n\n  reactor: ForumReactor;\n  reactorControl: any;\n  newTopic: Topic;\n\n  constructor(props:RouteComponentProps){\n\n    super(props);\n\n    let regexp = new RegExp(`\\/[a-z]{1,}|\\/`);\n    let pathname = this.props.location.pathname;\n    let progressed = regexp.exec(pathname);\n    let excuted = progressed ? progressed[0] : \"/null\";\n\n\n    if (pathname === \"/\") {\n      ForumStateInitialState.topic = \"free\" as Topic\n    } else if ( ![\"free\", \"clan\", \"together\", \"tips\"].includes(excuted.substr(1))) {\n      this.props.history.push('/error/404');\n    } else {\n      ForumStateInitialState.topic = excuted.substr(1) as Topic\n    }\n\n    const splittedPathname = this.props.location.pathname.split('/');\n\n    if (splittedPathname.length === 4) {\n      if (splittedPathname[2] === \"post\") {\n        ForumStateInitialState.postId = parseInt(splittedPathname[3]);\n      }\n    }\n\n\n    // if (splittedPathname.length === 3) {\n    //   if (splittedPathname[2] === \"editor\") {\n    //   }\n    // }\n\n    this.newTopic = ForumStateInitialState.topic;\n    this.reactor = new ForumReactor(ForumStateInitialState);\n    this.reactorControl = this.reactor.getReactorControl();\n\n  }\n\n  componentDidMount(){\n    // this.reactor.dispatch({type:\"CLICKTOPIC\", newTopic:this.newTopic})\n  }\n\n  /** url정리 및 PRomps기능\n   * https://reactrouter.com/web/example/query-parameters\n   */\n\n  render(){\n    return(\n      <React.Fragment>\n\n         <R6Navigation reactor={this.reactor}></R6Navigation>\n         <R6Login reactor_control={this.reactorControl}></R6Login>\n\n         <PADDER>\n          <Switch>\n\n              <Route path={[\"/\",\"/:type\"]}  exact >\n                <ListComponent reactor={this.reactor}/>\n              </Route>\n\n              <Route path=\"/:style/post/:postid\">\n                <PostComponent reactor={this.reactor}/>\n              </Route>\n\n              <Route path=\"/:style/editor\">\n                <EditorComponent reactor={this.reactor}/>\n              </Route>\n              \n\n              <Route path=\"*\">\n                <Page404></Page404>\n              </Route>\n\n              <Route path=\"/error/404\">\n                <Page404></Page404>\n              </Route>\n          </Switch>\n        </PADDER>\n     </React.Fragment>\n   );\n  }\n}\n\nexport default withRouter(Main);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense, lazy} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport GlobalLoading from './GlobalLoading';\nimport { R6Register, R6RegisterConfirmation } from './Component/@2Content/Login';\nimport { R6Footer } from './Component/@3Footer';\nimport R6Comment from './Component/@Reusable-Component/R6Comment';\n\n// works like global reactor.\n// consider using that\n\n\nReactDOM.render(\n  <>\n    <Router>\n      <Suspense fallback={ <div>loading...</div>}>\n        <Switch>\n          <Route path=\"/register\" exact>\n                <R6Register></R6Register>\n          </Route>\n          <Main/>\n        </Switch>\n\n        <R6Footer></R6Footer>\n\n      </Suspense>\n    </Router>\n  </>\n,\n  document.getElementById('root')\n);\n\n// <React.StrictMode>\n\n// </React.StrictMode>,\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}